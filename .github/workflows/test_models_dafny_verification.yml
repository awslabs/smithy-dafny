# This workflow performs static analysis checks.
name: Library Dafny verification

on:
  pull_request:
  push:
    branches:
      - main-1.x

jobs:
  verification:
    strategy:
      matrix:
        library: [
          TestModels/dafny-dependencies/StandardLibrary, # This stores current Polymorph dependencies that all TestModels depend on
          TestModels/Aggregate,
          TestModels/AggregateReferences,
          TestModels/Constraints,
          TestModels/Constructor,
          TestModels/Dependencies,
          TestModels/Errors,
          TestModels/Extendable,
          TestModels/Extern,
          TestModels/Refinement,
          TestModels/Resource,
          # TestModels/SimpleTypes/BigDecimal,
          # TestModels/SimpleTypes/BigInteger,
          TestModels/SimpleTypes/SimpleBlob,
          TestModels/SimpleTypes/SimpleBoolean,
          # TestModels/SimpleTypes/SimpleByte,
          TestModels/SimpleTypes/SimpleDouble,          
          TestModels/SimpleTypes/SimpleEnum,
          # TestModels/SimpleTypes/SimpleEnumV2,
          # TestModels/SimpleTypes/SimpleFloat,
          TestModels/SimpleTypes/SimpleInteger,
          TestModels/SimpleTypes/SimpleLong,
          # TestModels/SimpleTypes/SimpleShort,
          TestModels/SimpleTypes/SimpleString,
          # TestModels/SimpleTypes/SimpleTimestamp,
          TestModels/Union,
          TestModels/aws-sdks/ddb,
          TestModels/aws-sdks/kms,
          TestModels/aws-sdks/sqs,
        ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths
        run: |
          git config --global core.longpaths true

      - uses: actions/checkout@v2

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1
        with:
          dafny-version: "3.10.0"

      # TODO: This has been added has a workaround for https://issues.apache.org/jira/browse/MNG-7679
      # Remove this when the latest version has been patched
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.7.0
        with:
          java-version: 8
          maven-version: 3.8.7

      # Java DafnyRuntime is not published to maven,
      # so manually download a nightly build for 3.10.0 and grab it from there.
      - name: Locally Cache Java DafnyRuntime
        run: |
          wget -q https://github.com/dafny-lang/dafny/releases/download/nightly/dafny-nightly-2022-12-02-edab6cc-x64-osx-10.14.2.zip 
          unzip -qq dafny-nightly-2022-12-02-edab6cc-x64-osx-10.14.2.zip 
          mvn -B -ntp install:install-file \
          -Dfile=dafny/DafnyRuntime.jar \
          -DgroupId=dafny.lang \
          -DartifactId=DafnyRuntime \
          -Dversion=3.10.0 \
          -DgeneratePom=true \
          -Dpackaging=jar

      - name: Setup dafny-java-conversion
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocal
          build-root-directory: dafny-java-conversion

      - name: Generate Polymorph Wrapper Dafny code
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make polymorph_dafny

      - name: Verify ${{ matrix.library }} Dafny code
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make verify CORES=$CORES

      - name: Check solver resource use
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make dafny-reportgenerator
