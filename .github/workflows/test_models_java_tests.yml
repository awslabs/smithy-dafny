# This workflow performs tests in Java.
name: Library Java tests

on:
  pull_request:
  push:
    branches:
      - main-1.x

jobs:
  testJava:
    strategy:
      matrix:
        library: [
          TestModels/dafny-dependencies/StandardLibrary, # This stores current Polymorph dependencies that all TestModels depend on
          # TestModels/Aggregate,
          # TestModels/AggregateReferences,
          # TestModels/Constraints,
          # TestModels/Constructor,
          # TestModels/Dependencies,
          # TestModels/Errors,
          # TestModels/Extendable,
          # TestModels/Extern,
          # TestModels/Refinement,
          # TestModels/Resource,
          # TestModels/SimpleTypes/BigDecimal,
          # TestModels/SimpleTypes/BigInteger,
          # TestModels/SimpleTypes/SimpleBlob,
          # TestModels/SimpleTypes/SimpleBoolean,
          # TestModels/SimpleTypes/SimpleByte,
          # TestModels/SimpleTypes/SimpleDouble,
          # TestModels/SimpleTypes/SimpleEnum,
          # TestModels/SimpleTypes/SimpleEnumV2,
          # TestModels/SimpleTypes/SimpleFloat,
          # TestModels/SimpleTypes/SimpleInteger,
          # TestModels/SimpleTypes/SimpleLong,
          # TestModels/SimpleTypes/SimpleShort,
          # TestModels/SimpleTypes/SimpleString,
          # TestModels/SimpleTypes/SimpleTimestamp,
          # TestModels/Union,
          TestModels/aws-sdks/ddb,
          TestModels/aws-sdks/kms,
        ]
    runs-on: "ubuntu-latest"
    permissions:
      id-token: write
      contents: read
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths on Git checkout
        run: |
          git config --global core.longpaths true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-PolymorphTestModels-Role-us-west-2
          role-session-name: JavaTests

      - uses: actions/checkout@v3

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.4.0
        with:
          dafny-version: "3.10.0"

      - name: Setup Java 
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 8

      # TODO: This has been added has a workaround for https://issues.apache.org/jira/browse/MNG-7679
      # Remove this when the latest version has been patched
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.7.0
        with:
          java-version: 8
          maven-version: 3.8.7

      # Java DafnyRuntime is not published to maven,
      # so manually download a nightly build for 3.10.0 and grab it from there.
      - name: Locally Cache Java DafnyRuntime
        run: |
          wget -q https://github.com/dafny-lang/dafny/releases/download/nightly/dafny-nightly-2022-12-02-edab6cc-x64-osx-10.14.2.zip
          unzip -qq dafny-nightly-2022-12-02-edab6cc-x64-osx-10.14.2.zip
          mvn -B -ntp install:install-file \
          -Dfile=dafny/DafnyRuntime.jar \
          -DgroupId=dafny.lang \
          -DartifactId=DafnyRuntime \
          -Dversion=3.10.0 \
          -DgeneratePom=true \
          -Dpackaging=jar

      - name: Setup dafny-java-conversion
        uses: gradle/gradle-build-action@v2
        with:
          arguments: publishToMavenLocal
          build-root-directory: dafny-java-conversion

      - name: Generate Polymorph Dafny and Java code
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make polymorph_dafny
          make polymorph_java

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make build_java CORES=$CORES
          
      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          make test_java
