# This workflow performs tests in .NET.
name: Library net tests

on:
  pull_request:
  push:
    branches:
      - main-1.x

jobs:
  testDotNet:
    strategy:
      matrix:
        library: [
          TestModels/dafny-dependencies/StandardLibrary, # This stores current Polymorph dependencies that all TestModels depend on
          TestModels/Aggregate,
          # TestModels/AggregateReferences,
          TestModels/Constraints,
          TestModels/Constructor,
          TestModels/Dependencies,
          TestModels/Errors,
          TestModels/Extendable,
          TestModels/Extern,
          # TestModels/LocalService,
          TestModels/Refinement,
          TestModels/Resource,          
          # TestModels/SimpleTypes/BigDecimal,
          # TestModels/SimpleTypes/BigInteger,
          TestModels/SimpleTypes/SimpleBlob,
          TestModels/SimpleTypes/SimpleBoolean,
          # TestModels/SimpleTypes/SimpleByte,
          TestModels/SimpleTypes/SimpleDouble,          
          TestModels/SimpleTypes/SimpleEnum,
          # TestModels/SimpleTypes/SimpleEnumV2,
          # TestModels/SimpleTypes/SimpleFloat,
          TestModels/SimpleTypes/SimpleInteger,
          TestModels/SimpleTypes/SimpleLong,
          # TestModels/SimpleTypes/SimpleShort,
          TestModels/SimpleTypes/SimpleString,
          # TestModels/SimpleTypes/SimpleTimestamp,
          TestModels/Union,
          TestModels/aws-sdks/ddb,
          TestModels/aws-sdks/kms,
          TestModels/aws-sdks/sqs-via-cli,
        ]
        dotnet-version: [ '6.0.x' ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths on Git checkout
        run: |
          git config --global core.longpaths true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-PolymorphTestModels-Role-us-west-2
          role-session-name: NetTests

      - uses: actions/checkout@v3

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.6.1
        with:
          dafny-version: "4.1.0"

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      # GitHub's docs on problem matcher's ::
      # https://github.com/actions/toolkit/blob/master/docs/commands.md#problem-matchers
      - name: Disable setup-dotnet's problem matcher
        # setup-dotnet's problem matcher:
        # https://github.com/actions/setup-dotnet/blob/main/.github/csc.json
        run: echo "::remove-matcher owner=csc::"

      - name: Download Dependencies
        working-directory: ./${{ matrix.library }}
        run: make setup_net

      - name: Setup Java 17 for codegen
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Generate Polymorph Dafny and Dotnet code
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make polymorph_dafny
          make polymorph_net

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make transpile_net CORES=$CORES

      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        shell: bash
        run: |
          make test_net
