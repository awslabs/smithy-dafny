// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(dead_code)]
pub fn to_dafny(
    value: crate::operation::get_thing::GetThingInput,
) -> ::std::rc::Rc<
    crate::implementation_from_dafny::r#_simple_ddocumentation_dinternaldafny_dtypes::GetThingInput,
> {
    let dafny_value = match value.name {
        Some(b) => crate::implementation_from_dafny::_Wrappers_Compile::Option::Some { value: b },
        None => crate::implementation_from_dafny::_Wrappers_Compile::Option::None {},
    };
    ::std::rc::Rc::new(crate::implementation_from_dafny::r#_simple_ddocumentation_dinternaldafny_dtypes::GetThingInput::GetThingInput {        
        name: ::std::rc::Rc::new(dafny_value),
  })
}

#[allow(dead_code)]
pub fn from_dafny(
    dafny_value: ::std::rc::Rc<
        crate::implementation_from_dafny::r#_simple_ddocumentation_dinternaldafny_dtypes::GetThingInput,
    >,
) -> crate::operation::get_thing::GetThingInput {
    let name = if matches!(
        dafny_value.name(),
        crate::implementation_from_dafny::_Wrappers_Compile::Option::Some { .. }
    ) {
        Some(dafny_value.name().Extract())
    } else if matches!(
        dafny_value.name(),
        crate::implementation_from_dafny::_Wrappers_Compile::Option::None {}
    ) {
        None
    } else {
        panic!("Unreachable")
    };
    crate::operation::get_thing::GetThingInput { name }
}
