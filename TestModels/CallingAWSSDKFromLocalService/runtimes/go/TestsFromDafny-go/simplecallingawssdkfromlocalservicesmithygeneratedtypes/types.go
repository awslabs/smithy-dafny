// Code generated by smithy-go-codegen DO NOT EDIT.

package simplecallingawssdkfromlocalservicesmithygeneratedtypes

import (
	"github.com/smithy-lang/smithy-dafny/ddb/ComAmazonawsDynamodbTypes"
	"github.com/smithy-lang/smithy-dafny/kms/ComAmazonawsKmsTypes"
	"fmt"
)

type DdbClientReference struct {
}

func (input DdbClientReference) Validate() (error) {
	
	return nil
}

type CallDDBScanInput struct {
	
	DdbClient ComAmazonawsDynamodbTypes.IDynamoDBClient
	
	TableArn string
}

func (input CallDDBScanInput) Validate() (error) {
	if (len(input.TableArn) < 1) {
	    return fmt.Errorf("TableArn has a minimum length of 1 but has the length of %d.", len(input.TableArn))
	}
	if (len(input.TableArn) > 1024) {
	    return fmt.Errorf("TableArn has a maximum length of 1024 but has the length of %d.", len(input.TableArn))
	}
	
	return nil
}

type CallDDBScanOutput struct {
	
	ItemOutput int32
}

func (input CallDDBScanOutput) Validate() (error) {
	
	return nil
}

type KmsClientReference struct {
}

func (input KmsClientReference) Validate() (error) {
	
	return nil
}

type CallKMSEncryptInput struct {
	
	KeyId string
	
	KmsClient ComAmazonawsKmsTypes.IKMSClient
	
	Plaintext []byte
}

func (input CallKMSEncryptInput) Validate() (error) {
	if (len(input.KeyId) < 1) {
	    return fmt.Errorf("KeyIdType has a minimum length of 1 but has the length of %d.", len(input.KeyId))
	}
	if (len(input.KeyId) > 2048) {
	    return fmt.Errorf("KeyIdType has a maximum length of 2048 but has the length of %d.", len(input.KeyId))
	}
	if (len(input.Plaintext) < 1) {
	    return fmt.Errorf("PlaintextType has a minimum length of 1 but has the length of %d.", len(input.Plaintext))
	}
	if (len(input.Plaintext) > 4096) {
	    return fmt.Errorf("PlaintextType has a maximum length of 4096 but has the length of %d.", len(input.Plaintext))
	}
	
	return nil
}

type CallKMSEncryptOutput struct {
	
	EncryptOutput string
}

func (input CallKMSEncryptOutput) Validate() (error) {
	if (len(input.EncryptOutput) < 1) {
	    return fmt.Errorf("KeyIdType has a minimum length of 1 but has the length of %d.", len(input.EncryptOutput))
	}
	if (len(input.EncryptOutput) > 2048) {
	    return fmt.Errorf("KeyIdType has a maximum length of 2048 but has the length of %d.", len(input.EncryptOutput))
	}
	
	return nil
}

type SimpleCallingAWSSDKFromLocalServiceConfig struct {
}

func (input SimpleCallingAWSSDKFromLocalServiceConfig) Validate() (error) {
	
	return nil
}

type SimpleCallingAWSSDKFromLocalServiceBaseException interface {
    // This is a dummy method to allow type assertion since Go empty interfaces
    // aren't useful for type assertion checks. No concrete class is expected to implement
    // this method. This is also not exported.
    interfaceBindingMethod()
}
