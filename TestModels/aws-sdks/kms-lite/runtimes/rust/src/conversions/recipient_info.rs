// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(dead_code)]
pub fn to_dafny(
    value: aws_sdk_kms::types::RecipientInfo,
) -> ::std::rc::Rc<
    ::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo,
> {
  ::std::rc::Rc::new(::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo::RecipientInfo {
    AttestationDocument: dafny_standard_library::conversion::oblob_to_dafny(&value.attestation_document),
    KeyEncryptionAlgorithm: crate::conversions::key_encryption_mechanism::to_dafny(value.key_encryption_algorithm),
  })
}

pub fn to_dafny_plain(
    value: &aws_sdk_kms::types::RecipientInfo,
) -> ::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo {
  ::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo::RecipientInfo {
    AttestationDocument: dafny_standard_library::conversion::oblob_to_dafny(&value.attestation_document),
    KeyEncryptionAlgorithm: crate::conversions::key_encryption_mechanism::to_dafny(value.key_encryption_algorithm),
  }
}

pub fn option_to_dafny(
    value: Option<&aws_sdk_kms::types::RecipientInfo>,
) -> ::std::rc::Rc<
    kms_lite_dafny::_Wrappers_Compile::Option<
        ::std::rc::Rc<
            ::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo,
        >,
    >,
> {
    let inner = match value {
        None => kms_lite_dafny::_Wrappers_Compile::Option::None {},
        Some(x) => kms_lite_dafny::_Wrappers_Compile::Option::Some {
            value: ::std::rc::Rc::new(to_dafny_plain(x)),
        },
    };
    ::std::rc::Rc::new(inner)
}

#[allow(dead_code)]
pub fn from_dafny(
    dafny_value: ::std::rc::Rc<
        ::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo,
    >,
) -> aws_sdk_kms::types::RecipientInfo {
  aws_sdk_kms::types::RecipientInfo::builder()
    .set_attestation_document(dafny_standard_library::conversion::oblob_from_dafny(dafny_value.AttestationDocument()))
    // .set_key_encryption_algorithm(Some(
    //   dafny_runtime::dafny_runtime_conversions::unicode_chars_false::dafny_string_to_string(
    //       dafny_value.KeyId(),
    //   ),
    .build()
}



#[allow(dead_code)]
pub fn plain_from_dafny(
    dafny_value: &::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo,
) -> aws_sdk_kms::types::RecipientInfo {
  aws_sdk_kms::types::RecipientInfo::builder()
  .set_attestation_document(Some(
      dafny_runtime::dafny_runtime_conversions::unicode_chars_false::dafny_string_to_string(
          dafny_value.KeyId(),
      ),
  ))
  .set_key_encryption_algorithm(Some(
    dafny_runtime::dafny_runtime_conversions::unicode_chars_false::dafny_string_to_string(
        dafny_value.KeyId(),
    ),
))
}

#[allow(dead_code)]
pub fn option_from_dafny(
    dafny_value: ::std::rc::Rc<kms_lite_dafny::_Wrappers_Compile::Option<::std::rc::Rc<
        ::kms_lite_dafny::r#_software_damazon_dcryptography_dservices_dkms_dinternaldafny_dtypes::RecipientInfo,
    >>>,
) -> Option<aws_sdk_kms::types::RecipientInfo> {
    match &*dafny_value {
        kms_lite_dafny::_Wrappers_Compile::Option::Some { value } => {
            Some(plain_from_dafny(value))
        }
        _ => None,
    }
}
