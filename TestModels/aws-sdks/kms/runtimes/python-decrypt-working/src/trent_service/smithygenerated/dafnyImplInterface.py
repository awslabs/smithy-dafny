# Code generated by smithy-python-codegen DO NOT EDIT.

# from software_amazon_cryptography_services_kms_internaldafny import TrentServiceClient
from .dafny_protocol import DafnyRequest

class DafnyImplInterface:
    # impl: Any

    # operation_map cannot be created at dafnyImplInterface create time,
    # as the map's values reference values inside `self.impl`,
    # and impl is only populated at runtime.
    # Accessing these before impl is populated results in an error.
    # At runtime, the map is populated once and cached.
    operation_map = None

    def handle_request(self, input: DafnyRequest):
        if self.operation_map is None:
            self.operation_map = {
                "CancelKeyDeletion": self.impl.CancelKeyDeletion,
                "ConnectCustomKeyStore": self.impl.ConnectCustomKeyStore,
                "CreateAlias": self.impl.CreateAlias,
                "CreateCustomKeyStore": self.impl.CreateCustomKeyStore,
                "CreateGrant": self.impl.CreateGrant,
                "CreateKey": self.impl.CreateKey,
                "Decrypt": self.impl.Decrypt,
                "DeleteAlias": self.impl.DeleteAlias,
                "DeleteCustomKeyStore": self.impl.DeleteCustomKeyStore,
                "DeleteImportedKeyMaterial": self.impl.DeleteImportedKeyMaterial,
                "DescribeCustomKeyStores": self.impl.DescribeCustomKeyStores,
                "DescribeKey": self.impl.DescribeKey,
                "DisableKey": self.impl.DisableKey,
                "DisableKeyRotation": self.impl.DisableKeyRotation,
                "DisconnectCustomKeyStore": self.impl.DisconnectCustomKeyStore,
                "EnableKey": self.impl.EnableKey,
                "EnableKeyRotation": self.impl.EnableKeyRotation,
                "Encrypt": self.impl.Encrypt,
                "GenerateDataKey": self.impl.GenerateDataKey,
                "GenerateDataKeyPair": self.impl.GenerateDataKeyPair,
                "GenerateDataKeyPairWithoutPlaintext": self.impl.GenerateDataKeyPairWithoutPlaintext,
                "GenerateDataKeyWithoutPlaintext": self.impl.GenerateDataKeyWithoutPlaintext,
                "GenerateRandom": self.impl.GenerateRandom,
                "GetKeyPolicy": self.impl.GetKeyPolicy,
                "GetKeyRotationStatus": self.impl.GetKeyRotationStatus,
                "GetParametersForImport": self.impl.GetParametersForImport,
                "GetPublicKey": self.impl.GetPublicKey,
                "ImportKeyMaterial": self.impl.ImportKeyMaterial,
                "ListAliases": self.impl.ListAliases,
                "ListGrants": self.impl.ListGrants,
                "ListKeyPolicies": self.impl.ListKeyPolicies,
                "ListResourceTags": self.impl.ListResourceTags,
                "PutKeyPolicy": self.impl.PutKeyPolicy,
                "ReEncrypt": self.impl.ReEncrypt,
                "ReplicateKey": self.impl.ReplicateKey,
                "RetireGrant": self.impl.RetireGrant,
                "RevokeGrant": self.impl.RevokeGrant,
                "ScheduleKeyDeletion": self.impl.ScheduleKeyDeletion,
                "Sign": self.impl.Sign,
                "TagResource": self.impl.TagResource,
                "UntagResource": self.impl.UntagResource,
                "UpdateAlias": self.impl.UpdateAlias,
                "UpdateCustomKeyStore": self.impl.UpdateCustomKeyStore,
                "UpdateKeyDescription": self.impl.UpdateKeyDescription,
                "UpdatePrimaryRegion": self.impl.UpdatePrimaryRegion,
                "Verify": self.impl.Verify,
            }

         # This logic is where a typical Smithy client would expect the "server" to be.
         # This code can be thought of as logic our Dafny "server" uses
         #   to route incoming client requests to the correct request handler code.
        if input.dafny_operation_input is None:
            return self.operation_map[input.operation_name]()
        else:
            return self.operation_map[input.operation_name](input.dafny_operation_input)
