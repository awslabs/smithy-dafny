# Code generated by smithy-python-codegen DO NOT EDIT.

from .models import (
    AliasListEntry,
    CancelKeyDeletionRequest,
    CancelKeyDeletionResponse,
    ConnectCustomKeyStoreRequest,
    ConnectCustomKeyStoreResponse,
    CreateAliasRequest,
    CreateCustomKeyStoreRequest,
    CreateCustomKeyStoreResponse,
    CreateGrantRequest,
    CreateGrantResponse,
    CreateKeyRequest,
    CreateKeyResponse,
    CustomKeyStoresListEntry,
    DecryptRequest,
    DecryptResponse,
    DeleteAliasRequest,
    DeleteCustomKeyStoreRequest,
    DeleteCustomKeyStoreResponse,
    DeleteImportedKeyMaterialRequest,
    DescribeCustomKeyStoresRequest,
    DescribeCustomKeyStoresResponse,
    DescribeKeyRequest,
    DescribeKeyResponse,
    DisableKeyRequest,
    DisableKeyRotationRequest,
    DisconnectCustomKeyStoreRequest,
    DisconnectCustomKeyStoreResponse,
    EnableKeyRequest,
    EnableKeyRotationRequest,
    EncryptRequest,
    EncryptResponse,
    GenerateDataKeyPairRequest,
    GenerateDataKeyPairResponse,
    GenerateDataKeyPairWithoutPlaintextRequest,
    GenerateDataKeyPairWithoutPlaintextResponse,
    GenerateDataKeyRequest,
    GenerateDataKeyResponse,
    GenerateDataKeyWithoutPlaintextRequest,
    GenerateDataKeyWithoutPlaintextResponse,
    GenerateRandomRequest,
    GenerateRandomResponse,
    GetKeyPolicyRequest,
    GetKeyPolicyResponse,
    GetKeyRotationStatusRequest,
    GetKeyRotationStatusResponse,
    GetParametersForImportRequest,
    GetParametersForImportResponse,
    GetPublicKeyRequest,
    GetPublicKeyResponse,
    GrantConstraints,
    GrantListEntry,
    ImportKeyMaterialRequest,
    ImportKeyMaterialResponse,
    KeyMetadata,
    ListAliasesRequest,
    ListAliasesResponse,
    ListGrantsRequest,
    ListGrantsResponse,
    ListKeyPoliciesRequest,
    ListKeyPoliciesResponse,
    ListResourceTagsRequest,
    ListResourceTagsResponse,
    MultiRegionConfiguration,
    MultiRegionKey,
    PutKeyPolicyRequest,
    ReEncryptRequest,
    ReEncryptResponse,
    ReplicateKeyRequest,
    ReplicateKeyResponse,
    RetireGrantRequest,
    RevokeGrantRequest,
    ScheduleKeyDeletionRequest,
    ScheduleKeyDeletionResponse,
    SignRequest,
    SignResponse,
    Tag,
    TagResourceRequest,
    UntagResourceRequest,
    UpdateAliasRequest,
    UpdateCustomKeyStoreRequest,
    UpdateCustomKeyStoreResponse,
    UpdateKeyDescriptionRequest,
    UpdatePrimaryRegionRequest,
    VerifyRequest,
    VerifyResponse,
)


def DafnyToSmithy_com_amazonaws_kms_CancelKeyDeletionResponse(input):
    return CancelKeyDeletionResponse(
        key_id=input.KeyId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DeleteCustomKeyStoreResponse(input):
    return DeleteCustomKeyStoreResponse(
    )

def DafnyToSmithy_com_amazonaws_kms_AliasListEntry(input):
    return AliasListEntry(
        alias_name=input.AliasName.UnwrapOr(None),
        alias_arn=input.AliasArn.UnwrapOr(None),
        target_key_id=input.TargetKeyId.UnwrapOr(None),
        creation_date=input.CreationDate.UnwrapOr(None),
        last_updated_date=input.LastUpdatedDate.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ListAliasesResponse(input):
    return ListAliasesResponse(
        aliases=[DafnyToSmithy_com_amazonaws_kms_AliasListEntry(list_element) for list_element in input.Aliases.UnwrapOr(None)],
        next_marker=input.NextMarker.UnwrapOr(None),
        truncated=input.Truncated.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ImportKeyMaterialResponse(input):
    return ImportKeyMaterialResponse(
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextResponse(input):
    return GenerateDataKeyPairWithoutPlaintextResponse(
        private_key_ciphertext_blob=input.PrivateKeyCiphertextBlob.UnwrapOr(None),
        public_key=input.PublicKey.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
        key_pair_spec=input.KeyPairSpec.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_Tag(input):
    return Tag(
        tag_key=input.TagKey,
        tag_value=input.TagValue,
    )

def DafnyToSmithy_com_amazonaws_kms_ListResourceTagsResponse(input):
    return ListResourceTagsResponse(
        tags=[DafnyToSmithy_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags.UnwrapOr(None)],
        next_marker=input.NextMarker.UnwrapOr(None),
        truncated=input.Truncated.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GetParametersForImportResponse(input):
    return GetParametersForImportResponse(
        key_id=input.KeyId.UnwrapOr(None),
        import_token=input.ImportToken.UnwrapOr(None),
        public_key=input.PublicKey.UnwrapOr(None),
        parameters_valid_to=input.ParametersValidTo.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ScheduleKeyDeletionResponse(input):
    return ScheduleKeyDeletionResponse(
        key_id=input.KeyId.UnwrapOr(None),
        deletion_date=input.DeletionDate.UnwrapOr(None),
        key_state=input.KeyState.UnwrapOr(None),
        pending_window_in_days=input.PendingWindowInDays.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GetKeyRotationStatusResponse(input):
    return GetKeyRotationStatusResponse(
        key_rotation_enabled=input.KeyRotationEnabled.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_CreateCustomKeyStoreResponse(input):
    return CreateCustomKeyStoreResponse(
        custom_key_store_id=input.CustomKeyStoreId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_UpdateCustomKeyStoreResponse(input):
    return UpdateCustomKeyStoreResponse(
    )

def DafnyToSmithy_com_amazonaws_kms_GetPublicKeyResponse(input):
    return GetPublicKeyResponse(
        key_id=input.KeyId.UnwrapOr(None),
        public_key=input.PublicKey.UnwrapOr(None),
        customer_master_key_spec=input.CustomerMasterKeySpec.UnwrapOr(None),
        key_spec=input.KeySpec.UnwrapOr(None),
        key_usage=input.KeyUsage.UnwrapOr(None),
        encryption_algorithms=[list_element for list_element in input.EncryptionAlgorithms.UnwrapOr(None)],
        signing_algorithms=[list_element for list_element in input.SigningAlgorithms.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_CustomKeyStoresListEntry(input):
    return CustomKeyStoresListEntry(
        custom_key_store_id=input.CustomKeyStoreId.UnwrapOr(None),
        custom_key_store_name=input.CustomKeyStoreName.UnwrapOr(None),
        cloud_hsm_cluster_id=input.CloudHsmClusterId.UnwrapOr(None),
        trust_anchor_certificate=input.TrustAnchorCertificate.UnwrapOr(None),
        connection_state=input.ConnectionState.UnwrapOr(None),
        connection_error_code=input.ConnectionErrorCode.UnwrapOr(None),
        creation_date=input.CreationDate.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DescribeCustomKeyStoresResponse(input):
    return DescribeCustomKeyStoresResponse(
        custom_key_stores=[DafnyToSmithy_com_amazonaws_kms_CustomKeyStoresListEntry(list_element) for list_element in input.CustomKeyStores.UnwrapOr(None)],
        next_marker=input.NextMarker.UnwrapOr(None),
        truncated=input.Truncated.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyResponse(input):
    return GenerateDataKeyResponse(
        ciphertext_blob=input.CiphertextBlob.UnwrapOr(None),
        plaintext=input.Plaintext.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyPairResponse(input):
    return GenerateDataKeyPairResponse(
        private_key_ciphertext_blob=input.PrivateKeyCiphertextBlob.UnwrapOr(None),
        private_key_plaintext=input.PrivateKeyPlaintext.UnwrapOr(None),
        public_key=input.PublicKey.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
        key_pair_spec=input.KeyPairSpec.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateRandomResponse(input):
    return GenerateRandomResponse(
        plaintext=input.Plaintext.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyWithoutPlaintextResponse(input):
    return GenerateDataKeyWithoutPlaintextResponse(
        ciphertext_blob=input.CiphertextBlob.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_MultiRegionKey(input):
    return MultiRegionKey(
        arn=input.Arn.UnwrapOr(None),
        region=input.Region.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_MultiRegionConfiguration(input):
    return MultiRegionConfiguration(
        multi_region_key_type=input.MultiRegionKeyType.UnwrapOr(None),
        primary_key=DafnyToSmithy_com_amazonaws_kms_MultiRegionKey(input.PrimaryKey.UnwrapOr(None)),
        replica_keys=[DafnyToSmithy_com_amazonaws_kms_MultiRegionKey(list_element) for list_element in input.ReplicaKeys.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_KeyMetadata(input):
    return KeyMetadata(
        aws_account_id=input.AWSAccountId.UnwrapOr(None),
        key_id=input.KeyId,
        arn=input.Arn.UnwrapOr(None),
        creation_date=input.CreationDate.UnwrapOr(None),
        enabled=input.Enabled.UnwrapOr(None),
        description=input.Description.UnwrapOr(None),
        key_usage=input.KeyUsage.UnwrapOr(None),
        key_state=input.KeyState.UnwrapOr(None),
        deletion_date=input.DeletionDate.UnwrapOr(None),
        valid_to=input.ValidTo.UnwrapOr(None),
        origin=input.Origin.UnwrapOr(None),
        custom_key_store_id=input.CustomKeyStoreId.UnwrapOr(None),
        cloud_hsm_cluster_id=input.CloudHsmClusterId.UnwrapOr(None),
        expiration_model=input.ExpirationModel.UnwrapOr(None),
        key_manager=input.KeyManager.UnwrapOr(None),
        customer_master_key_spec=input.CustomerMasterKeySpec.UnwrapOr(None),
        key_spec=input.KeySpec.UnwrapOr(None),
        encryption_algorithms=[list_element for list_element in input.EncryptionAlgorithms.UnwrapOr(None)],
        signing_algorithms=[list_element for list_element in input.SigningAlgorithms.UnwrapOr(None)],
        multi_region=input.MultiRegion.UnwrapOr(None),
        multi_region_configuration=DafnyToSmithy_com_amazonaws_kms_MultiRegionConfiguration(input.MultiRegionConfiguration.UnwrapOr(None)),
        pending_deletion_window_in_days=input.PendingDeletionWindowInDays.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DescribeKeyResponse(input):
    return DescribeKeyResponse(
        key_metadata=DafnyToSmithy_com_amazonaws_kms_KeyMetadata(input.KeyMetadata.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_kms_GrantConstraints(input):
    return GrantConstraints(
        encryption_context_subset={key: value for (key, value) in input.EncryptionContextSubset.UnwrapOr(None).items },
        encryption_context_equals={key: value for (key, value) in input.EncryptionContextEquals.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_kms_GrantListEntry(input):
    return GrantListEntry(
        key_id=input.KeyId.UnwrapOr(None),
        grant_id=input.GrantId.UnwrapOr(None),
        name=input.Name.UnwrapOr(None),
        creation_date=input.CreationDate.UnwrapOr(None),
        grantee_principal=input.GranteePrincipal.UnwrapOr(None),
        retiring_principal=input.RetiringPrincipal.UnwrapOr(None),
        issuing_account=input.IssuingAccount.UnwrapOr(None),
        operations=[list_element for list_element in input.Operations.UnwrapOr(None)],
        constraints=DafnyToSmithy_com_amazonaws_kms_GrantConstraints(input.Constraints.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_kms_ListGrantsResponse(input):
    return ListGrantsResponse(
        grants=[DafnyToSmithy_com_amazonaws_kms_GrantListEntry(list_element) for list_element in input.Grants.UnwrapOr(None)],
        next_marker=input.NextMarker.UnwrapOr(None),
        truncated=input.Truncated.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ReplicateKeyResponse(input):
    return ReplicateKeyResponse(
        replica_key_metadata=DafnyToSmithy_com_amazonaws_kms_KeyMetadata(input.ReplicaKeyMetadata.UnwrapOr(None)),
        replica_policy=input.ReplicaPolicy.UnwrapOr(None),
        replica_tags=[DafnyToSmithy_com_amazonaws_kms_Tag(list_element) for list_element in input.ReplicaTags.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_CreateKeyResponse(input):
    return CreateKeyResponse(
        key_metadata=DafnyToSmithy_com_amazonaws_kms_KeyMetadata(input.KeyMetadata.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_kms_ConnectCustomKeyStoreResponse(input):
    return ConnectCustomKeyStoreResponse(
    )

def DafnyToSmithy_com_amazonaws_kms_SignResponse(input):
    return SignResponse(
        key_id=input.KeyId.UnwrapOr(None),
        signature=input.Signature.UnwrapOr(None),
        signing_algorithm=input.SigningAlgorithm.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_VerifyResponse(input):
    return VerifyResponse(
        key_id=input.KeyId.UnwrapOr(None),
        signature_valid=input.SignatureValid.UnwrapOr(None),
        signing_algorithm=input.SigningAlgorithm.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DecryptResponse(input):
    return DecryptResponse(
        key_id=input.KeyId.UnwrapOr(None),
        plaintext=input.Plaintext.UnwrapOr(None),
        encryption_algorithm=input.EncryptionAlgorithm.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ListKeyPoliciesResponse(input):
    return ListKeyPoliciesResponse(
        policy_names=[list_element for list_element in input.PolicyNames.UnwrapOr(None)],
        next_marker=input.NextMarker.UnwrapOr(None),
        truncated=input.Truncated.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DisconnectCustomKeyStoreResponse(input):
    return DisconnectCustomKeyStoreResponse(
    )

def DafnyToSmithy_com_amazonaws_kms_CreateGrantResponse(input):
    return CreateGrantResponse(
        grant_token=input.GrantToken.UnwrapOr(None),
        grant_id=input.GrantId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ReEncryptResponse(input):
    return ReEncryptResponse(
        ciphertext_blob=input.CiphertextBlob.UnwrapOr(None),
        source_key_id=input.SourceKeyId.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
        source_encryption_algorithm=input.SourceEncryptionAlgorithm.UnwrapOr(None),
        destination_encryption_algorithm=input.DestinationEncryptionAlgorithm.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_EncryptResponse(input):
    return EncryptResponse(
        ciphertext_blob=input.CiphertextBlob.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
        encryption_algorithm=input.EncryptionAlgorithm.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GetKeyPolicyResponse(input):
    return GetKeyPolicyResponse(
        policy=input.Policy.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_CancelKeyDeletionRequest(input):
    return CancelKeyDeletionRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_ConnectCustomKeyStoreRequest(input):
    return ConnectCustomKeyStoreRequest(
        custom_key_store_id=input.CustomKeyStoreId,
    )

def DafnyToSmithy_com_amazonaws_kms_CreateAliasRequest(input):
    return CreateAliasRequest(
        alias_name=input.AliasName,
        target_key_id=input.TargetKeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_CreateCustomKeyStoreRequest(input):
    return CreateCustomKeyStoreRequest(
        custom_key_store_name=input.CustomKeyStoreName,
        cloud_hsm_cluster_id=input.CloudHsmClusterId,
        trust_anchor_certificate=input.TrustAnchorCertificate,
        key_store_password=input.KeyStorePassword,
    )

def DafnyToSmithy_com_amazonaws_kms_CreateGrantRequest(input):
    return CreateGrantRequest(
        key_id=input.KeyId,
        grantee_principal=input.GranteePrincipal,
        retiring_principal=input.RetiringPrincipal.UnwrapOr(None),
        operations=[list_element for list_element in input.Operations],
        constraints=DafnyToSmithy_com_amazonaws_kms_GrantConstraints(input.Constraints.UnwrapOr(None)),
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
        name=input.Name.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_CreateKeyRequest(input):
    return CreateKeyRequest(
        policy=input.Policy.UnwrapOr(None),
        description=input.Description.UnwrapOr(None),
        key_usage=input.KeyUsage.UnwrapOr(None),
        customer_master_key_spec=input.CustomerMasterKeySpec.UnwrapOr(None),
        key_spec=input.KeySpec.UnwrapOr(None),
        origin=input.Origin.UnwrapOr(None),
        custom_key_store_id=input.CustomKeyStoreId.UnwrapOr(None),
        bypass_policy_lockout_safety_check=input.BypassPolicyLockoutSafetyCheck.UnwrapOr(None),
        tags=[DafnyToSmithy_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags.UnwrapOr(None)],
        multi_region=input.MultiRegion.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DecryptRequest(input):
    output = {}
    output["CiphertextBlob"] = bytes(input.CiphertextBlob)
    if input.EncryptionContext.UnwrapOr(None) is not None:
        output["EncryptionContext"] = {key: value for (key, value) in input.EncryptionContext.value.items}
    if input.GrantTokens.UnwrapOr(None) is not None:
        output["GrantTokens"] = [list_element for list_element in input.GrantTokens.UnwrapOr(None)]
    if input.KeyId.UnwrapOr(None) is not None:
        output["KeyId"] = input.KeyId.UnwrapOr(None).VerbatimString(False)
    if input.EncryptionAlgorithm.UnwrapOr(None) is not None:
        output["EncryptionAlgorithm"] = input.EncryptionAlgorithm.UnwrapOr(None)
    return output


def DafnyToSmithy_com_amazonaws_kms_DeleteAliasRequest(input):
    return DeleteAliasRequest(
        alias_name=input.AliasName,
    )

def DafnyToSmithy_com_amazonaws_kms_DeleteCustomKeyStoreRequest(input):
    return DeleteCustomKeyStoreRequest(
        custom_key_store_id=input.CustomKeyStoreId,
    )

def DafnyToSmithy_com_amazonaws_kms_DeleteImportedKeyMaterialRequest(input):
    return DeleteImportedKeyMaterialRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_DescribeCustomKeyStoresRequest(input):
    return DescribeCustomKeyStoresRequest(
        custom_key_store_id=input.CustomKeyStoreId.UnwrapOr(None),
        custom_key_store_name=input.CustomKeyStoreName.UnwrapOr(None),
        limit=input.Limit.UnwrapOr(None),
        marker=input.Marker.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_DescribeKeyRequest(input):
    return DescribeKeyRequest(
        key_id=input.KeyId,
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_DisableKeyRequest(input):
    return DisableKeyRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_DisableKeyRotationRequest(input):
    return DisableKeyRotationRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_DisconnectCustomKeyStoreRequest(input):
    return DisconnectCustomKeyStoreRequest(
        custom_key_store_id=input.CustomKeyStoreId,
    )

def DafnyToSmithy_com_amazonaws_kms_EnableKeyRequest(input):
    return EnableKeyRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_EnableKeyRotationRequest(input):
    return EnableKeyRotationRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_EncryptRequest(input):
    return EncryptRequest(
        key_id=input.KeyId,
        plaintext=input.Plaintext,
        encryption_context={key: value for (key, value) in input.EncryptionContext.UnwrapOr(None).items },
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
        encryption_algorithm=input.EncryptionAlgorithm.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyRequest(input):
    return GenerateDataKeyRequest(
        key_id=input.KeyId,
        encryption_context={key: value for (key, value) in input.EncryptionContext.UnwrapOr(None).items },
        number_of_bytes=input.NumberOfBytes.UnwrapOr(None),
        key_spec=input.KeySpec.UnwrapOr(None),
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyPairRequest(input):
    return GenerateDataKeyPairRequest(
        encryption_context={key: value for (key, value) in input.EncryptionContext.UnwrapOr(None).items },
        key_id=input.KeyId,
        key_pair_spec=input.KeyPairSpec,
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyPairWithoutPlaintextRequest(input):
    return GenerateDataKeyPairWithoutPlaintextRequest(
        encryption_context={key: value for (key, value) in input.EncryptionContext.UnwrapOr(None).items },
        key_id=input.KeyId,
        key_pair_spec=input.KeyPairSpec,
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateDataKeyWithoutPlaintextRequest(input):
    return GenerateDataKeyWithoutPlaintextRequest(
        key_id=input.KeyId,
        encryption_context={key: value for (key, value) in input.EncryptionContext.UnwrapOr(None).items },
        key_spec=input.KeySpec.UnwrapOr(None),
        number_of_bytes=input.NumberOfBytes.UnwrapOr(None),
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_GenerateRandomRequest(input):
    return GenerateRandomRequest(
        number_of_bytes=input.NumberOfBytes.UnwrapOr(None),
        custom_key_store_id=input.CustomKeyStoreId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_GetKeyPolicyRequest(input):
    return GetKeyPolicyRequest(
        key_id=input.KeyId,
        policy_name=input.PolicyName,
    )

def DafnyToSmithy_com_amazonaws_kms_GetKeyRotationStatusRequest(input):
    return GetKeyRotationStatusRequest(
        key_id=input.KeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_GetParametersForImportRequest(input):
    return GetParametersForImportRequest(
        key_id=input.KeyId,
        wrapping_algorithm=input.WrappingAlgorithm,
        wrapping_key_spec=input.WrappingKeySpec,
    )

def DafnyToSmithy_com_amazonaws_kms_GetPublicKeyRequest(input):
    return GetPublicKeyRequest(
        key_id=input.KeyId,
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_ImportKeyMaterialRequest(input):
    return ImportKeyMaterialRequest(
        key_id=input.KeyId,
        import_token=input.ImportToken,
        encrypted_key_material=input.EncryptedKeyMaterial,
        valid_to=input.ValidTo.UnwrapOr(None),
        expiration_model=input.ExpirationModel.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ListAliasesRequest(input):
    return ListAliasesRequest(
        key_id=input.KeyId.UnwrapOr(None),
        limit=input.Limit.UnwrapOr(None),
        marker=input.Marker.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ListGrantsRequest(input):
    return ListGrantsRequest(
        limit=input.Limit.UnwrapOr(None),
        marker=input.Marker.UnwrapOr(None),
        key_id=input.KeyId,
        grant_id=input.GrantId.UnwrapOr(None),
        grantee_principal=input.GranteePrincipal.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ListKeyPoliciesRequest(input):
    return ListKeyPoliciesRequest(
        key_id=input.KeyId,
        limit=input.Limit.UnwrapOr(None),
        marker=input.Marker.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ListResourceTagsRequest(input):
    return ListResourceTagsRequest(
        key_id=input.KeyId,
        limit=input.Limit.UnwrapOr(None),
        marker=input.Marker.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_PutKeyPolicyRequest(input):
    return PutKeyPolicyRequest(
        key_id=input.KeyId,
        policy_name=input.PolicyName,
        policy=input.Policy,
        bypass_policy_lockout_safety_check=input.BypassPolicyLockoutSafetyCheck.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_ReEncryptRequest(input):
    return ReEncryptRequest(
        ciphertext_blob=input.CiphertextBlob,
        source_encryption_context={key: value for (key, value) in input.SourceEncryptionContext.UnwrapOr(None).items },
        source_key_id=input.SourceKeyId.UnwrapOr(None),
        destination_key_id=input.DestinationKeyId,
        destination_encryption_context={key: value for (key, value) in input.DestinationEncryptionContext.UnwrapOr(None).items },
        source_encryption_algorithm=input.SourceEncryptionAlgorithm.UnwrapOr(None),
        destination_encryption_algorithm=input.DestinationEncryptionAlgorithm.UnwrapOr(None),
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_ReplicateKeyRequest(input):
    return ReplicateKeyRequest(
        key_id=input.KeyId,
        replica_region=input.ReplicaRegion,
        policy=input.Policy.UnwrapOr(None),
        bypass_policy_lockout_safety_check=input.BypassPolicyLockoutSafetyCheck.UnwrapOr(None),
        description=input.Description.UnwrapOr(None),
        tags=[DafnyToSmithy_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_kms_RetireGrantRequest(input):
    return RetireGrantRequest(
        grant_token=input.GrantToken.UnwrapOr(None),
        key_id=input.KeyId.UnwrapOr(None),
        grant_id=input.GrantId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_RevokeGrantRequest(input):
    return RevokeGrantRequest(
        key_id=input.KeyId,
        grant_id=input.GrantId,
    )

def DafnyToSmithy_com_amazonaws_kms_ScheduleKeyDeletionRequest(input):
    return ScheduleKeyDeletionRequest(
        key_id=input.KeyId,
        pending_window_in_days=input.PendingWindowInDays.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_SignRequest(input):
    return SignRequest(
        key_id=input.KeyId,
        message=input.Message,
        message_type=input.MessageType.UnwrapOr(None),
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
        signing_algorithm=input.SigningAlgorithm,
    )

def DafnyToSmithy_com_amazonaws_kms_TagResourceRequest(input):
    return TagResourceRequest(
        key_id=input.KeyId,
        tags=[DafnyToSmithy_com_amazonaws_kms_Tag(list_element) for list_element in input.Tags],
    )

def DafnyToSmithy_com_amazonaws_kms_UntagResourceRequest(input):
    return UntagResourceRequest(
        key_id=input.KeyId,
        tag_keys=[list_element for list_element in input.TagKeys],
    )

def DafnyToSmithy_com_amazonaws_kms_UpdateAliasRequest(input):
    return UpdateAliasRequest(
        alias_name=input.AliasName,
        target_key_id=input.TargetKeyId,
    )

def DafnyToSmithy_com_amazonaws_kms_UpdateCustomKeyStoreRequest(input):
    return UpdateCustomKeyStoreRequest(
        custom_key_store_id=input.CustomKeyStoreId,
        new_custom_key_store_name=input.NewCustomKeyStoreName.UnwrapOr(None),
        key_store_password=input.KeyStorePassword.UnwrapOr(None),
        cloud_hsm_cluster_id=input.CloudHsmClusterId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_kms_UpdateKeyDescriptionRequest(input):
    return UpdateKeyDescriptionRequest(
        key_id=input.KeyId,
        description=input.Description,
    )

def DafnyToSmithy_com_amazonaws_kms_UpdatePrimaryRegionRequest(input):
    return UpdatePrimaryRegionRequest(
        key_id=input.KeyId,
        primary_region=input.PrimaryRegion,
    )

def DafnyToSmithy_com_amazonaws_kms_VerifyRequest(input):
    return VerifyRequest(
        key_id=input.KeyId,
        message=input.Message,
        message_type=input.MessageType.UnwrapOr(None),
        signature=input.Signature,
        signing_algorithm=input.SigningAlgorithm,
        grant_tokens=[list_element for list_element in input.GrantTokens.UnwrapOr(None)],
    )
