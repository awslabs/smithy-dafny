# Code generated by smithy-python-codegen DO NOT EDIT.

import module_
from software_amazon_cryptography_services_dynamodb_internaldafny_types import (
    BatchExecuteStatementInput_BatchExecuteStatementInput as DafnyBatchExecuteStatementInput,
    BatchExecuteStatementOutput_BatchExecuteStatementOutput as DafnyBatchExecuteStatementOutput,
    BatchGetItemInput_BatchGetItemInput as DafnyBatchGetItemInput,
    BatchGetItemOutput_BatchGetItemOutput as DafnyBatchGetItemOutput,
    BatchWriteItemInput_BatchWriteItemInput as DafnyBatchWriteItemInput,
    BatchWriteItemOutput_BatchWriteItemOutput as DafnyBatchWriteItemOutput,
    CreateBackupInput_CreateBackupInput as DafnyCreateBackupInput,
    CreateBackupOutput_CreateBackupOutput as DafnyCreateBackupOutput,
    CreateGlobalTableInput_CreateGlobalTableInput as DafnyCreateGlobalTableInput,
    CreateGlobalTableOutput_CreateGlobalTableOutput as DafnyCreateGlobalTableOutput,
    CreateTableInput_CreateTableInput as DafnyCreateTableInput,
    CreateTableOutput_CreateTableOutput as DafnyCreateTableOutput,
    DeleteBackupInput_DeleteBackupInput as DafnyDeleteBackupInput,
    DeleteBackupOutput_DeleteBackupOutput as DafnyDeleteBackupOutput,
    DeleteItemInput_DeleteItemInput as DafnyDeleteItemInput,
    DeleteItemOutput_DeleteItemOutput as DafnyDeleteItemOutput,
    DeleteTableInput_DeleteTableInput as DafnyDeleteTableInput,
    DeleteTableOutput_DeleteTableOutput as DafnyDeleteTableOutput,
    DescribeBackupInput_DescribeBackupInput as DafnyDescribeBackupInput,
    DescribeBackupOutput_DescribeBackupOutput as DafnyDescribeBackupOutput,
    DescribeContinuousBackupsInput_DescribeContinuousBackupsInput as DafnyDescribeContinuousBackupsInput,
    DescribeContinuousBackupsOutput_DescribeContinuousBackupsOutput as DafnyDescribeContinuousBackupsOutput,
    DescribeContributorInsightsInput_DescribeContributorInsightsInput as DafnyDescribeContributorInsightsInput,
    DescribeContributorInsightsOutput_DescribeContributorInsightsOutput as DafnyDescribeContributorInsightsOutput,
    DescribeEndpointsRequest_DescribeEndpointsRequest as DafnyDescribeEndpointsRequest,
    DescribeEndpointsResponse_DescribeEndpointsResponse as DafnyDescribeEndpointsResponse,
    DescribeExportInput_DescribeExportInput as DafnyDescribeExportInput,
    DescribeExportOutput_DescribeExportOutput as DafnyDescribeExportOutput,
    DescribeGlobalTableInput_DescribeGlobalTableInput as DafnyDescribeGlobalTableInput,
    DescribeGlobalTableOutput_DescribeGlobalTableOutput as DafnyDescribeGlobalTableOutput,
    DescribeGlobalTableSettingsInput_DescribeGlobalTableSettingsInput as DafnyDescribeGlobalTableSettingsInput,
    DescribeGlobalTableSettingsOutput_DescribeGlobalTableSettingsOutput as DafnyDescribeGlobalTableSettingsOutput,
    DescribeImportInput_DescribeImportInput as DafnyDescribeImportInput,
    DescribeImportOutput_DescribeImportOutput as DafnyDescribeImportOutput,
    DescribeKinesisStreamingDestinationInput_DescribeKinesisStreamingDestinationInput as DafnyDescribeKinesisStreamingDestinationInput,
    DescribeKinesisStreamingDestinationOutput_DescribeKinesisStreamingDestinationOutput as DafnyDescribeKinesisStreamingDestinationOutput,
    DescribeLimitsInput_DescribeLimitsInput as DafnyDescribeLimitsInput,
    DescribeLimitsOutput_DescribeLimitsOutput as DafnyDescribeLimitsOutput,
    DescribeTableInput_DescribeTableInput as DafnyDescribeTableInput,
    DescribeTableOutput_DescribeTableOutput as DafnyDescribeTableOutput,
    DescribeTableReplicaAutoScalingInput_DescribeTableReplicaAutoScalingInput as DafnyDescribeTableReplicaAutoScalingInput,
    DescribeTableReplicaAutoScalingOutput_DescribeTableReplicaAutoScalingOutput as DafnyDescribeTableReplicaAutoScalingOutput,
    DescribeTimeToLiveInput_DescribeTimeToLiveInput as DafnyDescribeTimeToLiveInput,
    DescribeTimeToLiveOutput_DescribeTimeToLiveOutput as DafnyDescribeTimeToLiveOutput,
    DisableKinesisStreamingDestinationInput_DisableKinesisStreamingDestinationInput as DafnyDisableKinesisStreamingDestinationInput,
    DisableKinesisStreamingDestinationOutput_DisableKinesisStreamingDestinationOutput as DafnyDisableKinesisStreamingDestinationOutput,
    EnableKinesisStreamingDestinationInput_EnableKinesisStreamingDestinationInput as DafnyEnableKinesisStreamingDestinationInput,
    EnableKinesisStreamingDestinationOutput_EnableKinesisStreamingDestinationOutput as DafnyEnableKinesisStreamingDestinationOutput,
    ExecuteStatementInput_ExecuteStatementInput as DafnyExecuteStatementInput,
    ExecuteStatementOutput_ExecuteStatementOutput as DafnyExecuteStatementOutput,
    ExecuteTransactionInput_ExecuteTransactionInput as DafnyExecuteTransactionInput,
    ExecuteTransactionOutput_ExecuteTransactionOutput as DafnyExecuteTransactionOutput,
    ExportTableToPointInTimeInput_ExportTableToPointInTimeInput as DafnyExportTableToPointInTimeInput,
    ExportTableToPointInTimeOutput_ExportTableToPointInTimeOutput as DafnyExportTableToPointInTimeOutput,
    GetItemInput_GetItemInput as DafnyGetItemInput,
    GetItemOutput_GetItemOutput as DafnyGetItemOutput,
    ImportTableInput_ImportTableInput as DafnyImportTableInput,
    ImportTableOutput_ImportTableOutput as DafnyImportTableOutput,
    ListBackupsInput_ListBackupsInput as DafnyListBackupsInput,
    ListBackupsOutput_ListBackupsOutput as DafnyListBackupsOutput,
    ListContributorInsightsInput_ListContributorInsightsInput as DafnyListContributorInsightsInput,
    ListContributorInsightsOutput_ListContributorInsightsOutput as DafnyListContributorInsightsOutput,
    ListExportsInput_ListExportsInput as DafnyListExportsInput,
    ListExportsOutput_ListExportsOutput as DafnyListExportsOutput,
    ListGlobalTablesInput_ListGlobalTablesInput as DafnyListGlobalTablesInput,
    ListGlobalTablesOutput_ListGlobalTablesOutput as DafnyListGlobalTablesOutput,
    ListImportsInput_ListImportsInput as DafnyListImportsInput,
    ListImportsOutput_ListImportsOutput as DafnyListImportsOutput,
    ListTablesInput_ListTablesInput as DafnyListTablesInput,
    ListTablesOutput_ListTablesOutput as DafnyListTablesOutput,
    ListTagsOfResourceInput_ListTagsOfResourceInput as DafnyListTagsOfResourceInput,
    ListTagsOfResourceOutput_ListTagsOfResourceOutput as DafnyListTagsOfResourceOutput,
    PutItemInput_PutItemInput as DafnyPutItemInput,
    PutItemOutput_PutItemOutput as DafnyPutItemOutput,
    QueryInput_QueryInput as DafnyQueryInput,
    QueryOutput_QueryOutput as DafnyQueryOutput,
    RestoreTableFromBackupInput_RestoreTableFromBackupInput as DafnyRestoreTableFromBackupInput,
    RestoreTableFromBackupOutput_RestoreTableFromBackupOutput as DafnyRestoreTableFromBackupOutput,
    RestoreTableToPointInTimeInput_RestoreTableToPointInTimeInput as DafnyRestoreTableToPointInTimeInput,
    RestoreTableToPointInTimeOutput_RestoreTableToPointInTimeOutput as DafnyRestoreTableToPointInTimeOutput,
    ScanInput_ScanInput as DafnyScanInput,
    ScanOutput_ScanOutput as DafnyScanOutput,
    TagResourceInput_TagResourceInput as DafnyTagResourceInput,
    TransactGetItemsInput_TransactGetItemsInput as DafnyTransactGetItemsInput,
    TransactGetItemsOutput_TransactGetItemsOutput as DafnyTransactGetItemsOutput,
    TransactWriteItemsInput_TransactWriteItemsInput as DafnyTransactWriteItemsInput,
    TransactWriteItemsOutput_TransactWriteItemsOutput as DafnyTransactWriteItemsOutput,
    UntagResourceInput_UntagResourceInput as DafnyUntagResourceInput,
    UpdateContinuousBackupsInput_UpdateContinuousBackupsInput as DafnyUpdateContinuousBackupsInput,
    UpdateContinuousBackupsOutput_UpdateContinuousBackupsOutput as DafnyUpdateContinuousBackupsOutput,
    UpdateContributorInsightsInput_UpdateContributorInsightsInput as DafnyUpdateContributorInsightsInput,
    UpdateContributorInsightsOutput_UpdateContributorInsightsOutput as DafnyUpdateContributorInsightsOutput,
    UpdateGlobalTableInput_UpdateGlobalTableInput as DafnyUpdateGlobalTableInput,
    UpdateGlobalTableOutput_UpdateGlobalTableOutput as DafnyUpdateGlobalTableOutput,
    UpdateGlobalTableSettingsInput_UpdateGlobalTableSettingsInput as DafnyUpdateGlobalTableSettingsInput,
    UpdateGlobalTableSettingsOutput_UpdateGlobalTableSettingsOutput as DafnyUpdateGlobalTableSettingsOutput,
    UpdateItemInput_UpdateItemInput as DafnyUpdateItemInput,
    UpdateItemOutput_UpdateItemOutput as DafnyUpdateItemOutput,
    UpdateTableInput_UpdateTableInput as DafnyUpdateTableInput,
    UpdateTableOutput_UpdateTableOutput as DafnyUpdateTableOutput,
    UpdateTableReplicaAutoScalingInput_UpdateTableReplicaAutoScalingInput as DafnyUpdateTableReplicaAutoScalingInput,
    UpdateTableReplicaAutoScalingOutput_UpdateTableReplicaAutoScalingOutput as DafnyUpdateTableReplicaAutoScalingOutput,
    UpdateTimeToLiveInput_UpdateTimeToLiveInput as DafnyUpdateTimeToLiveInput,
    UpdateTimeToLiveOutput_UpdateTimeToLiveOutput as DafnyUpdateTimeToLiveOutput,
)

from .aws_sdk_to_dafny import (
    SmithyToDafny_com_amazonaws_dynamodb_ArchivalSummary,
    SmithyToDafny_com_amazonaws_dynamodb_AttributeDefinition,
    SmithyToDafny_com_amazonaws_dynamodb_AttributeValue,
    SmithyToDafny_com_amazonaws_dynamodb_AutoScalingPolicyDescription,
    SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsDescription,
    SmithyToDafny_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationDescription,
    SmithyToDafny_com_amazonaws_dynamodb_BackupDescription,
    SmithyToDafny_com_amazonaws_dynamodb_BackupDetails,
    SmithyToDafny_com_amazonaws_dynamodb_BackupSummary,
    SmithyToDafny_com_amazonaws_dynamodb_BatchExecuteStatementOutput,
    SmithyToDafny_com_amazonaws_dynamodb_BatchGetItemOutput,
    SmithyToDafny_com_amazonaws_dynamodb_BatchStatementError,
    SmithyToDafny_com_amazonaws_dynamodb_BatchStatementResponse,
    SmithyToDafny_com_amazonaws_dynamodb_BatchWriteItemOutput,
    SmithyToDafny_com_amazonaws_dynamodb_BillingModeSummary,
    SmithyToDafny_com_amazonaws_dynamodb_Capacity,
    SmithyToDafny_com_amazonaws_dynamodb_ConsumedCapacity,
    SmithyToDafny_com_amazonaws_dynamodb_ContinuousBackupsDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ContributorInsightsSummary,
    SmithyToDafny_com_amazonaws_dynamodb_CreateBackupOutput,
    SmithyToDafny_com_amazonaws_dynamodb_CreateGlobalTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_CreateTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_CsvOptions,
    SmithyToDafny_com_amazonaws_dynamodb_DeleteBackupOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DeleteItemOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DeleteRequest,
    SmithyToDafny_com_amazonaws_dynamodb_DeleteTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeBackupOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeContinuousBackupsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeContributorInsightsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeEndpointsResponse,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeExportOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeGlobalTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeGlobalTableSettingsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeImportOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeLimitsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DescribeTimeToLiveOutput,
    SmithyToDafny_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationOutput,
    SmithyToDafny_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationOutput,
    SmithyToDafny_com_amazonaws_dynamodb_Endpoint,
    SmithyToDafny_com_amazonaws_dynamodb_ExecuteStatementOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ExecuteTransactionOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ExportDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ExportSummary,
    SmithyToDafny_com_amazonaws_dynamodb_ExportTableToPointInTimeOutput,
    SmithyToDafny_com_amazonaws_dynamodb_FailureException,
    SmithyToDafny_com_amazonaws_dynamodb_GetItemOutput,
    SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndex,
    SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndexDescription,
    SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndexInfo,
    SmithyToDafny_com_amazonaws_dynamodb_GlobalTable,
    SmithyToDafny_com_amazonaws_dynamodb_GlobalTableDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ImportSummary,
    SmithyToDafny_com_amazonaws_dynamodb_ImportTableDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ImportTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_InputFormatOptions,
    SmithyToDafny_com_amazonaws_dynamodb_ItemCollectionMetrics,
    SmithyToDafny_com_amazonaws_dynamodb_ItemResponse,
    SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement,
    SmithyToDafny_com_amazonaws_dynamodb_KeysAndAttributes,
    SmithyToDafny_com_amazonaws_dynamodb_KinesisDataStreamDestination,
    SmithyToDafny_com_amazonaws_dynamodb_ListBackupsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ListContributorInsightsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ListExportsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ListGlobalTablesOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ListImportsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ListTablesOutput,
    SmithyToDafny_com_amazonaws_dynamodb_ListTagsOfResourceOutput,
    SmithyToDafny_com_amazonaws_dynamodb_LocalSecondaryIndexDescription,
    SmithyToDafny_com_amazonaws_dynamodb_LocalSecondaryIndexInfo,
    SmithyToDafny_com_amazonaws_dynamodb_PointInTimeRecoveryDescription,
    SmithyToDafny_com_amazonaws_dynamodb_Projection,
    SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput,
    SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughputDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughputOverride,
    SmithyToDafny_com_amazonaws_dynamodb_PutItemOutput,
    SmithyToDafny_com_amazonaws_dynamodb_PutRequest,
    SmithyToDafny_com_amazonaws_dynamodb_QueryOutput,
    SmithyToDafny_com_amazonaws_dynamodb_Replica,
    SmithyToDafny_com_amazonaws_dynamodb_ReplicaAutoScalingDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ReplicaDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsDescription,
    SmithyToDafny_com_amazonaws_dynamodb_ReplicaSettingsDescription,
    SmithyToDafny_com_amazonaws_dynamodb_RestoreSummary,
    SmithyToDafny_com_amazonaws_dynamodb_RestoreTableFromBackupOutput,
    SmithyToDafny_com_amazonaws_dynamodb_RestoreTableToPointInTimeOutput,
    SmithyToDafny_com_amazonaws_dynamodb_S3BucketSource,
    SmithyToDafny_com_amazonaws_dynamodb_SSEDescription,
    SmithyToDafny_com_amazonaws_dynamodb_SSESpecification,
    SmithyToDafny_com_amazonaws_dynamodb_ScanOutput,
    SmithyToDafny_com_amazonaws_dynamodb_SourceTableDetails,
    SmithyToDafny_com_amazonaws_dynamodb_SourceTableFeatureDetails,
    SmithyToDafny_com_amazonaws_dynamodb_StreamSpecification,
    SmithyToDafny_com_amazonaws_dynamodb_TableAutoScalingDescription,
    SmithyToDafny_com_amazonaws_dynamodb_TableClassSummary,
    SmithyToDafny_com_amazonaws_dynamodb_TableCreationParameters,
    SmithyToDafny_com_amazonaws_dynamodb_TableDescription,
    SmithyToDafny_com_amazonaws_dynamodb_Tag,
    SmithyToDafny_com_amazonaws_dynamodb_TimeToLiveDescription,
    SmithyToDafny_com_amazonaws_dynamodb_TimeToLiveSpecification,
    SmithyToDafny_com_amazonaws_dynamodb_TransactGetItemsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_TransactWriteItemsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateContinuousBackupsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateContributorInsightsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalTableSettingsOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateItemOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateTableOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingOutput,
    SmithyToDafny_com_amazonaws_dynamodb_UpdateTimeToLiveOutput,
    SmithyToDafny_com_amazonaws_dynamodb_WriteRequest,
    SmithyToDafny_smithy_api_Unit,
)


import Wrappers
from botocore.exceptions import ClientError
import software_amazon_cryptography_services_dynamodb_internaldafny_types

def smithy_error_to_dafny_error(e: ClientError):
    '''
    Converts the provided native Smithy-modelled error
    into the corresponding Dafny error.
    '''
    if e.response['Error']['Code'] == "BackupInUseException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_BackupInUseException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "BackupNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_BackupNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ConditionalCheckFailedException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ConditionalCheckFailedException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ContinuousBackupsUnavailableException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ContinuousBackupsUnavailableException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "DuplicateItemException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_DuplicateItemException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ExportConflictException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ExportConflictException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ExportNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ExportNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "GlobalTableAlreadyExistsException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_GlobalTableAlreadyExistsException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "GlobalTableNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_GlobalTableNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "IdempotentParameterMismatchException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_IdempotentParameterMismatchException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ImportConflictException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ImportConflictException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ImportNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ImportNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "IndexNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_IndexNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "InternalServerError":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_InternalServerError(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "InvalidEndpointException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_InvalidEndpointException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "InvalidExportTimeException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_InvalidExportTimeException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "InvalidRestoreTimeException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_InvalidRestoreTimeException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ItemCollectionSizeLimitExceededException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ItemCollectionSizeLimitExceededException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "LimitExceededException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_LimitExceededException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "PointInTimeRecoveryUnavailableException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_PointInTimeRecoveryUnavailableException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ProvisionedThroughputExceededException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ProvisionedThroughputExceededException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ReplicaAlreadyExistsException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ReplicaAlreadyExistsException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ReplicaNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ReplicaNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "RequestLimitExceeded":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_RequestLimitExceeded(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ResourceInUseException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ResourceInUseException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "ResourceNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_ResourceNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "TableAlreadyExistsException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_TableAlreadyExistsException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "TableInUseException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_TableInUseException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "TableNotFoundException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_TableNotFoundException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "TransactionCanceledException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_TransactionCanceledException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "TransactionConflictException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_TransactionConflictException(message=e.response['Error']['Code'])

    if e.response['Error']['Code'] == "TransactionInProgressException":
        return software_amazon_cryptography_services_dynamodb_internaldafny_types.Error_TransactionInProgressException(message=e.response['Error']['Code'])

    if isinstance(e, CollectionOfErrors):
        return com_amazonaws_dynamodb_internaldafny_types.Error_CollectionOfErrors(message=e.message, list=e.list)

    if isinstance(e, OpaqueError):
        return com_amazonaws_dynamodb_internaldafny_types.Error_Opaque(obj=e.obj)

# TODO: Typehint the shim class
class DynamoDB_20120810Shim:
    def __init__(self, _impl) :
        self._impl = _impl

    def BatchExecuteStatement(self, input: DafnyBatchExecuteStatementInput) -> DafnyBatchExecuteStatementOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: BatchExecuteStatementInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_BatchExecuteStatementInput(input)
        try:
            wrapped_response = self._impl.batch_execute_statement(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_BatchExecuteStatementOutput(wrapped_response))

    def BatchGetItem(self, input: DafnyBatchGetItemInput) -> DafnyBatchGetItemOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: BatchGetItemInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_BatchGetItemInput(input)
        try:
            wrapped_response = self._impl.batch_get_item(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_BatchGetItemOutput(wrapped_response))

    def BatchWriteItem(self, input: DafnyBatchWriteItemInput) -> DafnyBatchWriteItemOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: BatchWriteItemInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_BatchWriteItemInput(input)
        try:
            wrapped_response = self._impl.batch_write_item(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_BatchWriteItemOutput(wrapped_response))

    def CreateBackup(self, input: DafnyCreateBackupInput) -> DafnyCreateBackupOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: CreateBackupInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_CreateBackupInput(input)
        try:
            wrapped_response = self._impl.create_backup(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_CreateBackupOutput(wrapped_response))

    def CreateGlobalTable(self, input: DafnyCreateGlobalTableInput) -> DafnyCreateGlobalTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: CreateGlobalTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_CreateGlobalTableInput(input)
        try:
            wrapped_response = self._impl.create_global_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_CreateGlobalTableOutput(wrapped_response))

    def CreateTable(self, input: DafnyCreateTableInput) -> DafnyCreateTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: CreateTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_CreateTableInput(input)
        try:
            wrapped_response = self._impl.create_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_CreateTableOutput(wrapped_response))

    def DeleteBackup(self, input: DafnyDeleteBackupInput) -> DafnyDeleteBackupOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DeleteBackupInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DeleteBackupInput(input)
        try:
            wrapped_response = self._impl.delete_backup(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DeleteBackupOutput(wrapped_response))

    def DeleteItem(self, input: DafnyDeleteItemInput) -> DafnyDeleteItemOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DeleteItemInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DeleteItemInput(input)
        try:
            wrapped_response = self._impl.delete_item(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DeleteItemOutput(wrapped_response))

    def DeleteTable(self, input: DafnyDeleteTableInput) -> DafnyDeleteTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DeleteTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DeleteTableInput(input)
        try:
            wrapped_response = self._impl.delete_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DeleteTableOutput(wrapped_response))

    def DescribeBackup(self, input: DafnyDescribeBackupInput) -> DafnyDescribeBackupOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeBackupInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeBackupInput(input)
        try:
            wrapped_response = self._impl.describe_backup(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeBackupOutput(wrapped_response))

    def DescribeContinuousBackups(self, input: DafnyDescribeContinuousBackupsInput) -> DafnyDescribeContinuousBackupsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeContinuousBackupsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeContinuousBackupsInput(input)
        try:
            wrapped_response = self._impl.describe_continuous_backups(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeContinuousBackupsOutput(wrapped_response))

    def DescribeContributorInsights(self, input: DafnyDescribeContributorInsightsInput) -> DafnyDescribeContributorInsightsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeContributorInsightsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeContributorInsightsInput(input)
        try:
            wrapped_response = self._impl.describe_contributor_insights(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeContributorInsightsOutput(wrapped_response))

    def DescribeEndpoints(self, input: DafnyDescribeEndpointsRequest) -> DafnyDescribeEndpointsResponse:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeEndpointsRequest = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeEndpointsRequest(input)
        try:
            wrapped_response = self._impl.describe_endpoints(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeEndpointsResponse(wrapped_response))

    def DescribeExport(self, input: DafnyDescribeExportInput) -> DafnyDescribeExportOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeExportInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeExportInput(input)
        try:
            wrapped_response = self._impl.describe_export(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeExportOutput(wrapped_response))

    def DescribeGlobalTable(self, input: DafnyDescribeGlobalTableInput) -> DafnyDescribeGlobalTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeGlobalTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeGlobalTableInput(input)
        try:
            wrapped_response = self._impl.describe_global_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeGlobalTableOutput(wrapped_response))

    def DescribeGlobalTableSettings(self, input: DafnyDescribeGlobalTableSettingsInput) -> DafnyDescribeGlobalTableSettingsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeGlobalTableSettingsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeGlobalTableSettingsInput(input)
        try:
            wrapped_response = self._impl.describe_global_table_settings(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeGlobalTableSettingsOutput(wrapped_response))

    def DescribeImport(self, input: DafnyDescribeImportInput) -> DafnyDescribeImportOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeImportInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeImportInput(input)
        try:
            wrapped_response = self._impl.describe_import(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeImportOutput(wrapped_response))

    def DescribeKinesisStreamingDestination(self, input: DafnyDescribeKinesisStreamingDestinationInput) -> DafnyDescribeKinesisStreamingDestinationOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeKinesisStreamingDestinationInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationInput(input)
        try:
            wrapped_response = self._impl.describe_kinesis_streaming_destination(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationOutput(wrapped_response))

    def DescribeLimits(self, input: DafnyDescribeLimitsInput) -> DafnyDescribeLimitsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeLimitsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeLimitsInput(input)
        try:
            wrapped_response = self._impl.describe_limits(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeLimitsOutput(wrapped_response))

    def DescribeTable(self, input: DafnyDescribeTableInput) -> DafnyDescribeTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeTableInput(input)
        try:
            wrapped_response = self._impl.describe_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeTableOutput(wrapped_response))

    def DescribeTableReplicaAutoScaling(self, input: DafnyDescribeTableReplicaAutoScalingInput) -> DafnyDescribeTableReplicaAutoScalingOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeTableReplicaAutoScalingInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingInput(input)
        try:
            wrapped_response = self._impl.describe_table_replica_auto_scaling(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingOutput(wrapped_response))

    def DescribeTimeToLive(self, input: DafnyDescribeTimeToLiveInput) -> DafnyDescribeTimeToLiveOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DescribeTimeToLiveInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DescribeTimeToLiveInput(input)
        try:
            wrapped_response = self._impl.describe_time_to_live(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DescribeTimeToLiveOutput(wrapped_response))

    def DisableKinesisStreamingDestination(self, input: DafnyDisableKinesisStreamingDestinationInput) -> DafnyDisableKinesisStreamingDestinationOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: DisableKinesisStreamingDestinationInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationInput(input)
        try:
            wrapped_response = self._impl.disable_kinesis_streaming_destination(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationOutput(wrapped_response))

    def EnableKinesisStreamingDestination(self, input: DafnyEnableKinesisStreamingDestinationInput) -> DafnyEnableKinesisStreamingDestinationOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: EnableKinesisStreamingDestinationInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationInput(input)
        try:
            wrapped_response = self._impl.enable_kinesis_streaming_destination(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationOutput(wrapped_response))

    def ExecuteStatement(self, input: DafnyExecuteStatementInput) -> DafnyExecuteStatementOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ExecuteStatementInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ExecuteStatementInput(input)
        try:
            wrapped_response = self._impl.execute_statement(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ExecuteStatementOutput(wrapped_response))

    def ExecuteTransaction(self, input: DafnyExecuteTransactionInput) -> DafnyExecuteTransactionOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ExecuteTransactionInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ExecuteTransactionInput(input)
        try:
            wrapped_response = self._impl.execute_transaction(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ExecuteTransactionOutput(wrapped_response))

    def ExportTableToPointInTime(self, input: DafnyExportTableToPointInTimeInput) -> DafnyExportTableToPointInTimeOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ExportTableToPointInTimeInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ExportTableToPointInTimeInput(input)
        try:
            wrapped_response = self._impl.export_table_to_point_in_time(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ExportTableToPointInTimeOutput(wrapped_response))

    def GetItem(self, input: DafnyGetItemInput) -> DafnyGetItemOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: GetItemInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_GetItemInput(input)
        try:
            wrapped_response = self._impl.get_item(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_GetItemOutput(wrapped_response))

    def ImportTable(self, input: DafnyImportTableInput) -> DafnyImportTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ImportTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ImportTableInput(input)
        try:
            wrapped_response = self._impl.import_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ImportTableOutput(wrapped_response))

    def ListBackups(self, input: DafnyListBackupsInput) -> DafnyListBackupsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListBackupsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListBackupsInput(input)
        try:
            wrapped_response = self._impl.list_backups(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListBackupsOutput(wrapped_response))

    def ListContributorInsights(self, input: DafnyListContributorInsightsInput) -> DafnyListContributorInsightsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListContributorInsightsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListContributorInsightsInput(input)
        try:
            wrapped_response = self._impl.list_contributor_insights(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListContributorInsightsOutput(wrapped_response))

    def ListExports(self, input: DafnyListExportsInput) -> DafnyListExportsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListExportsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListExportsInput(input)
        try:
            wrapped_response = self._impl.list_exports(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListExportsOutput(wrapped_response))

    def ListGlobalTables(self, input: DafnyListGlobalTablesInput) -> DafnyListGlobalTablesOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListGlobalTablesInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListGlobalTablesInput(input)
        try:
            wrapped_response = self._impl.list_global_tables(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListGlobalTablesOutput(wrapped_response))

    def ListImports(self, input: DafnyListImportsInput) -> DafnyListImportsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListImportsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListImportsInput(input)
        try:
            wrapped_response = self._impl.list_imports(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListImportsOutput(wrapped_response))

    def ListTables(self, input: DafnyListTablesInput) -> DafnyListTablesOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListTablesInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListTablesInput(input)
        try:
            wrapped_response = self._impl.list_tables(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListTablesOutput(wrapped_response))

    def ListTagsOfResource(self, input: DafnyListTagsOfResourceInput) -> DafnyListTagsOfResourceOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ListTagsOfResourceInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ListTagsOfResourceInput(input)
        try:
            wrapped_response = self._impl.list_tags_of_resource(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ListTagsOfResourceOutput(wrapped_response))

    def PutItem(self, input: DafnyPutItemInput) -> DafnyPutItemOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: PutItemInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_PutItemInput(input)
        try:
            wrapped_response = self._impl.put_item(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_PutItemOutput(wrapped_response))

    def Query(self, input: DafnyQueryInput) -> DafnyQueryOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: QueryInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_QueryInput(input)
        try:
            wrapped_response = self._impl.query(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_QueryOutput(wrapped_response))

    def RestoreTableFromBackup(self, input: DafnyRestoreTableFromBackupInput) -> DafnyRestoreTableFromBackupOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: RestoreTableFromBackupInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_RestoreTableFromBackupInput(input)
        try:
            wrapped_response = self._impl.restore_table_from_backup(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_RestoreTableFromBackupOutput(wrapped_response))

    def RestoreTableToPointInTime(self, input: DafnyRestoreTableToPointInTimeInput) -> DafnyRestoreTableToPointInTimeOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: RestoreTableToPointInTimeInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_RestoreTableToPointInTimeInput(input)
        try:
            wrapped_response = self._impl.restore_table_to_point_in_time(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_RestoreTableToPointInTimeOutput(wrapped_response))

    def Scan(self, input: DafnyScanInput) -> DafnyScanOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: ScanInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_ScanInput(input)
        try:
            wrapped_response = self._impl.scan(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_ScanOutput(wrapped_response))

    def TagResource(self, input: DafnyTagResourceInput) -> None:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: TagResourceInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_TagResourceInput(input)
        try:
            wrapped_response = self._impl.tag_resource(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(None)

    def TransactGetItems(self, input: DafnyTransactGetItemsInput) -> DafnyTransactGetItemsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: TransactGetItemsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_TransactGetItemsInput(input)
        try:
            wrapped_response = self._impl.transact_get_items(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_TransactGetItemsOutput(wrapped_response))

    def TransactWriteItems(self, input: DafnyTransactWriteItemsInput) -> DafnyTransactWriteItemsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: TransactWriteItemsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_TransactWriteItemsInput(input)
        try:
            wrapped_response = self._impl.transact_write_items(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_TransactWriteItemsOutput(wrapped_response))

    def UntagResource(self, input: DafnyUntagResourceInput) -> None:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UntagResourceInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UntagResourceInput(input)
        try:
            wrapped_response = self._impl.untag_resource(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(None)

    def UpdateContinuousBackups(self, input: DafnyUpdateContinuousBackupsInput) -> DafnyUpdateContinuousBackupsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateContinuousBackupsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateContinuousBackupsInput(input)
        try:
            wrapped_response = self._impl.update_continuous_backups(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateContinuousBackupsOutput(wrapped_response))

    def UpdateContributorInsights(self, input: DafnyUpdateContributorInsightsInput) -> DafnyUpdateContributorInsightsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateContributorInsightsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateContributorInsightsInput(input)
        try:
            wrapped_response = self._impl.update_contributor_insights(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateContributorInsightsOutput(wrapped_response))

    def UpdateGlobalTable(self, input: DafnyUpdateGlobalTableInput) -> DafnyUpdateGlobalTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateGlobalTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalTableInput(input)
        try:
            wrapped_response = self._impl.update_global_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalTableOutput(wrapped_response))

    def UpdateGlobalTableSettings(self, input: DafnyUpdateGlobalTableSettingsInput) -> DafnyUpdateGlobalTableSettingsOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateGlobalTableSettingsInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalTableSettingsInput(input)
        try:
            wrapped_response = self._impl.update_global_table_settings(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalTableSettingsOutput(wrapped_response))

    def UpdateItem(self, input: DafnyUpdateItemInput) -> DafnyUpdateItemOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateItemInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateItemInput(input)
        try:
            wrapped_response = self._impl.update_item(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateItemOutput(wrapped_response))

    def UpdateTable(self, input: DafnyUpdateTableInput) -> DafnyUpdateTableOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateTableInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateTableInput(input)
        try:
            wrapped_response = self._impl.update_table(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateTableOutput(wrapped_response))

    def UpdateTableReplicaAutoScaling(self, input: DafnyUpdateTableReplicaAutoScalingInput) -> DafnyUpdateTableReplicaAutoScalingOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateTableReplicaAutoScalingInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingInput(input)
        try:
            wrapped_response = self._impl.update_table_replica_auto_scaling(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingOutput(wrapped_response))

    def UpdateTimeToLive(self, input: DafnyUpdateTimeToLiveInput) -> DafnyUpdateTimeToLiveOutput:
        # Import dafny_to_smithy at runtime to prevent introducing circular dependency on shim file
        from . import dafny_to_aws_sdk
        unwrapped_request: UpdateTimeToLiveInput = dafny_to_aws_sdk.DafnyToSmithy_com_amazonaws_dynamodb_UpdateTimeToLiveInput(input)
        try:
            wrapped_response = self._impl.update_time_to_live(**unwrapped_request)
        except ClientError as e:
            return Wrappers.Result_Failure(smithy_error_to_dafny_error(e))

        return Wrappers.Result_Success(SmithyToDafny_com_amazonaws_dynamodb_UpdateTimeToLiveOutput(wrapped_response))
