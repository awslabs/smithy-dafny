# Code generated by smithy-python-codegen DO NOT EDIT.

from com_amazonaws_dynamodb_internaldafny_types import (
    AttributeValue_B,
    AttributeValue_BOOL,
    AttributeValue_BS,
    AttributeValue_L,
    AttributeValue_M,
    AttributeValue_N,
    AttributeValue_NS,
    AttributeValue_NULL,
    AttributeValue_S,
    AttributeValue_SS,
)

from .models import (
    ArchivalSummary,
    AttributeDefinition,
    AttributeValueB,
    AttributeValueBOOL,
    AttributeValueBS,
    AttributeValueL,
    AttributeValueM,
    AttributeValueN,
    AttributeValueNS,
    AttributeValueNULL,
    AttributeValueS,
    AttributeValueSS,
    AutoScalingPolicyDescription,
    AutoScalingSettingsDescription,
    AutoScalingTargetTrackingScalingPolicyConfigurationDescription,
    BackupDescription,
    BackupDetails,
    BackupSummary,
    BatchExecuteStatementOutput,
    BatchGetItemOutput,
    BatchStatementError,
    BatchStatementResponse,
    BatchWriteItemOutput,
    BillingModeSummary,
    Capacity,
    ConsumedCapacity,
    ContinuousBackupsDescription,
    ContributorInsightsSummary,
    CreateBackupOutput,
    CreateGlobalTableOutput,
    CreateTableOutput,
    CsvOptions,
    DeleteBackupOutput,
    DeleteItemOutput,
    DeleteRequest,
    DeleteTableOutput,
    DescribeBackupOutput,
    DescribeContinuousBackupsOutput,
    DescribeContributorInsightsOutput,
    DescribeEndpointsResponse,
    DescribeExportOutput,
    DescribeGlobalTableOutput,
    DescribeGlobalTableSettingsOutput,
    DescribeImportOutput,
    DescribeKinesisStreamingDestinationOutput,
    DescribeLimitsOutput,
    DescribeTableOutput,
    DescribeTableReplicaAutoScalingOutput,
    DescribeTimeToLiveOutput,
    DisableKinesisStreamingDestinationOutput,
    EnableKinesisStreamingDestinationOutput,
    Endpoint,
    ExecuteStatementOutput,
    ExecuteTransactionOutput,
    ExportDescription,
    ExportSummary,
    ExportTableToPointInTimeOutput,
    FailureException,
    GetItemOutput,
    GlobalSecondaryIndex,
    GlobalSecondaryIndexDescription,
    GlobalSecondaryIndexInfo,
    GlobalTable,
    GlobalTableDescription,
    ImportSummary,
    ImportTableDescription,
    ImportTableOutput,
    InputFormatOptions,
    ItemCollectionMetrics,
    ItemResponse,
    KeySchemaElement,
    KeysAndAttributes,
    KinesisDataStreamDestination,
    ListBackupsOutput,
    ListContributorInsightsOutput,
    ListExportsOutput,
    ListGlobalTablesOutput,
    ListImportsOutput,
    ListTablesOutput,
    ListTagsOfResourceOutput,
    LocalSecondaryIndexDescription,
    LocalSecondaryIndexInfo,
    PointInTimeRecoveryDescription,
    Projection,
    ProvisionedThroughput,
    ProvisionedThroughputDescription,
    ProvisionedThroughputOverride,
    PutItemOutput,
    PutRequest,
    QueryOutput,
    Replica,
    ReplicaAutoScalingDescription,
    ReplicaDescription,
    ReplicaGlobalSecondaryIndexAutoScalingDescription,
    ReplicaGlobalSecondaryIndexDescription,
    ReplicaGlobalSecondaryIndexSettingsDescription,
    ReplicaSettingsDescription,
    RestoreSummary,
    RestoreTableFromBackupOutput,
    RestoreTableToPointInTimeOutput,
    S3BucketSource,
    SSEDescription,
    SSESpecification,
    ScanOutput,
    SourceTableDetails,
    SourceTableFeatureDetails,
    StreamSpecification,
    TableAutoScalingDescription,
    TableClassSummary,
    TableCreationParameters,
    TableDescription,
    Tag,
    TimeToLiveDescription,
    TimeToLiveSpecification,
    TransactGetItemsOutput,
    TransactWriteItemsOutput,
    UpdateContinuousBackupsOutput,
    UpdateContributorInsightsOutput,
    UpdateGlobalTableOutput,
    UpdateGlobalTableSettingsOutput,
    UpdateItemOutput,
    UpdateTableOutput,
    UpdateTableReplicaAutoScalingOutput,
    UpdateTimeToLiveOutput,
    WriteRequest,
)



def DafnyToSmithy_com_amazonaws_dynamodb_BackupDetails(input):
    return BackupDetails(
        backup_arn=input.BackupArn,
        backup_name=input.BackupName,
        backup_size_bytes=input.BackupSizeBytes.UnwrapOr(None),
        backup_status=input.BackupStatus,
        backup_type=input.BackupType,
        backup_creation_date_time=input.BackupCreationDateTime,
        backup_expiry_date_time=input.BackupExpiryDateTime.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(input):
    return KeySchemaElement(
        attribute_name=input.AttributeName,
        key_type=input.KeyType,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input):
    return ProvisionedThroughput(
        read_capacity_units=input.ReadCapacityUnits,
        write_capacity_units=input.WriteCapacityUnits,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_SourceTableDetails(input):
    return SourceTableDetails(
        table_name=input.TableName,
        table_id=input.TableId,
        table_arn=input.TableArn.UnwrapOr(None),
        table_size_bytes=input.TableSizeBytes.UnwrapOr(None),
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema],
        table_creation_date_time=input.TableCreationDateTime,
        provisioned_throughput=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput),
        item_count=input.ItemCount.UnwrapOr(None),
        billing_mode=input.BillingMode.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_Projection(input):
    return Projection(
        projection_type=input.ProjectionType.UnwrapOr(None),
        non_key_attributes=[list_element for list_element in input.NonKeyAttributes.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndexInfo(input):
    return LocalSecondaryIndexInfo(
        index_name=input.IndexName.UnwrapOr(None),
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.UnwrapOr(None)],
        projection=DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexInfo(input):
    return GlobalSecondaryIndexInfo(
        index_name=input.IndexName.UnwrapOr(None),
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.UnwrapOr(None)],
        projection=DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection.UnwrapOr(None)),
        provisioned_throughput=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_StreamSpecification(input):
    return StreamSpecification(
        stream_enabled=input.StreamEnabled,
        stream_view_type=input.StreamViewType.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveDescription(input):
    return TimeToLiveDescription(
        time_to_live_status=input.TimeToLiveStatus.UnwrapOr(None),
        attribute_name=input.AttributeName.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_SSEDescription(input):
    return SSEDescription(
        status=input.Status.UnwrapOr(None),
        sse_type=input.SSEType.UnwrapOr(None),
        kms_master_key_arn=input.KMSMasterKeyArn.UnwrapOr(None),
        inaccessible_encryption_date_time=input.InaccessibleEncryptionDateTime.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_SourceTableFeatureDetails(input):
    return SourceTableFeatureDetails(
        local_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndexInfo(list_element) for list_element in input.LocalSecondaryIndexes.UnwrapOr(None)],
        global_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexInfo(list_element) for list_element in input.GlobalSecondaryIndexes.UnwrapOr(None)],
        stream_description=DafnyToSmithy_com_amazonaws_dynamodb_StreamSpecification(input.StreamDescription.UnwrapOr(None)),
        time_to_live_description=DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveDescription(input.TimeToLiveDescription.UnwrapOr(None)),
        sse_description=DafnyToSmithy_com_amazonaws_dynamodb_SSEDescription(input.SSEDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BackupDescription(input):
    return BackupDescription(
        backup_details=DafnyToSmithy_com_amazonaws_dynamodb_BackupDetails(input.BackupDetails.UnwrapOr(None)),
        source_table_details=DafnyToSmithy_com_amazonaws_dynamodb_SourceTableDetails(input.SourceTableDetails.UnwrapOr(None)),
        source_table_feature_details=DafnyToSmithy_com_amazonaws_dynamodb_SourceTableFeatureDetails(input.SourceTableFeatureDetails.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteBackupOutput(input):
    return DeleteBackupOutput(
        backup_description=DafnyToSmithy_com_amazonaws_dynamodb_BackupDescription(input.BackupDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(input):
    # Convert AttributeValue
    if isinstance(input, AttributeValue_S):
        AttributeValue_union_value = AttributeValueS(input.S)
    elif isinstance(input, AttributeValue_N):
        AttributeValue_union_value = AttributeValueN(input.N)
    elif isinstance(input, AttributeValue_B):
        AttributeValue_union_value = AttributeValueB(input.B)
    elif isinstance(input, AttributeValue_SS):
        AttributeValue_union_value = AttributeValueSS(input.SS)
    elif isinstance(input, AttributeValue_NS):
        AttributeValue_union_value = AttributeValueNS(input.NS)
    elif isinstance(input, AttributeValue_BS):
        AttributeValue_union_value = AttributeValueBS(input.BS)
    elif isinstance(input, AttributeValue_M):
        AttributeValue_union_value = AttributeValueM(input.M)
    elif isinstance(input, AttributeValue_L):
        AttributeValue_union_value = AttributeValueL(input.L)
    elif isinstance(input, AttributeValue_NULL):
        AttributeValue_union_value = AttributeValueNULL(input.NULL)
    elif isinstance(input, AttributeValue_BOOL):
        AttributeValue_union_value = AttributeValueBOOL(input.BOOL)
    else:
        raise ValueError("No recognized union value in union type: " + input)

    return AttributeValue_union_value

def DafnyToSmithy_com_amazonaws_dynamodb_Capacity(input):
    return Capacity(
        read_capacity_units=input.ReadCapacityUnits.UnwrapOr(None),
        write_capacity_units=input.WriteCapacityUnits.UnwrapOr(None),
        capacity_units=input.CapacityUnits.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input):
    return ConsumedCapacity(
        table_name=input.TableName.UnwrapOr(None),
        capacity_units=input.CapacityUnits.UnwrapOr(None),
        read_capacity_units=input.ReadCapacityUnits.UnwrapOr(None),
        write_capacity_units=input.WriteCapacityUnits.UnwrapOr(None),
        table=DafnyToSmithy_com_amazonaws_dynamodb_Capacity(input.Table.UnwrapOr(None)),
        local_secondary_indexes={key: DafnyToSmithy_com_amazonaws_dynamodb_Capacity(value) for (key, value) in input.LocalSecondaryIndexes.UnwrapOr(None).items },
        global_secondary_indexes={key: DafnyToSmithy_com_amazonaws_dynamodb_Capacity(value) for (key, value) in input.GlobalSecondaryIndexes.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ItemCollectionMetrics(input):
    return ItemCollectionMetrics(
        item_collection_key={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ItemCollectionKey.UnwrapOr(None).items },
        size_estimate_range_gb=[list_element for list_element in input.SizeEstimateRangeGB.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteItemOutput(input):
    return DeleteItemOutput(
        attributes={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Attributes.UnwrapOr(None).items },
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
        item_collection_metrics=DafnyToSmithy_com_amazonaws_dynamodb_ItemCollectionMetrics(input.ItemCollectionMetrics.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ItemResponse(input):
    return ItemResponse(
        item={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ExecuteTransactionOutput(input):
    return ExecuteTransactionOutput(
        responses=[DafnyToSmithy_com_amazonaws_dynamodb_ItemResponse(list_element) for list_element in input.Responses.UnwrapOr(None)],
        consumed_capacity=[DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input):
    return ProvisionedThroughputOverride(
        read_capacity_units=input.ReadCapacityUnits.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexDescription(input):
    return ReplicaGlobalSecondaryIndexDescription(
        index_name=input.IndexName.UnwrapOr(None),
        provisioned_throughput_override=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TableClassSummary(input):
    return TableClassSummary(
        table_class=input.TableClass.UnwrapOr(None),
        last_update_date_time=input.LastUpdateDateTime.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaDescription(input):
    return ReplicaDescription(
        region_name=input.RegionName.UnwrapOr(None),
        replica_status=input.ReplicaStatus.UnwrapOr(None),
        replica_status_description=input.ReplicaStatusDescription.UnwrapOr(None),
        replica_status_percent_progress=input.ReplicaStatusPercentProgress.UnwrapOr(None),
        kms_master_key_id=input.KMSMasterKeyId.UnwrapOr(None),
        provisioned_throughput_override=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.UnwrapOr(None)),
        global_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexDescription(list_element) for list_element in input.GlobalSecondaryIndexes.UnwrapOr(None)],
        replica_inaccessible_date_time=input.ReplicaInaccessibleDateTime.UnwrapOr(None),
        replica_table_class_summary=DafnyToSmithy_com_amazonaws_dynamodb_TableClassSummary(input.ReplicaTableClassSummary.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_GlobalTableDescription(input):
    return GlobalTableDescription(
        replication_group=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaDescription(list_element) for list_element in input.ReplicationGroup.UnwrapOr(None)],
        global_table_arn=input.GlobalTableArn.UnwrapOr(None),
        creation_date_time=input.CreationDateTime.UnwrapOr(None),
        global_table_status=input.GlobalTableStatus.UnwrapOr(None),
        global_table_name=input.GlobalTableName.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalTableOutput(input):
    return UpdateGlobalTableOutput(
        global_table_description=DafnyToSmithy_com_amazonaws_dynamodb_GlobalTableDescription(input.GlobalTableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationDescription(input):
    return AutoScalingTargetTrackingScalingPolicyConfigurationDescription(
        disable_scale_in=input.DisableScaleIn.UnwrapOr(None),
        scale_in_cooldown=input.ScaleInCooldown.UnwrapOr(None),
        scale_out_cooldown=input.ScaleOutCooldown.UnwrapOr(None),
        target_value=input.TargetValue,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingPolicyDescription(input):
    return AutoScalingPolicyDescription(
        policy_name=input.PolicyName.UnwrapOr(None),
        target_tracking_scaling_policy_configuration=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationDescription(input.TargetTrackingScalingPolicyConfiguration.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input):
    return AutoScalingSettingsDescription(
        minimum_units=input.MinimumUnits.UnwrapOr(None),
        maximum_units=input.MaximumUnits.UnwrapOr(None),
        auto_scaling_disabled=input.AutoScalingDisabled.UnwrapOr(None),
        auto_scaling_role_arn=input.AutoScalingRoleArn.UnwrapOr(None),
        scaling_policies=[DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingPolicyDescription(list_element) for list_element in input.ScalingPolicies.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingDescription(input):
    return ReplicaGlobalSecondaryIndexAutoScalingDescription(
        index_name=input.IndexName.UnwrapOr(None),
        index_status=input.IndexStatus.UnwrapOr(None),
        provisioned_read_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedReadCapacityAutoScalingSettings.UnwrapOr(None)),
        provisioned_write_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedWriteCapacityAutoScalingSettings.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaAutoScalingDescription(input):
    return ReplicaAutoScalingDescription(
        region_name=input.RegionName.UnwrapOr(None),
        global_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingDescription(list_element) for list_element in input.GlobalSecondaryIndexes.UnwrapOr(None)],
        replica_provisioned_read_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedReadCapacityAutoScalingSettings.UnwrapOr(None)),
        replica_provisioned_write_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedWriteCapacityAutoScalingSettings.UnwrapOr(None)),
        replica_status=input.ReplicaStatus.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TableAutoScalingDescription(input):
    return TableAutoScalingDescription(
        table_name=input.TableName.UnwrapOr(None),
        table_status=input.TableStatus.UnwrapOr(None),
        replicas=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaAutoScalingDescription(list_element) for list_element in input.Replicas.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingOutput(input):
    return UpdateTableReplicaAutoScalingOutput(
        table_auto_scaling_description=DafnyToSmithy_com_amazonaws_dynamodb_TableAutoScalingDescription(input.TableAutoScalingDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeBackupOutput(input):
    return DescribeBackupOutput(
        backup_description=DafnyToSmithy_com_amazonaws_dynamodb_BackupDescription(input.BackupDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ScanOutput(input):
    return ScanOutput(
        items=[{key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Items.UnwrapOr(None)],
        count=input.Count.UnwrapOr(None),
        scanned_count=input.ScannedCount.UnwrapOr(None),
        last_evaluated_key={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.LastEvaluatedKey.UnwrapOr(None).items },
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BillingModeSummary(input):
    return BillingModeSummary(
        billing_mode=input.BillingMode.UnwrapOr(None),
        last_update_to_pay_per_request_date_time=input.LastUpdateToPayPerRequestDateTime.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsDescription(input):
    return ReplicaGlobalSecondaryIndexSettingsDescription(
        index_name=input.IndexName,
        index_status=input.IndexStatus.UnwrapOr(None),
        provisioned_read_capacity_units=input.ProvisionedReadCapacityUnits.UnwrapOr(None),
        provisioned_read_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedReadCapacityAutoScalingSettings.UnwrapOr(None)),
        provisioned_write_capacity_units=input.ProvisionedWriteCapacityUnits.UnwrapOr(None),
        provisioned_write_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ProvisionedWriteCapacityAutoScalingSettings.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaSettingsDescription(input):
    return ReplicaSettingsDescription(
        region_name=input.RegionName,
        replica_status=input.ReplicaStatus.UnwrapOr(None),
        replica_billing_mode_summary=DafnyToSmithy_com_amazonaws_dynamodb_BillingModeSummary(input.ReplicaBillingModeSummary.UnwrapOr(None)),
        replica_provisioned_read_capacity_units=input.ReplicaProvisionedReadCapacityUnits.UnwrapOr(None),
        replica_provisioned_read_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedReadCapacityAutoScalingSettings.UnwrapOr(None)),
        replica_provisioned_write_capacity_units=input.ReplicaProvisionedWriteCapacityUnits.UnwrapOr(None),
        replica_provisioned_write_capacity_auto_scaling_settings=DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsDescription(input.ReplicaProvisionedWriteCapacityAutoScalingSettings.UnwrapOr(None)),
        replica_global_secondary_index_settings=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsDescription(list_element) for list_element in input.ReplicaGlobalSecondaryIndexSettings.UnwrapOr(None)],
        replica_table_class_summary=DafnyToSmithy_com_amazonaws_dynamodb_TableClassSummary(input.ReplicaTableClassSummary.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalTableSettingsOutput(input):
    return UpdateGlobalTableSettingsOutput(
        global_table_name=input.GlobalTableName.UnwrapOr(None),
        replica_settings=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaSettingsDescription(list_element) for list_element in input.ReplicaSettings.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_KeysAndAttributes(input):
    return KeysAndAttributes(
        keys=[{key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Keys],
        attributes_to_get=[list_element for list_element in input.AttributesToGet.UnwrapOr(None)],
        consistent_read=input.ConsistentRead.UnwrapOr(None),
        projection_expression=input.ProjectionExpression.UnwrapOr(None),
        expression_attribute_names={key: value for (key, value) in input.ExpressionAttributeNames.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BatchGetItemOutput(input):
    return BatchGetItemOutput(
        responses={key: [{key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in value] for (key, value) in input.Responses.UnwrapOr(None).items },
        unprocessed_keys={key: DafnyToSmithy_com_amazonaws_dynamodb_KeysAndAttributes(value) for (key, value) in input.UnprocessedKeys.UnwrapOr(None).items },
        consumed_capacity=[DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(input):
    return AttributeDefinition(
        attribute_name=input.AttributeName,
        attribute_type=input.AttributeType,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputDescription(input):
    return ProvisionedThroughputDescription(
        last_increase_date_time=input.LastIncreaseDateTime.UnwrapOr(None),
        last_decrease_date_time=input.LastDecreaseDateTime.UnwrapOr(None),
        number_of_decreases_today=input.NumberOfDecreasesToday.UnwrapOr(None),
        read_capacity_units=input.ReadCapacityUnits.UnwrapOr(None),
        write_capacity_units=input.WriteCapacityUnits.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndexDescription(input):
    return LocalSecondaryIndexDescription(
        index_name=input.IndexName.UnwrapOr(None),
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.UnwrapOr(None)],
        projection=DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection.UnwrapOr(None)),
        index_size_bytes=input.IndexSizeBytes.UnwrapOr(None),
        item_count=input.ItemCount.UnwrapOr(None),
        index_arn=input.IndexArn.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexDescription(input):
    return GlobalSecondaryIndexDescription(
        index_name=input.IndexName.UnwrapOr(None),
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.UnwrapOr(None)],
        projection=DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection.UnwrapOr(None)),
        index_status=input.IndexStatus.UnwrapOr(None),
        backfilling=input.Backfilling.UnwrapOr(None),
        provisioned_throughput=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputDescription(input.ProvisionedThroughput.UnwrapOr(None)),
        index_size_bytes=input.IndexSizeBytes.UnwrapOr(None),
        item_count=input.ItemCount.UnwrapOr(None),
        index_arn=input.IndexArn.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_RestoreSummary(input):
    return RestoreSummary(
        source_backup_arn=input.SourceBackupArn.UnwrapOr(None),
        source_table_arn=input.SourceTableArn.UnwrapOr(None),
        restore_date_time=input.RestoreDateTime,
        restore_in_progress=input.RestoreInProgress,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ArchivalSummary(input):
    return ArchivalSummary(
        archival_date_time=input.ArchivalDateTime.UnwrapOr(None),
        archival_reason=input.ArchivalReason.UnwrapOr(None),
        archival_backup_arn=input.ArchivalBackupArn.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input):
    return TableDescription(
        attribute_definitions=[DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions.UnwrapOr(None)],
        table_name=input.TableName.UnwrapOr(None),
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema.UnwrapOr(None)],
        table_status=input.TableStatus.UnwrapOr(None),
        creation_date_time=input.CreationDateTime.UnwrapOr(None),
        provisioned_throughput=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputDescription(input.ProvisionedThroughput.UnwrapOr(None)),
        table_size_bytes=input.TableSizeBytes.UnwrapOr(None),
        item_count=input.ItemCount.UnwrapOr(None),
        table_arn=input.TableArn.UnwrapOr(None),
        table_id=input.TableId.UnwrapOr(None),
        billing_mode_summary=DafnyToSmithy_com_amazonaws_dynamodb_BillingModeSummary(input.BillingModeSummary.UnwrapOr(None)),
        local_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndexDescription(list_element) for list_element in input.LocalSecondaryIndexes.UnwrapOr(None)],
        global_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexDescription(list_element) for list_element in input.GlobalSecondaryIndexes.UnwrapOr(None)],
        stream_specification=DafnyToSmithy_com_amazonaws_dynamodb_StreamSpecification(input.StreamSpecification.UnwrapOr(None)),
        latest_stream_label=input.LatestStreamLabel.UnwrapOr(None),
        latest_stream_arn=input.LatestStreamArn.UnwrapOr(None),
        global_table_version=input.GlobalTableVersion.UnwrapOr(None),
        replicas=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaDescription(list_element) for list_element in input.Replicas.UnwrapOr(None)],
        restore_summary=DafnyToSmithy_com_amazonaws_dynamodb_RestoreSummary(input.RestoreSummary.UnwrapOr(None)),
        sse_description=DafnyToSmithy_com_amazonaws_dynamodb_SSEDescription(input.SSEDescription.UnwrapOr(None)),
        archival_summary=DafnyToSmithy_com_amazonaws_dynamodb_ArchivalSummary(input.ArchivalSummary.UnwrapOr(None)),
        table_class_summary=DafnyToSmithy_com_amazonaws_dynamodb_TableClassSummary(input.TableClassSummary.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeTableOutput(input):
    return DescribeTableOutput(
        table=DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input.Table.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_QueryOutput(input):
    return QueryOutput(
        items=[{key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Items.UnwrapOr(None)],
        count=input.Count.UnwrapOr(None),
        scanned_count=input.ScannedCount.UnwrapOr(None),
        last_evaluated_key={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.LastEvaluatedKey.UnwrapOr(None).items },
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingOutput(input):
    return DescribeTableReplicaAutoScalingOutput(
        table_auto_scaling_description=DafnyToSmithy_com_amazonaws_dynamodb_TableAutoScalingDescription(input.TableAutoScalingDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_PutItemOutput(input):
    return PutItemOutput(
        attributes={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Attributes.UnwrapOr(None).items },
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
        item_collection_metrics=DafnyToSmithy_com_amazonaws_dynamodb_ItemCollectionMetrics(input.ItemCollectionMetrics.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationOutput(input):
    return DisableKinesisStreamingDestinationOutput(
        table_name=input.TableName.UnwrapOr(None),
        stream_arn=input.StreamArn.UnwrapOr(None),
        destination_status=input.DestinationStatus.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_PutRequest(input):
    return PutRequest(
        item={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteRequest(input):
    return DeleteRequest(
        key={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_WriteRequest(input):
    return WriteRequest(
        put_request=DafnyToSmithy_com_amazonaws_dynamodb_PutRequest(input.PutRequest.UnwrapOr(None)),
        delete_request=DafnyToSmithy_com_amazonaws_dynamodb_DeleteRequest(input.DeleteRequest.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BatchWriteItemOutput(input):
    return BatchWriteItemOutput(
        unprocessed_items={key: [DafnyToSmithy_com_amazonaws_dynamodb_WriteRequest(list_element) for list_element in value] for (key, value) in input.UnprocessedItems.UnwrapOr(None).items },
        item_collection_metrics={key: [DafnyToSmithy_com_amazonaws_dynamodb_ItemCollectionMetrics(list_element) for list_element in value] for (key, value) in input.ItemCollectionMetrics.UnwrapOr(None).items },
        consumed_capacity=[DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BatchStatementError(input):
    return BatchStatementError(
        code=input.Code.UnwrapOr(None),
        message=input.Message.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BatchStatementResponse(input):
    return BatchStatementResponse(
        error=DafnyToSmithy_com_amazonaws_dynamodb_BatchStatementError(input.Error.UnwrapOr(None)),
        table_name=input.TableName.UnwrapOr(None),
        item={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BatchExecuteStatementOutput(input):
    return BatchExecuteStatementOutput(
        responses=[DafnyToSmithy_com_amazonaws_dynamodb_BatchStatementResponse(list_element) for list_element in input.Responses.UnwrapOr(None)],
        consumed_capacity=[DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_Tag(input):
    return Tag(
        key=input.Key,
        value=input.Value,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListTagsOfResourceOutput(input):
    return ListTagsOfResourceOutput(
        tags=[DafnyToSmithy_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.Tags.UnwrapOr(None)],
        next_token=input.NextToken.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListTablesOutput(input):
    return ListTablesOutput(
        table_names=[list_element for list_element in input.TableNames.UnwrapOr(None)],
        last_evaluated_table_name=input.LastEvaluatedTableName.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ExportDescription(input):
    return ExportDescription(
        export_arn=input.ExportArn.UnwrapOr(None),
        export_status=input.ExportStatus.UnwrapOr(None),
        start_time=input.StartTime.UnwrapOr(None),
        end_time=input.EndTime.UnwrapOr(None),
        export_manifest=input.ExportManifest.UnwrapOr(None),
        table_arn=input.TableArn.UnwrapOr(None),
        table_id=input.TableId.UnwrapOr(None),
        export_time=input.ExportTime.UnwrapOr(None),
        client_token=input.ClientToken.UnwrapOr(None),
        s3_bucket=input.S3Bucket.UnwrapOr(None),
        s3_bucket_owner=input.S3BucketOwner.UnwrapOr(None),
        s3_prefix=input.S3Prefix.UnwrapOr(None),
        s3_sse_algorithm=input.S3SseAlgorithm.UnwrapOr(None),
        s3_sse_kms_key_id=input.S3SseKmsKeyId.UnwrapOr(None),
        failure_code=input.FailureCode.UnwrapOr(None),
        failure_message=input.FailureMessage.UnwrapOr(None),
        export_format=input.ExportFormat.UnwrapOr(None),
        billed_size_bytes=input.BilledSizeBytes.UnwrapOr(None),
        item_count=input.ItemCount.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeExportOutput(input):
    return DescribeExportOutput(
        export_description=DafnyToSmithy_com_amazonaws_dynamodb_ExportDescription(input.ExportDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeTimeToLiveOutput(input):
    return DescribeTimeToLiveOutput(
        time_to_live_description=DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveDescription(input.TimeToLiveDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TransactGetItemsOutput(input):
    return TransactGetItemsOutput(
        consumed_capacity=[DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.UnwrapOr(None)],
        responses=[DafnyToSmithy_com_amazonaws_dynamodb_ItemResponse(list_element) for list_element in input.Responses.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ContributorInsightsSummary(input):
    return ContributorInsightsSummary(
        table_name=input.TableName.UnwrapOr(None),
        index_name=input.IndexName.UnwrapOr(None),
        contributor_insights_status=input.ContributorInsightsStatus.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListContributorInsightsOutput(input):
    return ListContributorInsightsOutput(
        contributor_insights_summaries=[DafnyToSmithy_com_amazonaws_dynamodb_ContributorInsightsSummary(list_element) for list_element in input.ContributorInsightsSummaries.UnwrapOr(None)],
        next_token=input.NextToken.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_FailureException(input):
    return FailureException(
        exception_name=input.ExceptionName.UnwrapOr(None),
        exception_description=input.ExceptionDescription.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeContributorInsightsOutput(input):
    return DescribeContributorInsightsOutput(
        table_name=input.TableName.UnwrapOr(None),
        index_name=input.IndexName.UnwrapOr(None),
        contributor_insights_rule_list=[list_element for list_element in input.ContributorInsightsRuleList.UnwrapOr(None)],
        contributor_insights_status=input.ContributorInsightsStatus.UnwrapOr(None),
        last_update_date_time=input.LastUpdateDateTime.UnwrapOr(None),
        failure_exception=DafnyToSmithy_com_amazonaws_dynamodb_FailureException(input.FailureException.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateContributorInsightsOutput(input):
    return UpdateContributorInsightsOutput(
        table_name=input.TableName.UnwrapOr(None),
        index_name=input.IndexName.UnwrapOr(None),
        contributor_insights_status=input.ContributorInsightsStatus.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_Replica(input):
    return Replica(
        region_name=input.RegionName.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_GlobalTable(input):
    return GlobalTable(
        global_table_name=input.GlobalTableName.UnwrapOr(None),
        replication_group=[DafnyToSmithy_com_amazonaws_dynamodb_Replica(list_element) for list_element in input.ReplicationGroup.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListGlobalTablesOutput(input):
    return ListGlobalTablesOutput(
        global_tables=[DafnyToSmithy_com_amazonaws_dynamodb_GlobalTable(list_element) for list_element in input.GlobalTables.UnwrapOr(None)],
        last_evaluated_global_table_name=input.LastEvaluatedGlobalTableName.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ExportSummary(input):
    return ExportSummary(
        export_arn=input.ExportArn.UnwrapOr(None),
        export_status=input.ExportStatus.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListExportsOutput(input):
    return ListExportsOutput(
        export_summaries=[DafnyToSmithy_com_amazonaws_dynamodb_ExportSummary(list_element) for list_element in input.ExportSummaries.UnwrapOr(None)],
        next_token=input.NextToken.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_BackupSummary(input):
    return BackupSummary(
        table_name=input.TableName.UnwrapOr(None),
        table_id=input.TableId.UnwrapOr(None),
        table_arn=input.TableArn.UnwrapOr(None),
        backup_arn=input.BackupArn.UnwrapOr(None),
        backup_name=input.BackupName.UnwrapOr(None),
        backup_creation_date_time=input.BackupCreationDateTime.UnwrapOr(None),
        backup_expiry_date_time=input.BackupExpiryDateTime.UnwrapOr(None),
        backup_status=input.BackupStatus.UnwrapOr(None),
        backup_type=input.BackupType.UnwrapOr(None),
        backup_size_bytes=input.BackupSizeBytes.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListBackupsOutput(input):
    return ListBackupsOutput(
        backup_summaries=[DafnyToSmithy_com_amazonaws_dynamodb_BackupSummary(list_element) for list_element in input.BackupSummaries.UnwrapOr(None)],
        last_evaluated_backup_arn=input.LastEvaluatedBackupArn.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationOutput(input):
    return EnableKinesisStreamingDestinationOutput(
        table_name=input.TableName.UnwrapOr(None),
        stream_arn=input.StreamArn.UnwrapOr(None),
        destination_status=input.DestinationStatus.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ExportTableToPointInTimeOutput(input):
    return ExportTableToPointInTimeOutput(
        export_description=DafnyToSmithy_com_amazonaws_dynamodb_ExportDescription(input.ExportDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_Endpoint(input):
    return Endpoint(
        address=input.Address,
        cache_period_in_minutes=input.CachePeriodInMinutes,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeEndpointsResponse(input):
    return DescribeEndpointsResponse(
        endpoints=[DafnyToSmithy_com_amazonaws_dynamodb_Endpoint(list_element) for list_element in input.Endpoints],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveSpecification(input):
    return TimeToLiveSpecification(
        enabled=input.Enabled,
        attribute_name=input.AttributeName,
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateTimeToLiveOutput(input):
    return UpdateTimeToLiveOutput(
        time_to_live_specification=DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveSpecification(input.TimeToLiveSpecification.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_S3BucketSource(input):
    return S3BucketSource(
        s3_bucket_owner=input.S3BucketOwner.UnwrapOr(None),
        s3_bucket=input.S3Bucket,
        s3_key_prefix=input.S3KeyPrefix.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ImportSummary(input):
    return ImportSummary(
        import_arn=input.ImportArn.UnwrapOr(None),
        import_status=input.ImportStatus.UnwrapOr(None),
        table_arn=input.TableArn.UnwrapOr(None),
        s3_bucket_source=DafnyToSmithy_com_amazonaws_dynamodb_S3BucketSource(input.S3BucketSource.UnwrapOr(None)),
        cloud_watch_log_group_arn=input.CloudWatchLogGroupArn.UnwrapOr(None),
        input_format=input.InputFormat.UnwrapOr(None),
        start_time=input.StartTime.UnwrapOr(None),
        end_time=input.EndTime.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ListImportsOutput(input):
    return ListImportsOutput(
        import_summary_list=[DafnyToSmithy_com_amazonaws_dynamodb_ImportSummary(list_element) for list_element in input.ImportSummaryList.UnwrapOr(None)],
        next_token=input.NextToken.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteTableOutput(input):
    return DeleteTableOutput(
        table_description=DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input.TableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_RestoreTableFromBackupOutput(input):
    return RestoreTableFromBackupOutput(
        table_description=DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input.TableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeGlobalTableSettingsOutput(input):
    return DescribeGlobalTableSettingsOutput(
        global_table_name=input.GlobalTableName.UnwrapOr(None),
        replica_settings=[DafnyToSmithy_com_amazonaws_dynamodb_ReplicaSettingsDescription(list_element) for list_element in input.ReplicaSettings.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeLimitsOutput(input):
    return DescribeLimitsOutput(
        account_max_read_capacity_units=input.AccountMaxReadCapacityUnits.UnwrapOr(None),
        account_max_write_capacity_units=input.AccountMaxWriteCapacityUnits.UnwrapOr(None),
        table_max_read_capacity_units=input.TableMaxReadCapacityUnits.UnwrapOr(None),
        table_max_write_capacity_units=input.TableMaxWriteCapacityUnits.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_RestoreTableToPointInTimeOutput(input):
    return RestoreTableToPointInTimeOutput(
        table_description=DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input.TableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_GetItemOutput(input):
    return GetItemOutput(
        item={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.UnwrapOr(None).items },
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateTableOutput(input):
    return UpdateTableOutput(
        table_description=DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input.TableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateItemOutput(input):
    return UpdateItemOutput(
        attributes={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Attributes.UnwrapOr(None).items },
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
        item_collection_metrics=DafnyToSmithy_com_amazonaws_dynamodb_ItemCollectionMetrics(input.ItemCollectionMetrics.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_CsvOptions(input):
    return CsvOptions(
        delimiter=input.Delimiter.UnwrapOr(None),
        header_list=[list_element for list_element in input.HeaderList.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_InputFormatOptions(input):
    return InputFormatOptions(
        csv=DafnyToSmithy_com_amazonaws_dynamodb_CsvOptions(input.Csv.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input):
    return SSESpecification(
        enabled=input.Enabled.UnwrapOr(None),
        sse_type=input.SSEType.UnwrapOr(None),
        kms_master_key_id=input.KMSMasterKeyId.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(input):
    return GlobalSecondaryIndex(
        index_name=input.IndexName,
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema],
        projection=DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection),
        provisioned_throughput=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TableCreationParameters(input):
    return TableCreationParameters(
        table_name=input.TableName,
        attribute_definitions=[DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions],
        key_schema=[DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema],
        billing_mode=input.BillingMode.UnwrapOr(None),
        provisioned_throughput=DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.UnwrapOr(None)),
        sse_specification=DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.UnwrapOr(None)),
        global_secondary_indexes=[DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ImportTableDescription(input):
    return ImportTableDescription(
        import_arn=input.ImportArn.UnwrapOr(None),
        import_status=input.ImportStatus.UnwrapOr(None),
        table_arn=input.TableArn.UnwrapOr(None),
        table_id=input.TableId.UnwrapOr(None),
        client_token=input.ClientToken.UnwrapOr(None),
        s3_bucket_source=DafnyToSmithy_com_amazonaws_dynamodb_S3BucketSource(input.S3BucketSource.UnwrapOr(None)),
        error_count=input.ErrorCount.UnwrapOr(None),
        cloud_watch_log_group_arn=input.CloudWatchLogGroupArn.UnwrapOr(None),
        input_format=input.InputFormat.UnwrapOr(None),
        input_format_options=DafnyToSmithy_com_amazonaws_dynamodb_InputFormatOptions(input.InputFormatOptions.UnwrapOr(None)),
        input_compression_type=input.InputCompressionType.UnwrapOr(None),
        table_creation_parameters=DafnyToSmithy_com_amazonaws_dynamodb_TableCreationParameters(input.TableCreationParameters.UnwrapOr(None)),
        start_time=input.StartTime.UnwrapOr(None),
        end_time=input.EndTime.UnwrapOr(None),
        processed_size_bytes=input.ProcessedSizeBytes.UnwrapOr(None),
        processed_item_count=input.ProcessedItemCount.UnwrapOr(None),
        imported_item_count=input.ImportedItemCount.UnwrapOr(None),
        failure_code=input.FailureCode.UnwrapOr(None),
        failure_message=input.FailureMessage.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeImportOutput(input):
    return DescribeImportOutput(
        import_table_description=DafnyToSmithy_com_amazonaws_dynamodb_ImportTableDescription(input.ImportTableDescription),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeGlobalTableOutput(input):
    return DescribeGlobalTableOutput(
        global_table_description=DafnyToSmithy_com_amazonaws_dynamodb_GlobalTableDescription(input.GlobalTableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_TransactWriteItemsOutput(input):
    return TransactWriteItemsOutput(
        consumed_capacity=[DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(list_element) for list_element in input.ConsumedCapacity.UnwrapOr(None)],
        item_collection_metrics={key: [DafnyToSmithy_com_amazonaws_dynamodb_ItemCollectionMetrics(list_element) for list_element in value] for (key, value) in input.ItemCollectionMetrics.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_PointInTimeRecoveryDescription(input):
    return PointInTimeRecoveryDescription(
        point_in_time_recovery_status=input.PointInTimeRecoveryStatus.UnwrapOr(None),
        earliest_restorable_date_time=input.EarliestRestorableDateTime.UnwrapOr(None),
        latest_restorable_date_time=input.LatestRestorableDateTime.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ContinuousBackupsDescription(input):
    return ContinuousBackupsDescription(
        continuous_backups_status=input.ContinuousBackupsStatus,
        point_in_time_recovery_description=DafnyToSmithy_com_amazonaws_dynamodb_PointInTimeRecoveryDescription(input.PointInTimeRecoveryDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateContinuousBackupsOutput(input):
    return UpdateContinuousBackupsOutput(
        continuous_backups_description=DafnyToSmithy_com_amazonaws_dynamodb_ContinuousBackupsDescription(input.ContinuousBackupsDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_CreateBackupOutput(input):
    return CreateBackupOutput(
        backup_details=DafnyToSmithy_com_amazonaws_dynamodb_BackupDetails(input.BackupDetails.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ImportTableOutput(input):
    return ImportTableOutput(
        import_table_description=DafnyToSmithy_com_amazonaws_dynamodb_ImportTableDescription(input.ImportTableDescription),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_KinesisDataStreamDestination(input):
    return KinesisDataStreamDestination(
        stream_arn=input.StreamArn.UnwrapOr(None),
        destination_status=input.DestinationStatus.UnwrapOr(None),
        destination_status_description=input.DestinationStatusDescription.UnwrapOr(None),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationOutput(input):
    return DescribeKinesisStreamingDestinationOutput(
        table_name=input.TableName.UnwrapOr(None),
        kinesis_data_stream_destinations=[DafnyToSmithy_com_amazonaws_dynamodb_KinesisDataStreamDestination(list_element) for list_element in input.KinesisDataStreamDestinations.UnwrapOr(None)],
    )

def DafnyToSmithy_com_amazonaws_dynamodb_CreateGlobalTableOutput(input):
    return CreateGlobalTableOutput(
        global_table_description=DafnyToSmithy_com_amazonaws_dynamodb_GlobalTableDescription(input.GlobalTableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_ExecuteStatementOutput(input):
    return ExecuteStatementOutput(
        items=[{key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Items.UnwrapOr(None)],
        next_token=input.NextToken.UnwrapOr(None),
        consumed_capacity=DafnyToSmithy_com_amazonaws_dynamodb_ConsumedCapacity(input.ConsumedCapacity.UnwrapOr(None)),
        last_evaluated_key={key: DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.LastEvaluatedKey.UnwrapOr(None).items },
    )

def DafnyToSmithy_com_amazonaws_dynamodb_CreateTableOutput(input):
    return CreateTableOutput(
        table_description=DafnyToSmithy_com_amazonaws_dynamodb_TableDescription(input.TableDescription.UnwrapOr(None)),
    )

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeContinuousBackupsOutput(input):
    return DescribeContinuousBackupsOutput(
        continuous_backups_description=DafnyToSmithy_com_amazonaws_dynamodb_ContinuousBackupsDescription(input.ContinuousBackupsDescription.UnwrapOr(None)),
    )
