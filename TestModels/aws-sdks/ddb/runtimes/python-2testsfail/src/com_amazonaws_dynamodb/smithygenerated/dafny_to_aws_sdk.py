# Code generated by smithy-python-codegen DO NOT EDIT.

from software_amazon_cryptography_services_dynamodb_internaldafny_types import (
    AttributeValue_B,
    AttributeValue_BOOL,
    AttributeValue_BS,
    AttributeValue_L,
    AttributeValue_M,
    AttributeValue_N,
    AttributeValue_NS,
    AttributeValue_NULL,
    AttributeValue_S,
    AttributeValue_SS,
)

def DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(input):
    # Convert AttributeValue
    if isinstance(input, AttributeValue_S):
        AttributeValue_union_value = {"S": input.S.VerbatimString(False)}
    elif isinstance(input, AttributeValue_N):
        AttributeValue_union_value = {"N": input.N}
    elif isinstance(input, AttributeValue_B):
        AttributeValue_union_value = {"B": input.B}
    elif isinstance(input, AttributeValue_SS):
        AttributeValue_union_value = {"SS": input.SS}
    elif isinstance(input, AttributeValue_NS):
        AttributeValue_union_value = {"NS": input.NS}
    elif isinstance(input, AttributeValue_BS):
        AttributeValue_union_value = {"BS": input.BS}
    elif isinstance(input, AttributeValue_M):
        AttributeValue_union_value = {"M": input.M}
    elif isinstance(input, AttributeValue_L):
        AttributeValue_union_value = {"L": input.L}
    elif isinstance(input, AttributeValue_NULL):
        AttributeValue_union_value = {"NULL": input.NULL}
    elif isinstance(input, AttributeValue_BOOL):
        AttributeValue_union_value = {"BOOL": input.BOOL}
    else:
        raise ValueError("No recognized union value in union type: " + input)

    return AttributeValue_union_value

def DafnyToSmithy_com_amazonaws_dynamodb_BatchExecuteStatementInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_BatchStatementRequest(input):
        output = {}
        output["Statement"] = input.Statement.VerbatimString(False)
        if input.Parameters.is_Some:

            output["Parameters"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.Parameters.value]

        if input.ConsistentRead.is_Some:
            output["ConsistentRead"] = input.ConsistentRead.value

        return output

    output["Statements"] = [DafnyToSmithy_com_amazonaws_dynamodb_BatchStatementRequest(list_element) for list_element in input.Statements]
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_BatchGetItemInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_KeysAndAttributes(input):
        output = {}
        output["Keys"] = [{key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items } for list_element in input.Keys]
        if input.AttributesToGet.is_Some:
            output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

        if input.ConsistentRead.is_Some:
            output["ConsistentRead"] = input.ConsistentRead.value

        if input.ProjectionExpression.is_Some:
            output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

        if input.ExpressionAttributeNames.is_Some:
            output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

        return output

    output["RequestItems"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_KeysAndAttributes(value) for (key, value) in input.RequestItems.items }
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_BatchWriteItemInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_WriteRequest(input):
        output = {}
        if input.PutRequest.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_PutRequest(input):
                output = {}
                output["Item"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items }
                return output

            output["PutRequest"] = DafnyToSmithy_com_amazonaws_dynamodb_PutRequest(input.PutRequest.value)

        if input.DeleteRequest.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_DeleteRequest(input):
                output = {}
                output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
                return output

            output["DeleteRequest"] = DafnyToSmithy_com_amazonaws_dynamodb_DeleteRequest(input.DeleteRequest.value)

        return output

    output["RequestItems"] = {key.VerbatimString(False): [DafnyToSmithy_com_amazonaws_dynamodb_WriteRequest(list_element) for list_element in value] for (key, value) in input.RequestItems.items }
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_CreateBackupInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["BackupName"] = input.BackupName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_CreateGlobalTableInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_Replica(input):
        output = {}
        if input.RegionName.is_Some:
            output["RegionName"] = input.RegionName.value.VerbatimString(False)

        return output

    output["ReplicationGroup"] = [DafnyToSmithy_com_amazonaws_dynamodb_Replica(list_element) for list_element in input.ReplicationGroup]
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_CreateTableInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(input):
        output = {}
        output["AttributeName"] = input.AttributeName.VerbatimString(False)
        output["AttributeType"] = input.AttributeType.VerbatimString(False)
        return output

    output["AttributeDefinitions"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions]
    output["TableName"] = input.TableName.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(input):
        output = {}
        output["AttributeName"] = input.AttributeName.VerbatimString(False)
        output["KeyType"] = input.KeyType.VerbatimString(False)
        return output

    output["KeySchema"] = [DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
    if input.LocalSecondaryIndexes.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndex(input):
            output = {}
            output["IndexName"] = input.IndexName.VerbatimString(False)
            output["KeySchema"] = [DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]

            def DafnyToSmithy_com_amazonaws_dynamodb_Projection(input):
                output = {}
                if input.ProjectionType.is_Some:
                    output["ProjectionType"] = input.ProjectionType.value.VerbatimString(False)

                if input.NonKeyAttributes.is_Some:
                    output["NonKeyAttributes"] = [list_element.VerbatimString(False) for list_element in input.NonKeyAttributes.value]

                return output

            output["Projection"] = DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection)
            return output

        output["LocalSecondaryIndexes"] = [DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.LocalSecondaryIndexes.value]

    if input.GlobalSecondaryIndexes.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(input):
            output = {}
            output["IndexName"] = input.IndexName.VerbatimString(False)
            output["KeySchema"] = [DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
            output["Projection"] = DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection)
            if input.ProvisionedThroughput.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input):
                    output = {}
                    output["ReadCapacityUnits"] = input.ReadCapacityUnits
                    output["WriteCapacityUnits"] = input.WriteCapacityUnits
                    return output

                output["ProvisionedThroughput"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

            return output

        output["GlobalSecondaryIndexes"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value.VerbatimString(False)

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    if input.StreamSpecification.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_StreamSpecification(input):
            output = {}
            output["StreamEnabled"] = input.StreamEnabled
            if input.StreamViewType.is_Some:
                output["StreamViewType"] = input.StreamViewType.value.VerbatimString(False)

            return output

        output["StreamSpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_StreamSpecification(input.StreamSpecification.value)

    if input.SSESpecification.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input):
            output = {}
            if input.Enabled.is_Some:
                output["Enabled"] = input.Enabled.value

            if input.SSEType.is_Some:
                output["SSEType"] = input.SSEType.value.VerbatimString(False)

            if input.KMSMasterKeyId.is_Some:
                output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

            return output

        output["SSESpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.value)

    if input.Tags.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_Tag(input):
            output = {}
            output["Key"] = input.Key.VerbatimString(False)
            output["Value"] = input.Value.VerbatimString(False)
            return output

        output["Tags"] = [DafnyToSmithy_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.Tags.value]

    if input.TableClass.is_Some:
        output["TableClass"] = input.TableClass.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteBackupInput(input):
    output = {}
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    if input.Expected.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_ExpectedAttributeValue(input):
            output = {}
            if input.Value.is_Some:
                output["Value"] = DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(input.Value.value)

            if input.Exists.is_Some:
                output["Exists"] = input.Exists.value

            if input.ComparisonOperator.is_Some:
                output["ComparisonOperator"] = input.ComparisonOperator.value.VerbatimString(False)

            if input.AttributeValueList.is_Some:
                output["AttributeValueList"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.AttributeValueList.value]

            return output

        output["Expected"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.Expected.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value.VerbatimString(False)

    if input.ReturnValues.is_Some:
        output["ReturnValues"] = input.ReturnValues.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value.VerbatimString(False)

    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DeleteTableInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeBackupInput(input):
    output = {}
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeContinuousBackupsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeContributorInsightsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeEndpointsRequest(input):
    output = {}
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeExportInput(input):
    output = {}
    output["ExportArn"] = input.ExportArn.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeGlobalTableInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeGlobalTableSettingsInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeImportInput(input):
    output = {}
    output["ImportArn"] = input.ImportArn.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeLimitsInput(input):
    output = {}
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeTableInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DescribeTimeToLiveInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["StreamArn"] = input.StreamArn.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["StreamArn"] = input.StreamArn.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ExecuteStatementInput(input):
    output = {}
    output["Statement"] = input.Statement.VerbatimString(False)
    if input.Parameters.is_Some:
        output["Parameters"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.Parameters.value]

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ExecuteTransactionInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_ParameterizedStatement(input):
        output = {}
        output["Statement"] = input.Statement.VerbatimString(False)
        if input.Parameters.is_Some:
            output["Parameters"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.Parameters.value]

        return output

    output["TransactStatements"] = [DafnyToSmithy_com_amazonaws_dynamodb_ParameterizedStatement(list_element) for list_element in input.TransactStatements]
    if input.ClientRequestToken.is_Some:
        output["ClientRequestToken"] = input.ClientRequestToken.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ExportTableToPointInTimeInput(input):
    output = {}
    output["TableArn"] = input.TableArn.VerbatimString(False)
    if input.ExportTime.is_Some:
        output["ExportTime"] = input.ExportTime.value

    if input.ClientToken.is_Some:
        output["ClientToken"] = input.ClientToken.value.VerbatimString(False)

    output["S3Bucket"] = input.S3Bucket.VerbatimString(False)
    if input.S3BucketOwner.is_Some:
        output["S3BucketOwner"] = input.S3BucketOwner.value.VerbatimString(False)

    if input.S3Prefix.is_Some:
        output["S3Prefix"] = input.S3Prefix.value.VerbatimString(False)

    if input.S3SseAlgorithm.is_Some:
        output["S3SseAlgorithm"] = input.S3SseAlgorithm.value.VerbatimString(False)

    if input.S3SseKmsKeyId.is_Some:
        output["S3SseKmsKeyId"] = input.S3SseKmsKeyId.value.VerbatimString(False)

    if input.ExportFormat.is_Some:
        output["ExportFormat"] = input.ExportFormat.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_GetItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ImportTableInput(input):
    output = {}
    if input.ClientToken.is_Some:
        output["ClientToken"] = input.ClientToken.value.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_S3BucketSource(input):
        output = {}
        if input.S3BucketOwner.is_Some:
            output["S3BucketOwner"] = input.S3BucketOwner.value.VerbatimString(False)

        output["S3Bucket"] = input.S3Bucket.VerbatimString(False)
        if input.S3KeyPrefix.is_Some:
            output["S3KeyPrefix"] = input.S3KeyPrefix.value.VerbatimString(False)

        return output

    output["S3BucketSource"] = DafnyToSmithy_com_amazonaws_dynamodb_S3BucketSource(input.S3BucketSource)
    output["InputFormat"] = input.InputFormat.VerbatimString(False)
    if input.InputFormatOptions.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_InputFormatOptions(input):
            output = {}
            if input.Csv.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_CsvOptions(input):
                    output = {}
                    if input.Delimiter.is_Some:
                        output["Delimiter"] = input.Delimiter.value.VerbatimString(False)

                    if input.HeaderList.is_Some:
                        output["HeaderList"] = [list_element.VerbatimString(False) for list_element in input.HeaderList.value]

                    return output

                output["Csv"] = DafnyToSmithy_com_amazonaws_dynamodb_CsvOptions(input.Csv.value)

            return output

        output["InputFormatOptions"] = DafnyToSmithy_com_amazonaws_dynamodb_InputFormatOptions(input.InputFormatOptions.value)

    if input.InputCompressionType.is_Some:
        output["InputCompressionType"] = input.InputCompressionType.value.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_TableCreationParameters(input):
        output = {}
        output["TableName"] = input.TableName.VerbatimString(False)
        output["AttributeDefinitions"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions]
        output["KeySchema"] = [DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
        if input.BillingMode.is_Some:
            output["BillingMode"] = input.BillingMode.value.VerbatimString(False)

        if input.ProvisionedThroughput.is_Some:
            output["ProvisionedThroughput"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

        if input.SSESpecification.is_Some:
            output["SSESpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.value)

        if input.GlobalSecondaryIndexes.is_Some:
            output["GlobalSecondaryIndexes"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

        return output

    output["TableCreationParameters"] = DafnyToSmithy_com_amazonaws_dynamodb_TableCreationParameters(input.TableCreationParameters)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListBackupsInput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.TimeRangeLowerBound.is_Some:
        output["TimeRangeLowerBound"] = input.TimeRangeLowerBound.value

    if input.TimeRangeUpperBound.is_Some:
        output["TimeRangeUpperBound"] = input.TimeRangeUpperBound.value

    if input.ExclusiveStartBackupArn.is_Some:
        output["ExclusiveStartBackupArn"] = input.ExclusiveStartBackupArn.value.VerbatimString(False)

    if input.BackupType.is_Some:
        output["BackupType"] = input.BackupType.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListContributorInsightsInput(input):
    output = {}
    if input.TableName.is_Some:
        output["TableName"] = input.TableName.value.VerbatimString(False)

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    if input.MaxResults.is_Some:
        output["MaxResults"] = input.MaxResults.value

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListExportsInput(input):
    output = {}
    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.MaxResults.is_Some:
        output["MaxResults"] = input.MaxResults.value

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListGlobalTablesInput(input):
    output = {}
    if input.ExclusiveStartGlobalTableName.is_Some:
        output["ExclusiveStartGlobalTableName"] = input.ExclusiveStartGlobalTableName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.RegionName.is_Some:
        output["RegionName"] = input.RegionName.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListImportsInput(input):
    output = {}
    if input.TableArn.is_Some:
        output["TableArn"] = input.TableArn.value.VerbatimString(False)

    if input.PageSize.is_Some:
        output["PageSize"] = input.PageSize.value

    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListTablesInput(input):
    output = {}
    if input.ExclusiveStartTableName.is_Some:
        output["ExclusiveStartTableName"] = input.ExclusiveStartTableName.value.VerbatimString(False)

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ListTagsOfResourceInput(input):
    output = {}
    output["ResourceArn"] = input.ResourceArn.VerbatimString(False)
    if input.NextToken.is_Some:
        output["NextToken"] = input.NextToken.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_PutItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Item"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items }
    if input.Expected.is_Some:
        output["Expected"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.Expected.value.items }

    if input.ReturnValues.is_Some:
        output["ReturnValues"] = input.ReturnValues.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value.VerbatimString(False)

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value.VerbatimString(False)

    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_QueryInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.Select.is_Some:
        output["Select"] = input.Select.value.VerbatimString(False)

    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    if input.KeyConditions.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_Condition(input):
            output = {}
            if input.AttributeValueList.is_Some:
                output["AttributeValueList"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.AttributeValueList.value]

            output["ComparisonOperator"] = input.ComparisonOperator.VerbatimString(False)
            return output

        output["KeyConditions"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.KeyConditions.value.items }

    if input.QueryFilter.is_Some:
        output["QueryFilter"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.QueryFilter.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value.VerbatimString(False)

    if input.ScanIndexForward.is_Some:
        output["ScanIndexForward"] = input.ScanIndexForward.value

    if input.ExclusiveStartKey.is_Some:
        output["ExclusiveStartKey"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExclusiveStartKey.value.items }

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.FilterExpression.is_Some:
        output["FilterExpression"] = input.FilterExpression.value.VerbatimString(False)

    if input.KeyConditionExpression.is_Some:
        output["KeyConditionExpression"] = input.KeyConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_RestoreTableFromBackupInput(input):
    output = {}
    output["TargetTableName"] = input.TargetTableName.VerbatimString(False)
    output["BackupArn"] = input.BackupArn.VerbatimString(False)
    if input.BillingModeOverride.is_Some:
        output["BillingModeOverride"] = input.BillingModeOverride.value.VerbatimString(False)

    if input.GlobalSecondaryIndexOverride.is_Some:
        output["GlobalSecondaryIndexOverride"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexOverride.value]

    if input.LocalSecondaryIndexOverride.is_Some:
        output["LocalSecondaryIndexOverride"] = [DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.LocalSecondaryIndexOverride.value]

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughputOverride.value)

    if input.SSESpecificationOverride.is_Some:
        output["SSESpecificationOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input.SSESpecificationOverride.value)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_RestoreTableToPointInTimeInput(input):
    output = {}
    if input.SourceTableArn.is_Some:
        output["SourceTableArn"] = input.SourceTableArn.value.VerbatimString(False)

    if input.SourceTableName.is_Some:
        output["SourceTableName"] = input.SourceTableName.value.VerbatimString(False)

    output["TargetTableName"] = input.TargetTableName.VerbatimString(False)
    if input.UseLatestRestorableTime.is_Some:
        output["UseLatestRestorableTime"] = input.UseLatestRestorableTime.value

    if input.RestoreDateTime.is_Some:
        output["RestoreDateTime"] = input.RestoreDateTime.value

    if input.BillingModeOverride.is_Some:
        output["BillingModeOverride"] = input.BillingModeOverride.value.VerbatimString(False)

    if input.GlobalSecondaryIndexOverride.is_Some:
        output["GlobalSecondaryIndexOverride"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexOverride.value]

    if input.LocalSecondaryIndexOverride.is_Some:
        output["LocalSecondaryIndexOverride"] = [DafnyToSmithy_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.LocalSecondaryIndexOverride.value]

    if input.ProvisionedThroughputOverride.is_Some:
        output["ProvisionedThroughputOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughputOverride.value)

    if input.SSESpecificationOverride.is_Some:
        output["SSESpecificationOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input.SSESpecificationOverride.value)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_ScanInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    if input.AttributesToGet.is_Some:
        output["AttributesToGet"] = [list_element.VerbatimString(False) for list_element in input.AttributesToGet.value]

    if input.Limit.is_Some:
        output["Limit"] = input.Limit.value

    if input.Select.is_Some:
        output["Select"] = input.Select.value.VerbatimString(False)

    if input.ScanFilter.is_Some:
        output["ScanFilter"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.ScanFilter.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value.VerbatimString(False)

    if input.ExclusiveStartKey.is_Some:
        output["ExclusiveStartKey"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExclusiveStartKey.value.items }

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.TotalSegments.is_Some:
        output["TotalSegments"] = input.TotalSegments.value

    if input.Segment.is_Some:
        output["Segment"] = input.Segment.value

    if input.ProjectionExpression.is_Some:
        output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

    if input.FilterExpression.is_Some:
        output["FilterExpression"] = input.FilterExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    if input.ConsistentRead.is_Some:
        output["ConsistentRead"] = input.ConsistentRead.value

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_TagResourceInput(input):
    output = {}
    output["ResourceArn"] = input.ResourceArn.VerbatimString(False)
    output["Tags"] = [DafnyToSmithy_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.Tags]
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_TransactGetItemsInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_TransactGetItem(input):
        output = {}

        def DafnyToSmithy_com_amazonaws_dynamodb_Get(input):
            output = {}
            output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
            output["TableName"] = input.TableName.VerbatimString(False)
            if input.ProjectionExpression.is_Some:
                output["ProjectionExpression"] = input.ProjectionExpression.value.VerbatimString(False)

            if input.ExpressionAttributeNames.is_Some:
                output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

            return output

        output["Get"] = DafnyToSmithy_com_amazonaws_dynamodb_Get(input.Get)
        return output

    output["TransactItems"] = [DafnyToSmithy_com_amazonaws_dynamodb_TransactGetItem(list_element) for list_element in input.TransactItems]
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_TransactWriteItemsInput(input):
    output = {}

    def DafnyToSmithy_com_amazonaws_dynamodb_TransactWriteItem(input):
        output = {}
        if input.ConditionCheck.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_ConditionCheck(input):
                output = {}
                output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
                output["TableName"] = input.TableName.VerbatimString(False)
                output["ConditionExpression"] = input.ConditionExpression.VerbatimString(False)
                if input.ExpressionAttributeNames.is_Some:
                    output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

                if input.ExpressionAttributeValues.is_Some:
                    output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

                if input.ReturnValuesOnConditionCheckFailure.is_Some:
                    output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value.VerbatimString(False)

                return output

            output["ConditionCheck"] = DafnyToSmithy_com_amazonaws_dynamodb_ConditionCheck(input.ConditionCheck.value)

        if input.Put.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_Put(input):
                output = {}
                output["Item"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Item.items }
                output["TableName"] = input.TableName.VerbatimString(False)
                if input.ConditionExpression.is_Some:
                    output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

                if input.ExpressionAttributeNames.is_Some:
                    output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

                if input.ExpressionAttributeValues.is_Some:
                    output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

                if input.ReturnValuesOnConditionCheckFailure.is_Some:
                    output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value.VerbatimString(False)

                return output

            output["Put"] = DafnyToSmithy_com_amazonaws_dynamodb_Put(input.Put.value)

        if input.Delete.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_Delete(input):
                output = {}
                output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
                output["TableName"] = input.TableName.VerbatimString(False)
                if input.ConditionExpression.is_Some:
                    output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

                if input.ExpressionAttributeNames.is_Some:
                    output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

                if input.ExpressionAttributeValues.is_Some:
                    output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

                if input.ReturnValuesOnConditionCheckFailure.is_Some:
                    output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value.VerbatimString(False)

                return output

            output["Delete"] = DafnyToSmithy_com_amazonaws_dynamodb_Delete(input.Delete.value)

        if input.Update.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_Update(input):
                output = {}
                output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
                output["UpdateExpression"] = input.UpdateExpression.VerbatimString(False)
                output["TableName"] = input.TableName.VerbatimString(False)
                if input.ConditionExpression.is_Some:
                    output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

                if input.ExpressionAttributeNames.is_Some:
                    output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

                if input.ExpressionAttributeValues.is_Some:
                    output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

                if input.ReturnValuesOnConditionCheckFailure.is_Some:
                    output["ReturnValuesOnConditionCheckFailure"] = input.ReturnValuesOnConditionCheckFailure.value.VerbatimString(False)

                return output

            output["Update"] = DafnyToSmithy_com_amazonaws_dynamodb_Update(input.Update.value)

        return output

    output["TransactItems"] = [DafnyToSmithy_com_amazonaws_dynamodb_TransactWriteItem(list_element) for list_element in input.TransactItems]
    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value.VerbatimString(False)

    if input.ClientRequestToken.is_Some:
        output["ClientRequestToken"] = input.ClientRequestToken.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UntagResourceInput(input):
    output = {}
    output["ResourceArn"] = input.ResourceArn.VerbatimString(False)
    output["TagKeys"] = [list_element.VerbatimString(False) for list_element in input.TagKeys]
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateContinuousBackupsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_PointInTimeRecoverySpecification(input):
        output = {}
        output["PointInTimeRecoveryEnabled"] = input.PointInTimeRecoveryEnabled
        return output

    output["PointInTimeRecoverySpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_PointInTimeRecoverySpecification(input.PointInTimeRecoverySpecification)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateContributorInsightsInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    if input.IndexName.is_Some:
        output["IndexName"] = input.IndexName.value.VerbatimString(False)

    output["ContributorInsightsAction"] = input.ContributorInsightsAction.VerbatimString(False)
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalTableInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaUpdate(input):
        output = {}
        if input.Create.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_CreateReplicaAction(input):
                output = {}
                output["RegionName"] = input.RegionName.VerbatimString(False)
                return output

            output["Create"] = DafnyToSmithy_com_amazonaws_dynamodb_CreateReplicaAction(input.Create.value)

        if input.Delete.is_Some:

            def DafnyToSmithy_com_amazonaws_dynamodb_DeleteReplicaAction(input):
                output = {}
                output["RegionName"] = input.RegionName.VerbatimString(False)
                return output

            output["Delete"] = DafnyToSmithy_com_amazonaws_dynamodb_DeleteReplicaAction(input.Delete.value)

        return output

    output["ReplicaUpdates"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaUpdate(list_element) for list_element in input.ReplicaUpdates]
    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalTableSettingsInput(input):
    output = {}
    output["GlobalTableName"] = input.GlobalTableName.VerbatimString(False)
    if input.GlobalTableBillingMode.is_Some:
        output["GlobalTableBillingMode"] = input.GlobalTableBillingMode.value.VerbatimString(False)

    if input.GlobalTableProvisionedWriteCapacityUnits.is_Some:
        output["GlobalTableProvisionedWriteCapacityUnits"] = input.GlobalTableProvisionedWriteCapacityUnits.value

    if input.GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input):
            output = {}
            if input.MinimumUnits.is_Some:
                output["MinimumUnits"] = input.MinimumUnits.value

            if input.MaximumUnits.is_Some:
                output["MaximumUnits"] = input.MaximumUnits.value

            if input.AutoScalingDisabled.is_Some:
                output["AutoScalingDisabled"] = input.AutoScalingDisabled.value

            if input.AutoScalingRoleArn.is_Some:
                output["AutoScalingRoleArn"] = input.AutoScalingRoleArn.value.VerbatimString(False)

            if input.ScalingPolicyUpdate.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingPolicyUpdate(input):
                    output = {}
                    if input.PolicyName.is_Some:
                        output["PolicyName"] = input.PolicyName.value.VerbatimString(False)

                    def DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input):
                        output = {}
                        if input.DisableScaleIn.is_Some:
                            output["DisableScaleIn"] = input.DisableScaleIn.value

                        if input.ScaleInCooldown.is_Some:
                            output["ScaleInCooldown"] = input.ScaleInCooldown.value

                        if input.ScaleOutCooldown.is_Some:
                            output["ScaleOutCooldown"] = input.ScaleOutCooldown.value

                        output["TargetValue"] = input.TargetValue
                        return output

                    output["TargetTrackingScalingPolicyConfiguration"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input.TargetTrackingScalingPolicyConfiguration)
                    return output

                output["ScalingPolicyUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingPolicyUpdate(input.ScalingPolicyUpdate.value)

            return output

        output["GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate.value)

    if input.GlobalTableGlobalSecondaryIndexSettingsUpdate.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_GlobalTableGlobalSecondaryIndexSettingsUpdate(input):
            output = {}
            output["IndexName"] = input.IndexName.VerbatimString(False)
            if input.ProvisionedWriteCapacityUnits.is_Some:
                output["ProvisionedWriteCapacityUnits"] = input.ProvisionedWriteCapacityUnits.value

            if input.ProvisionedWriteCapacityAutoScalingSettingsUpdate.is_Some:
                output["ProvisionedWriteCapacityAutoScalingSettingsUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingSettingsUpdate.value)

            return output

        output["GlobalTableGlobalSecondaryIndexSettingsUpdate"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalTableGlobalSecondaryIndexSettingsUpdate(list_element) for list_element in input.GlobalTableGlobalSecondaryIndexSettingsUpdate.value]

    if input.ReplicaSettingsUpdate.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaSettingsUpdate(input):
            output = {}
            output["RegionName"] = input.RegionName.VerbatimString(False)
            if input.ReplicaProvisionedReadCapacityUnits.is_Some:
                output["ReplicaProvisionedReadCapacityUnits"] = input.ReplicaProvisionedReadCapacityUnits.value

            if input.ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate.is_Some:
                output["ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate.value)

            if input.ReplicaGlobalSecondaryIndexSettingsUpdate.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsUpdate(input):
                    output = {}
                    output["IndexName"] = input.IndexName.VerbatimString(False)
                    if input.ProvisionedReadCapacityUnits.is_Some:
                        output["ProvisionedReadCapacityUnits"] = input.ProvisionedReadCapacityUnits.value

                    if input.ProvisionedReadCapacityAutoScalingSettingsUpdate.is_Some:
                        output["ProvisionedReadCapacityAutoScalingSettingsUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedReadCapacityAutoScalingSettingsUpdate.value)

                    return output

                output["ReplicaGlobalSecondaryIndexSettingsUpdate"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsUpdate(list_element) for list_element in input.ReplicaGlobalSecondaryIndexSettingsUpdate.value]

            if input.ReplicaTableClass.is_Some:
                output["ReplicaTableClass"] = input.ReplicaTableClass.value.VerbatimString(False)

            return output

        output["ReplicaSettingsUpdate"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaSettingsUpdate(list_element) for list_element in input.ReplicaSettingsUpdate.value]

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateItemInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)
    output["Key"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.Key.items }
    if input.AttributeUpdates.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_AttributeValueUpdate(input):
            output = {}
            if input.Value.is_Some:
                output["Value"] = DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(input.Value.value)

            if input.Action.is_Some:
                output["Action"] = input.Action.value.VerbatimString(False)

            return output

        output["AttributeUpdates"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValueUpdate(value) for (key, value) in input.AttributeUpdates.value.items }

    if input.Expected.is_Some:
        output["Expected"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.Expected.value.items }

    if input.ConditionalOperator.is_Some:
        output["ConditionalOperator"] = input.ConditionalOperator.value.VerbatimString(False)

    if input.ReturnValues.is_Some:
        output["ReturnValues"] = input.ReturnValues.value.VerbatimString(False)

    if input.ReturnConsumedCapacity.is_Some:
        output["ReturnConsumedCapacity"] = input.ReturnConsumedCapacity.value.VerbatimString(False)

    if input.ReturnItemCollectionMetrics.is_Some:
        output["ReturnItemCollectionMetrics"] = input.ReturnItemCollectionMetrics.value.VerbatimString(False)

    if input.UpdateExpression.is_Some:
        output["UpdateExpression"] = input.UpdateExpression.value.VerbatimString(False)

    if input.ConditionExpression.is_Some:
        output["ConditionExpression"] = input.ConditionExpression.value.VerbatimString(False)

    if input.ExpressionAttributeNames.is_Some:
        output["ExpressionAttributeNames"] = {key.VerbatimString(False): value.VerbatimString(False) for (key, value) in input.ExpressionAttributeNames.value.items }

    if input.ExpressionAttributeValues.is_Some:
        output["ExpressionAttributeValues"] = {key.VerbatimString(False): DafnyToSmithy_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.ExpressionAttributeValues.value.items }

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateTableInput(input):
    output = {}
    if input.AttributeDefinitions.is_Some:
        output["AttributeDefinitions"] = [DafnyToSmithy_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.AttributeDefinitions.value]

    output["TableName"] = input.TableName.VerbatimString(False)
    if input.BillingMode.is_Some:
        output["BillingMode"] = input.BillingMode.value.VerbatimString(False)

    if input.ProvisionedThroughput.is_Some:
        output["ProvisionedThroughput"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

    if input.GlobalSecondaryIndexUpdates.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexUpdate(input):
            output = {}
            if input.Update.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalSecondaryIndexAction(input):
                    output = {}
                    output["IndexName"] = input.IndexName.VerbatimString(False)
                    output["ProvisionedThroughput"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput)
                    return output

                output["Update"] = DafnyToSmithy_com_amazonaws_dynamodb_UpdateGlobalSecondaryIndexAction(input.Update.value)

            if input.Create.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_CreateGlobalSecondaryIndexAction(input):
                    output = {}
                    output["IndexName"] = input.IndexName.VerbatimString(False)
                    output["KeySchema"] = [DafnyToSmithy_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.KeySchema]
                    output["Projection"] = DafnyToSmithy_com_amazonaws_dynamodb_Projection(input.Projection)
                    if input.ProvisionedThroughput.is_Some:
                        output["ProvisionedThroughput"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughput(input.ProvisionedThroughput.value)

                    return output

                output["Create"] = DafnyToSmithy_com_amazonaws_dynamodb_CreateGlobalSecondaryIndexAction(input.Create.value)

            if input.Delete.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_DeleteGlobalSecondaryIndexAction(input):
                    output = {}
                    output["IndexName"] = input.IndexName.VerbatimString(False)
                    return output

                output["Delete"] = DafnyToSmithy_com_amazonaws_dynamodb_DeleteGlobalSecondaryIndexAction(input.Delete.value)

            return output

        output["GlobalSecondaryIndexUpdates"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexUpdate(list_element) for list_element in input.GlobalSecondaryIndexUpdates.value]

    if input.StreamSpecification.is_Some:
        output["StreamSpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_StreamSpecification(input.StreamSpecification.value)

    if input.SSESpecification.is_Some:
        output["SSESpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_SSESpecification(input.SSESpecification.value)

    if input.ReplicaUpdates.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_ReplicationGroupUpdate(input):
            output = {}
            if input.Create.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_CreateReplicationGroupMemberAction(input):
                    output = {}
                    output["RegionName"] = input.RegionName.VerbatimString(False)
                    if input.KMSMasterKeyId.is_Some:
                        output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

                    if input.ProvisionedThroughputOverride.is_Some:

                        def DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input):
                            output = {}
                            if input.ReadCapacityUnits.is_Some:
                                output["ReadCapacityUnits"] = input.ReadCapacityUnits.value

                            return output

                        output["ProvisionedThroughputOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

                    if input.GlobalSecondaryIndexes.is_Some:

                        def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(input):
                            output = {}
                            output["IndexName"] = input.IndexName.VerbatimString(False)
                            if input.ProvisionedThroughputOverride.is_Some:
                                output["ProvisionedThroughputOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

                            return output

                        output["GlobalSecondaryIndexes"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

                    if input.TableClassOverride.is_Some:
                        output["TableClassOverride"] = input.TableClassOverride.value.VerbatimString(False)

                    return output

                output["Create"] = DafnyToSmithy_com_amazonaws_dynamodb_CreateReplicationGroupMemberAction(input.Create.value)

            if input.Update.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_UpdateReplicationGroupMemberAction(input):
                    output = {}
                    output["RegionName"] = input.RegionName.VerbatimString(False)
                    if input.KMSMasterKeyId.is_Some:
                        output["KMSMasterKeyId"] = input.KMSMasterKeyId.value.VerbatimString(False)

                    if input.ProvisionedThroughputOverride.is_Some:
                        output["ProvisionedThroughputOverride"] = DafnyToSmithy_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.ProvisionedThroughputOverride.value)

                    if input.GlobalSecondaryIndexes.is_Some:
                        output["GlobalSecondaryIndexes"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(list_element) for list_element in input.GlobalSecondaryIndexes.value]

                    if input.TableClassOverride.is_Some:
                        output["TableClassOverride"] = input.TableClassOverride.value.VerbatimString(False)

                    return output

                output["Update"] = DafnyToSmithy_com_amazonaws_dynamodb_UpdateReplicationGroupMemberAction(input.Update.value)

            if input.Delete.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_DeleteReplicationGroupMemberAction(input):
                    output = {}
                    output["RegionName"] = input.RegionName.VerbatimString(False)
                    return output

                output["Delete"] = DafnyToSmithy_com_amazonaws_dynamodb_DeleteReplicationGroupMemberAction(input.Delete.value)

            return output

        output["ReplicaUpdates"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicationGroupUpdate(list_element) for list_element in input.ReplicaUpdates.value]

    if input.TableClass.is_Some:
        output["TableClass"] = input.TableClass.value.VerbatimString(False)

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingInput(input):
    output = {}
    if input.GlobalSecondaryIndexUpdates.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexAutoScalingUpdate(input):
            output = {}
            if input.IndexName.is_Some:
                output["IndexName"] = input.IndexName.value.VerbatimString(False)

            if input.ProvisionedWriteCapacityAutoScalingUpdate.is_Some:
                output["ProvisionedWriteCapacityAutoScalingUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingUpdate.value)

            return output

        output["GlobalSecondaryIndexUpdates"] = [DafnyToSmithy_com_amazonaws_dynamodb_GlobalSecondaryIndexAutoScalingUpdate(list_element) for list_element in input.GlobalSecondaryIndexUpdates.value]

    output["TableName"] = input.TableName.VerbatimString(False)
    if input.ProvisionedWriteCapacityAutoScalingUpdate.is_Some:
        output["ProvisionedWriteCapacityAutoScalingUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingUpdate.value)

    if input.ReplicaUpdates.is_Some:

        def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaAutoScalingUpdate(input):
            output = {}
            output["RegionName"] = input.RegionName.VerbatimString(False)
            if input.ReplicaGlobalSecondaryIndexUpdates.is_Some:

                def DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingUpdate(input):
                    output = {}
                    if input.IndexName.is_Some:
                        output["IndexName"] = input.IndexName.value.VerbatimString(False)

                    if input.ProvisionedReadCapacityAutoScalingUpdate.is_Some:
                        output["ProvisionedReadCapacityAutoScalingUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ProvisionedReadCapacityAutoScalingUpdate.value)

                    return output

                output["ReplicaGlobalSecondaryIndexUpdates"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingUpdate(list_element) for list_element in input.ReplicaGlobalSecondaryIndexUpdates.value]

            if input.ReplicaProvisionedReadCapacityAutoScalingUpdate.is_Some:
                output["ReplicaProvisionedReadCapacityAutoScalingUpdate"] = DafnyToSmithy_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.ReplicaProvisionedReadCapacityAutoScalingUpdate.value)

            return output

        output["ReplicaUpdates"] = [DafnyToSmithy_com_amazonaws_dynamodb_ReplicaAutoScalingUpdate(list_element) for list_element in input.ReplicaUpdates.value]

    return output

def DafnyToSmithy_com_amazonaws_dynamodb_UpdateTimeToLiveInput(input):
    output = {}
    output["TableName"] = input.TableName.VerbatimString(False)

    def DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveSpecification(input):
        output = {}
        output["Enabled"] = input.Enabled
        output["AttributeName"] = input.AttributeName.VerbatimString(False)
        return output

    output["TimeToLiveSpecification"] = DafnyToSmithy_com_amazonaws_dynamodb_TimeToLiveSpecification(input.TimeToLiveSpecification)
    return output
