# Code generated by smithy-python-codegen DO NOT EDIT.

from Wrappers import Option_None, Option_Some
from _dafny import Map, Seq
from com_amazonaws_dynamodb_internaldafny_types import (
    AttributeDefinition_AttributeDefinition as DafnyAttributeDefinition,
    AttributeValueUpdate_AttributeValueUpdate as DafnyAttributeValueUpdate,
    AttributeValue_B,
    AttributeValue_BOOL,
    AttributeValue_BS,
    AttributeValue_L,
    AttributeValue_M,
    AttributeValue_N,
    AttributeValue_NS,
    AttributeValue_NULL,
    AttributeValue_S,
    AttributeValue_SS,
    AutoScalingPolicyUpdate_AutoScalingPolicyUpdate as DafnyAutoScalingPolicyUpdate,
    AutoScalingSettingsUpdate_AutoScalingSettingsUpdate as DafnyAutoScalingSettingsUpdate,
    AutoScalingTargetTrackingScalingPolicyConfigurationUpdate_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate as DafnyAutoScalingTargetTrackingScalingPolicyConfigurationUpdate,
    BatchExecuteStatementInput_BatchExecuteStatementInput as DafnyBatchExecuteStatementInput,
    BatchGetItemInput_BatchGetItemInput as DafnyBatchGetItemInput,
    BatchStatementRequest_BatchStatementRequest as DafnyBatchStatementRequest,
    BatchWriteItemInput_BatchWriteItemInput as DafnyBatchWriteItemInput,
    ConditionCheck_ConditionCheck as DafnyConditionCheck,
    Condition_Condition as DafnyCondition,
    CreateBackupInput_CreateBackupInput as DafnyCreateBackupInput,
    CreateGlobalSecondaryIndexAction_CreateGlobalSecondaryIndexAction as DafnyCreateGlobalSecondaryIndexAction,
    CreateGlobalTableInput_CreateGlobalTableInput as DafnyCreateGlobalTableInput,
    CreateReplicaAction_CreateReplicaAction as DafnyCreateReplicaAction,
    CreateReplicationGroupMemberAction_CreateReplicationGroupMemberAction as DafnyCreateReplicationGroupMemberAction,
    CreateTableInput_CreateTableInput as DafnyCreateTableInput,
    CsvOptions_CsvOptions as DafnyCsvOptions,
    DeleteBackupInput_DeleteBackupInput as DafnyDeleteBackupInput,
    DeleteGlobalSecondaryIndexAction_DeleteGlobalSecondaryIndexAction as DafnyDeleteGlobalSecondaryIndexAction,
    DeleteItemInput_DeleteItemInput as DafnyDeleteItemInput,
    DeleteReplicaAction_DeleteReplicaAction as DafnyDeleteReplicaAction,
    DeleteReplicationGroupMemberAction_DeleteReplicationGroupMemberAction as DafnyDeleteReplicationGroupMemberAction,
    DeleteRequest_DeleteRequest as DafnyDeleteRequest,
    DeleteTableInput_DeleteTableInput as DafnyDeleteTableInput,
    Delete_Delete as DafnyDelete,
    DescribeBackupInput_DescribeBackupInput as DafnyDescribeBackupInput,
    DescribeContinuousBackupsInput_DescribeContinuousBackupsInput as DafnyDescribeContinuousBackupsInput,
    DescribeContributorInsightsInput_DescribeContributorInsightsInput as DafnyDescribeContributorInsightsInput,
    DescribeEndpointsRequest_DescribeEndpointsRequest as DafnyDescribeEndpointsRequest,
    DescribeExportInput_DescribeExportInput as DafnyDescribeExportInput,
    DescribeGlobalTableInput_DescribeGlobalTableInput as DafnyDescribeGlobalTableInput,
    DescribeGlobalTableSettingsInput_DescribeGlobalTableSettingsInput as DafnyDescribeGlobalTableSettingsInput,
    DescribeImportInput_DescribeImportInput as DafnyDescribeImportInput,
    DescribeKinesisStreamingDestinationInput_DescribeKinesisStreamingDestinationInput as DafnyDescribeKinesisStreamingDestinationInput,
    DescribeLimitsInput_DescribeLimitsInput as DafnyDescribeLimitsInput,
    DescribeTableInput_DescribeTableInput as DafnyDescribeTableInput,
    DescribeTableReplicaAutoScalingInput_DescribeTableReplicaAutoScalingInput as DafnyDescribeTableReplicaAutoScalingInput,
    DescribeTimeToLiveInput_DescribeTimeToLiveInput as DafnyDescribeTimeToLiveInput,
    DisableKinesisStreamingDestinationInput_DisableKinesisStreamingDestinationInput as DafnyDisableKinesisStreamingDestinationInput,
    EnableKinesisStreamingDestinationInput_EnableKinesisStreamingDestinationInput as DafnyEnableKinesisStreamingDestinationInput,
    ExecuteStatementInput_ExecuteStatementInput as DafnyExecuteStatementInput,
    ExecuteTransactionInput_ExecuteTransactionInput as DafnyExecuteTransactionInput,
    ExpectedAttributeValue_ExpectedAttributeValue as DafnyExpectedAttributeValue,
    ExportTableToPointInTimeInput_ExportTableToPointInTimeInput as DafnyExportTableToPointInTimeInput,
    GetItemInput_GetItemInput as DafnyGetItemInput,
    Get_Get as DafnyGet,
    GlobalSecondaryIndexAutoScalingUpdate_GlobalSecondaryIndexAutoScalingUpdate as DafnyGlobalSecondaryIndexAutoScalingUpdate,
    GlobalSecondaryIndexUpdate_GlobalSecondaryIndexUpdate as DafnyGlobalSecondaryIndexUpdate,
    GlobalSecondaryIndex_GlobalSecondaryIndex as DafnyGlobalSecondaryIndex,
    GlobalTableGlobalSecondaryIndexSettingsUpdate_GlobalTableGlobalSecondaryIndexSettingsUpdate as DafnyGlobalTableGlobalSecondaryIndexSettingsUpdate,
    ImportTableInput_ImportTableInput as DafnyImportTableInput,
    InputFormatOptions_InputFormatOptions as DafnyInputFormatOptions,
    KeySchemaElement_KeySchemaElement as DafnyKeySchemaElement,
    KeysAndAttributes_KeysAndAttributes as DafnyKeysAndAttributes,
    ListBackupsInput_ListBackupsInput as DafnyListBackupsInput,
    ListContributorInsightsInput_ListContributorInsightsInput as DafnyListContributorInsightsInput,
    ListExportsInput_ListExportsInput as DafnyListExportsInput,
    ListGlobalTablesInput_ListGlobalTablesInput as DafnyListGlobalTablesInput,
    ListImportsInput_ListImportsInput as DafnyListImportsInput,
    ListTablesInput_ListTablesInput as DafnyListTablesInput,
    ListTagsOfResourceInput_ListTagsOfResourceInput as DafnyListTagsOfResourceInput,
    LocalSecondaryIndex_LocalSecondaryIndex as DafnyLocalSecondaryIndex,
    ParameterizedStatement_ParameterizedStatement as DafnyParameterizedStatement,
    PointInTimeRecoverySpecification_PointInTimeRecoverySpecification as DafnyPointInTimeRecoverySpecification,
    Projection_Projection as DafnyProjection,
    ProvisionedThroughputOverride_ProvisionedThroughputOverride as DafnyProvisionedThroughputOverride,
    ProvisionedThroughput_ProvisionedThroughput as DafnyProvisionedThroughput,
    PutItemInput_PutItemInput as DafnyPutItemInput,
    PutRequest_PutRequest as DafnyPutRequest,
    Put_Put as DafnyPut,
    QueryInput_QueryInput as DafnyQueryInput,
    ReplicaAutoScalingUpdate_ReplicaAutoScalingUpdate as DafnyReplicaAutoScalingUpdate,
    ReplicaGlobalSecondaryIndexAutoScalingUpdate_ReplicaGlobalSecondaryIndexAutoScalingUpdate as DafnyReplicaGlobalSecondaryIndexAutoScalingUpdate,
    ReplicaGlobalSecondaryIndexSettingsUpdate_ReplicaGlobalSecondaryIndexSettingsUpdate as DafnyReplicaGlobalSecondaryIndexSettingsUpdate,
    ReplicaGlobalSecondaryIndex_ReplicaGlobalSecondaryIndex as DafnyReplicaGlobalSecondaryIndex,
    ReplicaSettingsUpdate_ReplicaSettingsUpdate as DafnyReplicaSettingsUpdate,
    ReplicaUpdate_ReplicaUpdate as DafnyReplicaUpdate,
    Replica_Replica as DafnyReplica,
    ReplicationGroupUpdate_ReplicationGroupUpdate as DafnyReplicationGroupUpdate,
    RestoreTableFromBackupInput_RestoreTableFromBackupInput as DafnyRestoreTableFromBackupInput,
    RestoreTableToPointInTimeInput_RestoreTableToPointInTimeInput as DafnyRestoreTableToPointInTimeInput,
    S3BucketSource_S3BucketSource as DafnyS3BucketSource,
    SSESpecification_SSESpecification as DafnySSESpecification,
    ScanInput_ScanInput as DafnyScanInput,
    StreamSpecification_StreamSpecification as DafnyStreamSpecification,
    TableCreationParameters_TableCreationParameters as DafnyTableCreationParameters,
    TagResourceInput_TagResourceInput as DafnyTagResourceInput,
    Tag_Tag as DafnyTag,
    TimeToLiveSpecification_TimeToLiveSpecification as DafnyTimeToLiveSpecification,
    TransactGetItem_TransactGetItem as DafnyTransactGetItem,
    TransactGetItemsInput_TransactGetItemsInput as DafnyTransactGetItemsInput,
    TransactWriteItem_TransactWriteItem as DafnyTransactWriteItem,
    TransactWriteItemsInput_TransactWriteItemsInput as DafnyTransactWriteItemsInput,
    UntagResourceInput_UntagResourceInput as DafnyUntagResourceInput,
    UpdateContinuousBackupsInput_UpdateContinuousBackupsInput as DafnyUpdateContinuousBackupsInput,
    UpdateContributorInsightsInput_UpdateContributorInsightsInput as DafnyUpdateContributorInsightsInput,
    UpdateGlobalSecondaryIndexAction_UpdateGlobalSecondaryIndexAction as DafnyUpdateGlobalSecondaryIndexAction,
    UpdateGlobalTableInput_UpdateGlobalTableInput as DafnyUpdateGlobalTableInput,
    UpdateGlobalTableSettingsInput_UpdateGlobalTableSettingsInput as DafnyUpdateGlobalTableSettingsInput,
    UpdateItemInput_UpdateItemInput as DafnyUpdateItemInput,
    UpdateReplicationGroupMemberAction_UpdateReplicationGroupMemberAction as DafnyUpdateReplicationGroupMemberAction,
    UpdateTableInput_UpdateTableInput as DafnyUpdateTableInput,
    UpdateTableReplicaAutoScalingInput_UpdateTableReplicaAutoScalingInput as DafnyUpdateTableReplicaAutoScalingInput,
    UpdateTimeToLiveInput_UpdateTimeToLiveInput as DafnyUpdateTimeToLiveInput,
    Update_Update as DafnyUpdate,
    WriteRequest_WriteRequest as DafnyWriteRequest,
)
import module_

from .models import (
    AttributeValueB,
    AttributeValueBOOL,
    AttributeValueBS,
    AttributeValueL,
    AttributeValueM,
    AttributeValueN,
    AttributeValueNS,
    AttributeValueNULL,
    AttributeValueS,
    AttributeValueSS,
)


def SmithyToDafny_com_amazonaws_dynamodb_DeleteBackupInput(input):

  return DafnyDeleteBackupInput(BackupArn=input.backup_arn,
)

def SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(input):
    if isinstance(input, AttributeValueS):
        AttributeValue_union_value = AttributeValue_S(input.value)
    elif isinstance(input, AttributeValueN):
        AttributeValue_union_value = AttributeValue_N(input.value)
    elif isinstance(input, AttributeValueB):
        AttributeValue_union_value = AttributeValue_B(input.value)
    elif isinstance(input, AttributeValueSS):
        AttributeValue_union_value = AttributeValue_SS(input.value)
    elif isinstance(input, AttributeValueNS):
        AttributeValue_union_value = AttributeValue_NS(input.value)
    elif isinstance(input, AttributeValueBS):
        AttributeValue_union_value = AttributeValue_BS(input.value)
    elif isinstance(input, AttributeValueM):
        AttributeValue_union_value = AttributeValue_M(input.value)
    elif isinstance(input, AttributeValueL):
        AttributeValue_union_value = AttributeValue_L(input.value)
    elif isinstance(input, AttributeValueNULL):
        AttributeValue_union_value = AttributeValue_NULL(input.value)
    elif isinstance(input, AttributeValueBOOL):
        AttributeValue_union_value = AttributeValue_BOOL(input.value)
    else:
        raise ValueError("No recognized union value in union type: " + input)

    return AttributeValue_union_value

def SmithyToDafny_com_amazonaws_dynamodb_ExpectedAttributeValue(input):

  return DafnyExpectedAttributeValue(Value=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(input.value))) if (input.value is not None) else (Option_None())),
Exists=((Option_Some(input.exists)) if (input.exists is not None) else (Option_None())),
ComparisonOperator=((Option_Some(input.comparison_operator)) if (input.comparison_operator is not None) else (Option_None())),
AttributeValueList=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.attribute_value_list]))) if (input.attribute_value_list is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DeleteItemInput(input):

  return DafnyDeleteItemInput(TableName=input.table_name,
Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
Expected=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.expected.items() }))) if (input.expected is not None) else (Option_None())),
ConditionalOperator=((Option_Some(input.conditional_operator)) if (input.conditional_operator is not None) else (Option_None())),
ReturnValues=((Option_Some(input.return_values)) if (input.return_values is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ReturnItemCollectionMetrics=((Option_Some(input.return_item_collection_metrics)) if (input.return_item_collection_metrics is not None) else (Option_None())),
ConditionExpression=((Option_Some(input.condition_expression)) if (input.condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ParameterizedStatement(input):

  return DafnyParameterizedStatement(Statement=input.statement,
Parameters=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.parameters]))) if (input.parameters is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ExecuteTransactionInput(input):

  return DafnyExecuteTransactionInput(TransactStatements=Seq([SmithyToDafny_com_amazonaws_dynamodb_ParameterizedStatement(list_element) for list_element in input.transact_statements]),
ClientRequestToken=((Option_Some(input.client_request_token)) if (input.client_request_token is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_CreateReplicaAction(input):

  return DafnyCreateReplicaAction(RegionName=input.region_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_DeleteReplicaAction(input):

  return DafnyDeleteReplicaAction(RegionName=input.region_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicaUpdate(input):

  return DafnyReplicaUpdate(Create=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_CreateReplicaAction(input.create))) if (input.create is not None) else (Option_None())),
Delete=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_DeleteReplicaAction(input.delete))) if (input.delete is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalTableInput(input):

  return DafnyUpdateGlobalTableInput(GlobalTableName=input.global_table_name,
ReplicaUpdates=Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaUpdate(list_element) for list_element in input.replica_updates]),
)

def SmithyToDafny_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input):

  return DafnyAutoScalingTargetTrackingScalingPolicyConfigurationUpdate(DisableScaleIn=((Option_Some(input.disable_scale_in)) if (input.disable_scale_in is not None) else (Option_None())),
ScaleInCooldown=((Option_Some(input.scale_in_cooldown)) if (input.scale_in_cooldown is not None) else (Option_None())),
ScaleOutCooldown=((Option_Some(input.scale_out_cooldown)) if (input.scale_out_cooldown is not None) else (Option_None())),
TargetValue=input.target_value,
)

def SmithyToDafny_com_amazonaws_dynamodb_AutoScalingPolicyUpdate(input):

  return DafnyAutoScalingPolicyUpdate(PolicyName=((Option_Some(input.policy_name)) if (input.policy_name is not None) else (Option_None())),
TargetTrackingScalingPolicyConfiguration=SmithyToDafny_com_amazonaws_dynamodb_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input.target_tracking_scaling_policy_configuration),
)

def SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input):

  return DafnyAutoScalingSettingsUpdate(MinimumUnits=((Option_Some(input.minimum_units)) if (input.minimum_units is not None) else (Option_None())),
MaximumUnits=((Option_Some(input.maximum_units)) if (input.maximum_units is not None) else (Option_None())),
AutoScalingDisabled=((Option_Some(input.auto_scaling_disabled)) if (input.auto_scaling_disabled is not None) else (Option_None())),
AutoScalingRoleArn=((Option_Some(input.auto_scaling_role_arn)) if (input.auto_scaling_role_arn is not None) else (Option_None())),
ScalingPolicyUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingPolicyUpdate(input.scaling_policy_update))) if (input.scaling_policy_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndexAutoScalingUpdate(input):

  return DafnyGlobalSecondaryIndexAutoScalingUpdate(IndexName=((Option_Some(input.index_name)) if (input.index_name is not None) else (Option_None())),
ProvisionedWriteCapacityAutoScalingUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.provisioned_write_capacity_auto_scaling_update))) if (input.provisioned_write_capacity_auto_scaling_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingUpdate(input):

  return DafnyReplicaGlobalSecondaryIndexAutoScalingUpdate(IndexName=((Option_Some(input.index_name)) if (input.index_name is not None) else (Option_None())),
ProvisionedReadCapacityAutoScalingUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.provisioned_read_capacity_auto_scaling_update))) if (input.provisioned_read_capacity_auto_scaling_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicaAutoScalingUpdate(input):

  return DafnyReplicaAutoScalingUpdate(RegionName=input.region_name,
ReplicaGlobalSecondaryIndexUpdates=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexAutoScalingUpdate(list_element) for list_element in input.replica_global_secondary_index_updates]))) if (input.replica_global_secondary_index_updates is not None) else (Option_None())),
ReplicaProvisionedReadCapacityAutoScalingUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.replica_provisioned_read_capacity_auto_scaling_update))) if (input.replica_provisioned_read_capacity_auto_scaling_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateTableReplicaAutoScalingInput(input):

  return DafnyUpdateTableReplicaAutoScalingInput(GlobalSecondaryIndexUpdates=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndexAutoScalingUpdate(list_element) for list_element in input.global_secondary_index_updates]))) if (input.global_secondary_index_updates is not None) else (Option_None())),
TableName=input.table_name,
ProvisionedWriteCapacityAutoScalingUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.provisioned_write_capacity_auto_scaling_update))) if (input.provisioned_write_capacity_auto_scaling_update is not None) else (Option_None())),
ReplicaUpdates=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaAutoScalingUpdate(list_element) for list_element in input.replica_updates]))) if (input.replica_updates is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeBackupInput(input):

  return DafnyDescribeBackupInput(BackupArn=input.backup_arn,
)

def SmithyToDafny_com_amazonaws_dynamodb_Condition(input):

  return DafnyCondition(AttributeValueList=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.attribute_value_list]))) if (input.attribute_value_list is not None) else (Option_None())),
ComparisonOperator=input.comparison_operator,
)

def SmithyToDafny_com_amazonaws_dynamodb_ScanInput(input):

  return DafnyScanInput(TableName=input.table_name,
IndexName=((Option_Some(input.index_name)) if (input.index_name is not None) else (Option_None())),
AttributesToGet=((Option_Some(Seq([list_element for list_element in input.attributes_to_get]))) if (input.attributes_to_get is not None) else (Option_None())),
Limit=((Option_Some(input.limit)) if (input.limit is not None) else (Option_None())),
Select=((Option_Some(input.select)) if (input.select is not None) else (Option_None())),
ScanFilter=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.scan_filter.items() }))) if (input.scan_filter is not None) else (Option_None())),
ConditionalOperator=((Option_Some(input.conditional_operator)) if (input.conditional_operator is not None) else (Option_None())),
ExclusiveStartKey=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.exclusive_start_key.items() }))) if (input.exclusive_start_key is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
TotalSegments=((Option_Some(input.total_segments)) if (input.total_segments is not None) else (Option_None())),
Segment=((Option_Some(input.segment)) if (input.segment is not None) else (Option_None())),
ProjectionExpression=((Option_Some(input.projection_expression)) if (input.projection_expression is not None) else (Option_None())),
FilterExpression=((Option_Some(input.filter_expression)) if (input.filter_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
ConsistentRead=((Option_Some(input.consistent_read)) if (input.consistent_read is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_GlobalTableGlobalSecondaryIndexSettingsUpdate(input):

  return DafnyGlobalTableGlobalSecondaryIndexSettingsUpdate(IndexName=input.index_name,
ProvisionedWriteCapacityUnits=((Option_Some(input.provisioned_write_capacity_units)) if (input.provisioned_write_capacity_units is not None) else (Option_None())),
ProvisionedWriteCapacityAutoScalingSettingsUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.provisioned_write_capacity_auto_scaling_settings_update))) if (input.provisioned_write_capacity_auto_scaling_settings_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsUpdate(input):

  return DafnyReplicaGlobalSecondaryIndexSettingsUpdate(IndexName=input.index_name,
ProvisionedReadCapacityUnits=((Option_Some(input.provisioned_read_capacity_units)) if (input.provisioned_read_capacity_units is not None) else (Option_None())),
ProvisionedReadCapacityAutoScalingSettingsUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.provisioned_read_capacity_auto_scaling_settings_update))) if (input.provisioned_read_capacity_auto_scaling_settings_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicaSettingsUpdate(input):

  return DafnyReplicaSettingsUpdate(RegionName=input.region_name,
ReplicaProvisionedReadCapacityUnits=((Option_Some(input.replica_provisioned_read_capacity_units)) if (input.replica_provisioned_read_capacity_units is not None) else (Option_None())),
ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.replica_provisioned_read_capacity_auto_scaling_settings_update))) if (input.replica_provisioned_read_capacity_auto_scaling_settings_update is not None) else (Option_None())),
ReplicaGlobalSecondaryIndexSettingsUpdate=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndexSettingsUpdate(list_element) for list_element in input.replica_global_secondary_index_settings_update]))) if (input.replica_global_secondary_index_settings_update is not None) else (Option_None())),
ReplicaTableClass=((Option_Some(input.replica_table_class)) if (input.replica_table_class is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalTableSettingsInput(input):

  return DafnyUpdateGlobalTableSettingsInput(GlobalTableName=input.global_table_name,
GlobalTableBillingMode=((Option_Some(input.global_table_billing_mode)) if (input.global_table_billing_mode is not None) else (Option_None())),
GlobalTableProvisionedWriteCapacityUnits=((Option_Some(input.global_table_provisioned_write_capacity_units)) if (input.global_table_provisioned_write_capacity_units is not None) else (Option_None())),
GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AutoScalingSettingsUpdate(input.global_table_provisioned_write_capacity_auto_scaling_settings_update))) if (input.global_table_provisioned_write_capacity_auto_scaling_settings_update is not None) else (Option_None())),
GlobalTableGlobalSecondaryIndexSettingsUpdate=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalTableGlobalSecondaryIndexSettingsUpdate(list_element) for list_element in input.global_table_global_secondary_index_settings_update]))) if (input.global_table_global_secondary_index_settings_update is not None) else (Option_None())),
ReplicaSettingsUpdate=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaSettingsUpdate(list_element) for list_element in input.replica_settings_update]))) if (input.replica_settings_update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_KeysAndAttributes(input):

  return DafnyKeysAndAttributes(Keys=Seq([Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in list_element.items() }) for list_element in input.keys]),
AttributesToGet=((Option_Some(Seq([list_element for list_element in input.attributes_to_get]))) if (input.attributes_to_get is not None) else (Option_None())),
ConsistentRead=((Option_Some(input.consistent_read)) if (input.consistent_read is not None) else (Option_None())),
ProjectionExpression=((Option_Some(input.projection_expression)) if (input.projection_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_BatchGetItemInput(input):

  return DafnyBatchGetItemInput(RequestItems=Map({key: SmithyToDafny_com_amazonaws_dynamodb_KeysAndAttributes(value) for (key, value) in input.request_items.items() }),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeTableInput(input):

  return DafnyDescribeTableInput(TableName=input.table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_QueryInput(input):

  return DafnyQueryInput(TableName=input.table_name,
IndexName=((Option_Some(input.index_name)) if (input.index_name is not None) else (Option_None())),
Select=((Option_Some(input.select)) if (input.select is not None) else (Option_None())),
AttributesToGet=((Option_Some(Seq([list_element for list_element in input.attributes_to_get]))) if (input.attributes_to_get is not None) else (Option_None())),
Limit=((Option_Some(input.limit)) if (input.limit is not None) else (Option_None())),
ConsistentRead=((Option_Some(input.consistent_read)) if (input.consistent_read is not None) else (Option_None())),
KeyConditions=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.key_conditions.items() }))) if (input.key_conditions is not None) else (Option_None())),
QueryFilter=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_Condition(value) for (key, value) in input.query_filter.items() }))) if (input.query_filter is not None) else (Option_None())),
ConditionalOperator=((Option_Some(input.conditional_operator)) if (input.conditional_operator is not None) else (Option_None())),
ScanIndexForward=((Option_Some(input.scan_index_forward)) if (input.scan_index_forward is not None) else (Option_None())),
ExclusiveStartKey=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.exclusive_start_key.items() }))) if (input.exclusive_start_key is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ProjectionExpression=((Option_Some(input.projection_expression)) if (input.projection_expression is not None) else (Option_None())),
FilterExpression=((Option_Some(input.filter_expression)) if (input.filter_expression is not None) else (Option_None())),
KeyConditionExpression=((Option_Some(input.key_condition_expression)) if (input.key_condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeTableReplicaAutoScalingInput(input):

  return DafnyDescribeTableReplicaAutoScalingInput(TableName=input.table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_PutItemInput(input):

  return DafnyPutItemInput(TableName=input.table_name,
Item=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.item.items() }),
Expected=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.expected.items() }))) if (input.expected is not None) else (Option_None())),
ReturnValues=((Option_Some(input.return_values)) if (input.return_values is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ReturnItemCollectionMetrics=((Option_Some(input.return_item_collection_metrics)) if (input.return_item_collection_metrics is not None) else (Option_None())),
ConditionalOperator=((Option_Some(input.conditional_operator)) if (input.conditional_operator is not None) else (Option_None())),
ConditionExpression=((Option_Some(input.condition_expression)) if (input.condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DisableKinesisStreamingDestinationInput(input):

  return DafnyDisableKinesisStreamingDestinationInput(TableName=input.table_name,
StreamArn=input.stream_arn,
)

def SmithyToDafny_com_amazonaws_dynamodb_PutRequest(input):

  return DafnyPutRequest(Item=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.item.items() }),
)

def SmithyToDafny_com_amazonaws_dynamodb_DeleteRequest(input):

  return DafnyDeleteRequest(Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
)

def SmithyToDafny_com_amazonaws_dynamodb_WriteRequest(input):

  return DafnyWriteRequest(PutRequest=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_PutRequest(input.put_request))) if (input.put_request is not None) else (Option_None())),
DeleteRequest=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_DeleteRequest(input.delete_request))) if (input.delete_request is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_BatchWriteItemInput(input):

  return DafnyBatchWriteItemInput(RequestItems=Map({key: Seq([SmithyToDafny_com_amazonaws_dynamodb_WriteRequest(list_element) for list_element in value]) for (key, value) in input.request_items.items() }),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ReturnItemCollectionMetrics=((Option_Some(input.return_item_collection_metrics)) if (input.return_item_collection_metrics is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UntagResourceInput(input):

  return DafnyUntagResourceInput(ResourceArn=input.resource_arn,
TagKeys=Seq([list_element for list_element in input.tag_keys]),
)

def SmithyToDafny_com_amazonaws_dynamodb_Tag(input):

  return DafnyTag(Key=input.key,
Value=input.value,
)

def SmithyToDafny_com_amazonaws_dynamodb_TagResourceInput(input):

  return DafnyTagResourceInput(ResourceArn=input.resource_arn,
Tags=Seq([SmithyToDafny_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.tags]),
)

def SmithyToDafny_com_amazonaws_dynamodb_BatchStatementRequest(input):

  return DafnyBatchStatementRequest(Statement=input.statement,
Parameters=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.parameters]))) if (input.parameters is not None) else (Option_None())),
ConsistentRead=((Option_Some(input.consistent_read)) if (input.consistent_read is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_BatchExecuteStatementInput(input):

  return DafnyBatchExecuteStatementInput(Statements=Seq([SmithyToDafny_com_amazonaws_dynamodb_BatchStatementRequest(list_element) for list_element in input.statements]),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ListTagsOfResourceInput(input):

  return DafnyListTagsOfResourceInput(ResourceArn=input.resource_arn,
NextToken=((Option_Some(input.next_token)) if (input.next_token is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ListTablesInput(input):

  return DafnyListTablesInput(ExclusiveStartTableName=((Option_Some(input.exclusive_start_table_name)) if (input.exclusive_start_table_name is not None) else (Option_None())),
Limit=((Option_Some(input.limit)) if (input.limit is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeExportInput(input):

  return DafnyDescribeExportInput(ExportArn=input.export_arn,
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeTimeToLiveInput(input):

  return DafnyDescribeTimeToLiveInput(TableName=input.table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_Get(input):

  return DafnyGet(Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
TableName=input.table_name,
ProjectionExpression=((Option_Some(input.projection_expression)) if (input.projection_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_TransactGetItem(input):

  return DafnyTransactGetItem(Get=SmithyToDafny_com_amazonaws_dynamodb_Get(input.get),
)

def SmithyToDafny_com_amazonaws_dynamodb_TransactGetItemsInput(input):

  return DafnyTransactGetItemsInput(TransactItems=Seq([SmithyToDafny_com_amazonaws_dynamodb_TransactGetItem(list_element) for list_element in input.transact_items]),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ListContributorInsightsInput(input):

  return DafnyListContributorInsightsInput(TableName=((Option_Some(input.table_name)) if (input.table_name is not None) else (Option_None())),
NextToken=((Option_Some(input.next_token)) if (input.next_token is not None) else (Option_None())),
MaxResults=((Option_Some(input.max_results)) if (input.max_results is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeContributorInsightsInput(input):

  return DafnyDescribeContributorInsightsInput(TableName=input.table_name,
IndexName=((Option_Some(input.index_name)) if (input.index_name is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateContributorInsightsInput(input):

  return DafnyUpdateContributorInsightsInput(TableName=input.table_name,
IndexName=((Option_Some(input.index_name)) if (input.index_name is not None) else (Option_None())),
ContributorInsightsAction=input.contributor_insights_action,
)

def SmithyToDafny_com_amazonaws_dynamodb_ListGlobalTablesInput(input):

  return DafnyListGlobalTablesInput(ExclusiveStartGlobalTableName=((Option_Some(input.exclusive_start_global_table_name)) if (input.exclusive_start_global_table_name is not None) else (Option_None())),
Limit=((Option_Some(input.limit)) if (input.limit is not None) else (Option_None())),
RegionName=((Option_Some(input.region_name)) if (input.region_name is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ListExportsInput(input):

  return DafnyListExportsInput(TableArn=((Option_Some(input.table_arn)) if (input.table_arn is not None) else (Option_None())),
MaxResults=((Option_Some(input.max_results)) if (input.max_results is not None) else (Option_None())),
NextToken=((Option_Some(input.next_token)) if (input.next_token is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ListBackupsInput(input):

  return DafnyListBackupsInput(TableName=((Option_Some(input.table_name)) if (input.table_name is not None) else (Option_None())),
Limit=((Option_Some(input.limit)) if (input.limit is not None) else (Option_None())),
TimeRangeLowerBound=((Option_Some(input.time_range_lower_bound)) if (input.time_range_lower_bound is not None) else (Option_None())),
TimeRangeUpperBound=((Option_Some(input.time_range_upper_bound)) if (input.time_range_upper_bound is not None) else (Option_None())),
ExclusiveStartBackupArn=((Option_Some(input.exclusive_start_backup_arn)) if (input.exclusive_start_backup_arn is not None) else (Option_None())),
BackupType=((Option_Some(input.backup_type)) if (input.backup_type is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_EnableKinesisStreamingDestinationInput(input):

  return DafnyEnableKinesisStreamingDestinationInput(TableName=input.table_name,
StreamArn=input.stream_arn,
)

def SmithyToDafny_com_amazonaws_dynamodb_ExportTableToPointInTimeInput(input):

  return DafnyExportTableToPointInTimeInput(TableArn=input.table_arn,
ExportTime=((Option_Some(input.export_time)) if (input.export_time is not None) else (Option_None())),
ClientToken=((Option_Some(input.client_token)) if (input.client_token is not None) else (Option_None())),
S3Bucket=input.s3_bucket,
S3BucketOwner=((Option_Some(input.s3_bucket_owner)) if (input.s3_bucket_owner is not None) else (Option_None())),
S3Prefix=((Option_Some(input.s3_prefix)) if (input.s3_prefix is not None) else (Option_None())),
S3SseAlgorithm=((Option_Some(input.s3_sse_algorithm)) if (input.s3_sse_algorithm is not None) else (Option_None())),
S3SseKmsKeyId=((Option_Some(input.s3_sse_kms_key_id)) if (input.s3_sse_kms_key_id is not None) else (Option_None())),
ExportFormat=((Option_Some(input.export_format)) if (input.export_format is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeEndpointsRequest(input):

  return DafnyDescribeEndpointsRequest()

def SmithyToDafny_com_amazonaws_dynamodb_TimeToLiveSpecification(input):

  return DafnyTimeToLiveSpecification(Enabled=input.enabled,
AttributeName=input.attribute_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateTimeToLiveInput(input):

  return DafnyUpdateTimeToLiveInput(TableName=input.table_name,
TimeToLiveSpecification=SmithyToDafny_com_amazonaws_dynamodb_TimeToLiveSpecification(input.time_to_live_specification),
)

def SmithyToDafny_com_amazonaws_dynamodb_ListImportsInput(input):

  return DafnyListImportsInput(TableArn=((Option_Some(input.table_arn)) if (input.table_arn is not None) else (Option_None())),
PageSize=((Option_Some(input.page_size)) if (input.page_size is not None) else (Option_None())),
NextToken=((Option_Some(input.next_token)) if (input.next_token is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DeleteTableInput(input):

  return DafnyDeleteTableInput(TableName=input.table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement(input):

  return DafnyKeySchemaElement(AttributeName=input.attribute_name,
KeyType=input.key_type,
)

def SmithyToDafny_com_amazonaws_dynamodb_Projection(input):

  return DafnyProjection(ProjectionType=((Option_Some(input.projection_type)) if (input.projection_type is not None) else (Option_None())),
NonKeyAttributes=((Option_Some(Seq([list_element for list_element in input.non_key_attributes]))) if (input.non_key_attributes is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input):

  return DafnyProvisionedThroughput(ReadCapacityUnits=input.read_capacity_units,
WriteCapacityUnits=input.write_capacity_units,
)

def SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndex(input):

  return DafnyGlobalSecondaryIndex(IndexName=input.index_name,
KeySchema=Seq([SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.key_schema]),
Projection=SmithyToDafny_com_amazonaws_dynamodb_Projection(input.projection),
ProvisionedThroughput=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput))) if (input.provisioned_throughput is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_LocalSecondaryIndex(input):

  return DafnyLocalSecondaryIndex(IndexName=input.index_name,
KeySchema=Seq([SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.key_schema]),
Projection=SmithyToDafny_com_amazonaws_dynamodb_Projection(input.projection),
)

def SmithyToDafny_com_amazonaws_dynamodb_SSESpecification(input):

  return DafnySSESpecification(Enabled=((Option_Some(input.enabled)) if (input.enabled is not None) else (Option_None())),
SSEType=((Option_Some(input.sse_type)) if (input.sse_type is not None) else (Option_None())),
KMSMasterKeyId=((Option_Some(input.kms_master_key_id)) if (input.kms_master_key_id is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_RestoreTableFromBackupInput(input):

  return DafnyRestoreTableFromBackupInput(TargetTableName=input.target_table_name,
BackupArn=input.backup_arn,
BillingModeOverride=((Option_Some(input.billing_mode_override)) if (input.billing_mode_override is not None) else (Option_None())),
GlobalSecondaryIndexOverride=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.global_secondary_index_override]))) if (input.global_secondary_index_override is not None) else (Option_None())),
LocalSecondaryIndexOverride=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.local_secondary_index_override]))) if (input.local_secondary_index_override is not None) else (Option_None())),
ProvisionedThroughputOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput_override))) if (input.provisioned_throughput_override is not None) else (Option_None())),
SSESpecificationOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_SSESpecification(input.sse_specification_override))) if (input.sse_specification_override is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeGlobalTableSettingsInput(input):

  return DafnyDescribeGlobalTableSettingsInput(GlobalTableName=input.global_table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeLimitsInput(input):

  return DafnyDescribeLimitsInput()

def SmithyToDafny_com_amazonaws_dynamodb_RestoreTableToPointInTimeInput(input):

  return DafnyRestoreTableToPointInTimeInput(SourceTableArn=((Option_Some(input.source_table_arn)) if (input.source_table_arn is not None) else (Option_None())),
SourceTableName=((Option_Some(input.source_table_name)) if (input.source_table_name is not None) else (Option_None())),
TargetTableName=input.target_table_name,
UseLatestRestorableTime=((Option_Some(input.use_latest_restorable_time)) if (input.use_latest_restorable_time is not None) else (Option_None())),
RestoreDateTime=((Option_Some(input.restore_date_time)) if (input.restore_date_time is not None) else (Option_None())),
BillingModeOverride=((Option_Some(input.billing_mode_override)) if (input.billing_mode_override is not None) else (Option_None())),
GlobalSecondaryIndexOverride=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.global_secondary_index_override]))) if (input.global_secondary_index_override is not None) else (Option_None())),
LocalSecondaryIndexOverride=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.local_secondary_index_override]))) if (input.local_secondary_index_override is not None) else (Option_None())),
ProvisionedThroughputOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput_override))) if (input.provisioned_throughput_override is not None) else (Option_None())),
SSESpecificationOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_SSESpecification(input.sse_specification_override))) if (input.sse_specification_override is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_GetItemInput(input):

  return DafnyGetItemInput(TableName=input.table_name,
Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
AttributesToGet=((Option_Some(Seq([list_element for list_element in input.attributes_to_get]))) if (input.attributes_to_get is not None) else (Option_None())),
ConsistentRead=((Option_Some(input.consistent_read)) if (input.consistent_read is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ProjectionExpression=((Option_Some(input.projection_expression)) if (input.projection_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_AttributeDefinition(input):

  return DafnyAttributeDefinition(AttributeName=input.attribute_name,
AttributeType=input.attribute_type,
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalSecondaryIndexAction(input):

  return DafnyUpdateGlobalSecondaryIndexAction(IndexName=input.index_name,
ProvisionedThroughput=SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput),
)

def SmithyToDafny_com_amazonaws_dynamodb_CreateGlobalSecondaryIndexAction(input):

  return DafnyCreateGlobalSecondaryIndexAction(IndexName=input.index_name,
KeySchema=Seq([SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.key_schema]),
Projection=SmithyToDafny_com_amazonaws_dynamodb_Projection(input.projection),
ProvisionedThroughput=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput))) if (input.provisioned_throughput is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DeleteGlobalSecondaryIndexAction(input):

  return DafnyDeleteGlobalSecondaryIndexAction(IndexName=input.index_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndexUpdate(input):

  return DafnyGlobalSecondaryIndexUpdate(Update=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_UpdateGlobalSecondaryIndexAction(input.update))) if (input.update is not None) else (Option_None())),
Create=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_CreateGlobalSecondaryIndexAction(input.create))) if (input.create is not None) else (Option_None())),
Delete=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_DeleteGlobalSecondaryIndexAction(input.delete))) if (input.delete is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_StreamSpecification(input):

  return DafnyStreamSpecification(StreamEnabled=input.stream_enabled,
StreamViewType=((Option_Some(input.stream_view_type)) if (input.stream_view_type is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input):

  return DafnyProvisionedThroughputOverride(ReadCapacityUnits=((Option_Some(input.read_capacity_units)) if (input.read_capacity_units is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(input):

  return DafnyReplicaGlobalSecondaryIndex(IndexName=input.index_name,
ProvisionedThroughputOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.provisioned_throughput_override))) if (input.provisioned_throughput_override is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_CreateReplicationGroupMemberAction(input):

  return DafnyCreateReplicationGroupMemberAction(RegionName=input.region_name,
KMSMasterKeyId=((Option_Some(input.kms_master_key_id)) if (input.kms_master_key_id is not None) else (Option_None())),
ProvisionedThroughputOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.provisioned_throughput_override))) if (input.provisioned_throughput_override is not None) else (Option_None())),
GlobalSecondaryIndexes=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(list_element) for list_element in input.global_secondary_indexes]))) if (input.global_secondary_indexes is not None) else (Option_None())),
TableClassOverride=((Option_Some(input.table_class_override)) if (input.table_class_override is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateReplicationGroupMemberAction(input):

  return DafnyUpdateReplicationGroupMemberAction(RegionName=input.region_name,
KMSMasterKeyId=((Option_Some(input.kms_master_key_id)) if (input.kms_master_key_id is not None) else (Option_None())),
ProvisionedThroughputOverride=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughputOverride(input.provisioned_throughput_override))) if (input.provisioned_throughput_override is not None) else (Option_None())),
GlobalSecondaryIndexes=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicaGlobalSecondaryIndex(list_element) for list_element in input.global_secondary_indexes]))) if (input.global_secondary_indexes is not None) else (Option_None())),
TableClassOverride=((Option_Some(input.table_class_override)) if (input.table_class_override is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DeleteReplicationGroupMemberAction(input):

  return DafnyDeleteReplicationGroupMemberAction(RegionName=input.region_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_ReplicationGroupUpdate(input):

  return DafnyReplicationGroupUpdate(Create=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_CreateReplicationGroupMemberAction(input.create))) if (input.create is not None) else (Option_None())),
Update=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_UpdateReplicationGroupMemberAction(input.update))) if (input.update is not None) else (Option_None())),
Delete=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_DeleteReplicationGroupMemberAction(input.delete))) if (input.delete is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateTableInput(input):

  return DafnyUpdateTableInput(AttributeDefinitions=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.attribute_definitions]))) if (input.attribute_definitions is not None) else (Option_None())),
TableName=input.table_name,
BillingMode=((Option_Some(input.billing_mode)) if (input.billing_mode is not None) else (Option_None())),
ProvisionedThroughput=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput))) if (input.provisioned_throughput is not None) else (Option_None())),
GlobalSecondaryIndexUpdates=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndexUpdate(list_element) for list_element in input.global_secondary_index_updates]))) if (input.global_secondary_index_updates is not None) else (Option_None())),
StreamSpecification=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_StreamSpecification(input.stream_specification))) if (input.stream_specification is not None) else (Option_None())),
SSESpecification=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_SSESpecification(input.sse_specification))) if (input.sse_specification is not None) else (Option_None())),
ReplicaUpdates=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_ReplicationGroupUpdate(list_element) for list_element in input.replica_updates]))) if (input.replica_updates is not None) else (Option_None())),
TableClass=((Option_Some(input.table_class)) if (input.table_class is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_AttributeValueUpdate(input):

  return DafnyAttributeValueUpdate(Value=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(input.value))) if (input.value is not None) else (Option_None())),
Action=((Option_Some(input.action)) if (input.action is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateItemInput(input):

  return DafnyUpdateItemInput(TableName=input.table_name,
Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
AttributeUpdates=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValueUpdate(value) for (key, value) in input.attribute_updates.items() }))) if (input.attribute_updates is not None) else (Option_None())),
Expected=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_ExpectedAttributeValue(value) for (key, value) in input.expected.items() }))) if (input.expected is not None) else (Option_None())),
ConditionalOperator=((Option_Some(input.conditional_operator)) if (input.conditional_operator is not None) else (Option_None())),
ReturnValues=((Option_Some(input.return_values)) if (input.return_values is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ReturnItemCollectionMetrics=((Option_Some(input.return_item_collection_metrics)) if (input.return_item_collection_metrics is not None) else (Option_None())),
UpdateExpression=((Option_Some(input.update_expression)) if (input.update_expression is not None) else (Option_None())),
ConditionExpression=((Option_Some(input.condition_expression)) if (input.condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeImportInput(input):

  return DafnyDescribeImportInput(ImportArn=input.import_arn,
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeGlobalTableInput(input):

  return DafnyDescribeGlobalTableInput(GlobalTableName=input.global_table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_ConditionCheck(input):

  return DafnyConditionCheck(Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
TableName=input.table_name,
ConditionExpression=input.condition_expression,
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
ReturnValuesOnConditionCheckFailure=((Option_Some(input.return_values_on_condition_check_failure)) if (input.return_values_on_condition_check_failure is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_Put(input):

  return DafnyPut(Item=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.item.items() }),
TableName=input.table_name,
ConditionExpression=((Option_Some(input.condition_expression)) if (input.condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
ReturnValuesOnConditionCheckFailure=((Option_Some(input.return_values_on_condition_check_failure)) if (input.return_values_on_condition_check_failure is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_Delete(input):

  return DafnyDelete(Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
TableName=input.table_name,
ConditionExpression=((Option_Some(input.condition_expression)) if (input.condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
ReturnValuesOnConditionCheckFailure=((Option_Some(input.return_values_on_condition_check_failure)) if (input.return_values_on_condition_check_failure is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_Update(input):

  return DafnyUpdate(Key=Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.key.items() }),
UpdateExpression=input.update_expression,
TableName=input.table_name,
ConditionExpression=((Option_Some(input.condition_expression)) if (input.condition_expression is not None) else (Option_None())),
ExpressionAttributeNames=((Option_Some(Map({key: value for (key, value) in input.expression_attribute_names.items() }))) if (input.expression_attribute_names is not None) else (Option_None())),
ExpressionAttributeValues=((Option_Some(Map({key: SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(value) for (key, value) in input.expression_attribute_values.items() }))) if (input.expression_attribute_values is not None) else (Option_None())),
ReturnValuesOnConditionCheckFailure=((Option_Some(input.return_values_on_condition_check_failure)) if (input.return_values_on_condition_check_failure is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_TransactWriteItem(input):

  return DafnyTransactWriteItem(ConditionCheck=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ConditionCheck(input.condition_check))) if (input.condition_check is not None) else (Option_None())),
Put=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_Put(input.put))) if (input.put is not None) else (Option_None())),
Delete=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_Delete(input.delete))) if (input.delete is not None) else (Option_None())),
Update=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_Update(input.update))) if (input.update is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_TransactWriteItemsInput(input):

  return DafnyTransactWriteItemsInput(TransactItems=Seq([SmithyToDafny_com_amazonaws_dynamodb_TransactWriteItem(list_element) for list_element in input.transact_items]),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
ReturnItemCollectionMetrics=((Option_Some(input.return_item_collection_metrics)) if (input.return_item_collection_metrics is not None) else (Option_None())),
ClientRequestToken=((Option_Some(input.client_request_token)) if (input.client_request_token is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_PointInTimeRecoverySpecification(input):

  return DafnyPointInTimeRecoverySpecification(PointInTimeRecoveryEnabled=input.point_in_time_recovery_enabled,
)

def SmithyToDafny_com_amazonaws_dynamodb_UpdateContinuousBackupsInput(input):

  return DafnyUpdateContinuousBackupsInput(TableName=input.table_name,
PointInTimeRecoverySpecification=SmithyToDafny_com_amazonaws_dynamodb_PointInTimeRecoverySpecification(input.point_in_time_recovery_specification),
)

def SmithyToDafny_com_amazonaws_dynamodb_CreateBackupInput(input):

  return DafnyCreateBackupInput(TableName=input.table_name,
BackupName=input.backup_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_S3BucketSource(input):

  return DafnyS3BucketSource(S3BucketOwner=((Option_Some(input.s3_bucket_owner)) if (input.s3_bucket_owner is not None) else (Option_None())),
S3Bucket=input.s3_bucket,
S3KeyPrefix=((Option_Some(input.s3_key_prefix)) if (input.s3_key_prefix is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_CsvOptions(input):

  return DafnyCsvOptions(Delimiter=((Option_Some(input.delimiter)) if (input.delimiter is not None) else (Option_None())),
HeaderList=((Option_Some(Seq([list_element for list_element in input.header_list]))) if (input.header_list is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_InputFormatOptions(input):

  return DafnyInputFormatOptions(Csv=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_CsvOptions(input.csv))) if (input.csv is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_TableCreationParameters(input):

  return DafnyTableCreationParameters(TableName=input.table_name,
AttributeDefinitions=Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.attribute_definitions]),
KeySchema=Seq([SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.key_schema]),
BillingMode=((Option_Some(input.billing_mode)) if (input.billing_mode is not None) else (Option_None())),
ProvisionedThroughput=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput))) if (input.provisioned_throughput is not None) else (Option_None())),
SSESpecification=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_SSESpecification(input.sse_specification))) if (input.sse_specification is not None) else (Option_None())),
GlobalSecondaryIndexes=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.global_secondary_indexes]))) if (input.global_secondary_indexes is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_ImportTableInput(input):

  return DafnyImportTableInput(ClientToken=((Option_Some(input.client_token)) if (input.client_token is not None) else (Option_None())),
S3BucketSource=SmithyToDafny_com_amazonaws_dynamodb_S3BucketSource(input.s3_bucket_source),
InputFormat=input.input_format,
InputFormatOptions=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_InputFormatOptions(input.input_format_options))) if (input.input_format_options is not None) else (Option_None())),
InputCompressionType=((Option_Some(input.input_compression_type)) if (input.input_compression_type is not None) else (Option_None())),
TableCreationParameters=SmithyToDafny_com_amazonaws_dynamodb_TableCreationParameters(input.table_creation_parameters),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeKinesisStreamingDestinationInput(input):

  return DafnyDescribeKinesisStreamingDestinationInput(TableName=input.table_name,
)

def SmithyToDafny_com_amazonaws_dynamodb_Replica(input):

  return DafnyReplica(RegionName=((Option_Some(input.region_name)) if (input.region_name is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_CreateGlobalTableInput(input):

  return DafnyCreateGlobalTableInput(GlobalTableName=input.global_table_name,
ReplicationGroup=Seq([SmithyToDafny_com_amazonaws_dynamodb_Replica(list_element) for list_element in input.replication_group]),
)

def SmithyToDafny_com_amazonaws_dynamodb_ExecuteStatementInput(input):

  return DafnyExecuteStatementInput(Statement=input.statement,
Parameters=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeValue(list_element) for list_element in input.parameters]))) if (input.parameters is not None) else (Option_None())),
ConsistentRead=((Option_Some(input.consistent_read)) if (input.consistent_read is not None) else (Option_None())),
NextToken=((Option_Some(input.next_token)) if (input.next_token is not None) else (Option_None())),
ReturnConsumedCapacity=((Option_Some(input.return_consumed_capacity)) if (input.return_consumed_capacity is not None) else (Option_None())),
Limit=((Option_Some(input.limit)) if (input.limit is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_CreateTableInput(input):

  return DafnyCreateTableInput(AttributeDefinitions=Seq([SmithyToDafny_com_amazonaws_dynamodb_AttributeDefinition(list_element) for list_element in input.attribute_definitions]),
TableName=input.table_name,
KeySchema=Seq([SmithyToDafny_com_amazonaws_dynamodb_KeySchemaElement(list_element) for list_element in input.key_schema]),
LocalSecondaryIndexes=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_LocalSecondaryIndex(list_element) for list_element in input.local_secondary_indexes]))) if (input.local_secondary_indexes is not None) else (Option_None())),
GlobalSecondaryIndexes=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_GlobalSecondaryIndex(list_element) for list_element in input.global_secondary_indexes]))) if (input.global_secondary_indexes is not None) else (Option_None())),
BillingMode=((Option_Some(input.billing_mode)) if (input.billing_mode is not None) else (Option_None())),
ProvisionedThroughput=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_ProvisionedThroughput(input.provisioned_throughput))) if (input.provisioned_throughput is not None) else (Option_None())),
StreamSpecification=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_StreamSpecification(input.stream_specification))) if (input.stream_specification is not None) else (Option_None())),
SSESpecification=((Option_Some(SmithyToDafny_com_amazonaws_dynamodb_SSESpecification(input.sse_specification))) if (input.sse_specification is not None) else (Option_None())),
Tags=((Option_Some(Seq([SmithyToDafny_com_amazonaws_dynamodb_Tag(list_element) for list_element in input.tags]))) if (input.tags is not None) else (Option_None())),
TableClass=((Option_Some(input.table_class)) if (input.table_class is not None) else (Option_None())),
)

def SmithyToDafny_com_amazonaws_dynamodb_DescribeContinuousBackupsInput(input):

  return DafnyDescribeContinuousBackupsInput(TableName=input.table_name,
)
