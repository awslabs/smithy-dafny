# Code generated by smithy-python-codegen DO NOT EDIT.

from .dafny_protocol import DafnyRequest
from Wrappers_Compile import Option_None, Option_Some
from simple.extendable.resources.internaldafny.types import (
    CreateExtendableResourceInput_CreateExtendableResourceInput as DafnyCreateExtendableResourceInput,
    GetExtendableResourceDataInput_GetExtendableResourceDataInput as DafnyGetExtendableResourceDataInput,
    GetExtendableResourceErrorsInput_GetExtendableResourceErrorsInput as DafnyGetExtendableResourceErrorsInput,
    IExtendableResource,
    UseExtendableResourceErrorsInput_UseExtendableResourceErrorsInput as DafnyUseExtendableResourceErrorsInput,
    UseExtendableResourceInput_UseExtendableResourceInput as DafnyUseExtendableResourceInput,
)

from .config import Config
from .models import (
    CreateExtendableResourceInput,
    GetExtendableResourceDataInput,
    GetExtendableResourceErrorsInput,
    UseExtendableResourceErrorsInput,
    UseExtendableResourceInput,
)


async def _serialize_always_modeled_error(input: GetExtendableResourceErrorsInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="AlwaysModeledError", dafny_operation_input=DafnyGetExtendableResourceErrorsInput(value=((Option_Some(input.value)) if (input.value is not None) else (Option_None())),
    ))

async def _serialize_always_multiple_errors(input: GetExtendableResourceErrorsInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="AlwaysMultipleErrors", dafny_operation_input=DafnyGetExtendableResourceErrorsInput(value=((Option_Some(input.value)) if (input.value is not None) else (Option_None())),
    ))

async def _serialize_always_opaque_error(input: GetExtendableResourceErrorsInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="AlwaysOpaqueError", dafny_operation_input=DafnyGetExtendableResourceErrorsInput(value=((Option_Some(input.value)) if (input.value is not None) else (Option_None())),
    ))

async def _serialize_create_extendable_resource(input: CreateExtendableResourceInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="CreateExtendableResource", dafny_operation_input=DafnyCreateExtendableResourceInput(name=input.name,
    ))

async def _serialize_get_extendable_resource_data(input: GetExtendableResourceDataInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="GetExtendableResourceData", dafny_operation_input=DafnyGetExtendableResourceDataInput(blobValue=((Option_Some(input.blob_value)) if (input.blob_value is not None) else (Option_None())),
    booleanValue=((Option_Some(input.boolean_value)) if (input.boolean_value is not None) else (Option_None())),
    stringValue=((Option_Some(input.string_value)) if (input.string_value is not None) else (Option_None())),
    integerValue=((Option_Some(input.integer_value)) if (input.integer_value is not None) else (Option_None())),
    longValue=((Option_Some(input.long_value)) if (input.long_value is not None) else (Option_None())),
    ))

async def _serialize_use_extendable_resource(input: UseExtendableResourceInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="UseExtendableResource", dafny_operation_input=DafnyUseExtendableResourceInput(resource=input.resource,
    input=DafnyGetExtendableResourceDataInput(blobValue=((Option_Some(input.input.blob_value)) if (input.input.blob_value is not None) else (Option_None())),
    booleanValue=((Option_Some(input.input.boolean_value)) if (input.input.boolean_value is not None) else (Option_None())),
    stringValue=((Option_Some(input.input.string_value)) if (input.input.string_value is not None) else (Option_None())),
    integerValue=((Option_Some(input.input.integer_value)) if (input.input.integer_value is not None) else (Option_None())),
    longValue=((Option_Some(input.input.long_value)) if (input.input.long_value is not None) else (Option_None())),
    ),
    ))

async def _serialize_use_extendable_resource_always_modeled_error(input: UseExtendableResourceErrorsInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="UseExtendableResourceAlwaysModeledError", dafny_operation_input=DafnyUseExtendableResourceErrorsInput(resource=input.resource,
    input=DafnyGetExtendableResourceErrorsInput(value=((Option_Some(input.input.value)) if (input.input.value is not None) else (Option_None())),
    ),
    ))

async def _serialize_use_extendable_resource_always_multiple_errors(input: UseExtendableResourceErrorsInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="UseExtendableResourceAlwaysMultipleErrors", dafny_operation_input=DafnyUseExtendableResourceErrorsInput(resource=input.resource,
    input=DafnyGetExtendableResourceErrorsInput(value=((Option_Some(input.input.value)) if (input.input.value is not None) else (Option_None())),
    ),
    ))

async def _serialize_use_extendable_resource_always_opaque_error(input: UseExtendableResourceErrorsInput, config: Config) -> DafnyRequest:
    return DafnyRequest(operation_name="UseExtendableResourceAlwaysOpaqueError", dafny_operation_input=DafnyUseExtendableResourceErrorsInput(resource=input.resource,
    input=DafnyGetExtendableResourceErrorsInput(value=((Option_Some(input.input.value)) if (input.input.value is not None) else (Option_None())),
    ),
    ))
