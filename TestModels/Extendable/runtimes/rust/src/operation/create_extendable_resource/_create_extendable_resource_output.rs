// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
pub struct CreateExtendableResourceOutput {
    pub(crate) output: crate::types::extendable_resource::ExtendableResourceRef,
}

impl CreateExtendableResourceOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn output(&self) -> crate::types::extendable_resource::ExtendableResourceRef {
        eprintln!("\n output \n");
        self.output.clone()
    }
}

impl CreateExtendableResourceOutput {
    /// Creates a new builder-style object to manufacture [`CreateExtendableResourceOutput`](crate::operation::operation::CreateExtendableResourceOutput).
    pub fn builder(
    ) -> crate::operation::create_extendable_resource::builders::CreateExtendableResourceOutputBuilder
    {
        crate::operation::create_extendable_resource::builders::CreateExtendableResourceOutputBuilder::default()
    }
}

/// A builder for [`CreateExtendableResourceOutput`](crate::operation::operation::CreateExtendableResourceOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::default::Default)]
pub struct CreateExtendableResourceOutputBuilder {
    pub(crate) output:
        ::std::option::Option<crate::types::extendable_resource::ExtendableResourceRef>,
}

impl CreateExtendableResourceOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn output(
        mut self,
        input: crate::types::extendable_resource::ExtendableResourceRef,
    ) -> Self {
        self.output = ::std::option::Option::Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_output(
        mut self,
        input: ::std::option::Option<crate::types::extendable_resource::ExtendableResourceRef>,
    ) -> Self {
        self.output = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_output(
        &self,
    ) -> &::std::option::Option<crate::types::extendable_resource::ExtendableResourceRef> {
        &self.output
    }

    /// Consumes the builder and constructs a [`CreateExtendableResourceOutput`](crate::operation::operation::CreateExtendableResourceOutput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_extendable_resource::CreateExtendableResourceOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_extendable_resource::CreateExtendableResourceOutput {
                output: self.output.unwrap(),
            },
        )
    }
}
