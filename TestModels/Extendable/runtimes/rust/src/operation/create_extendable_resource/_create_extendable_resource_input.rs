// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateExtendableResourceInput {
    #[allow(missing_docs)] // documentation missing in model
    pub(crate) name: ::std::string::String,
}
impl CreateExtendableResourceInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(&self) -> &String {
        &self.name
    }
}
impl CreateExtendableResourceInput {
    /// Creates a new builder-style object to manufacture [`CreateExtendableResourceInput`](crate::operation::operation::CreateExtendableResourceInput).
    pub fn builder(
    ) -> crate::operation::create_extendable_resource::builders::CreateExtendableResourceInputBuilder
    {
        crate::operation::create_extendable_resource::builders::CreateExtendableResourceInputBuilder::default()
    }
}

/// A builder for [`CreateExtendableResourceInput`](crate::operation::operation::CreateExtendableResourceInput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct CreateExtendableResourceInputBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
}
impl CreateExtendableResourceInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// Consumes the builder and constructs a [`CreateExtendableResourceInput`](crate::operation::operation::CreateExtendableResourceInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::create_extendable_resource::CreateExtendableResourceInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::create_extendable_resource::CreateExtendableResourceInput {
                name: self.name.unwrap(),
            },
        )
    }
}
