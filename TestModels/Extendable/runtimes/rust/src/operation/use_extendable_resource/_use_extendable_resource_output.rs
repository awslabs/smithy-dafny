// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
use crate::operation::get_extendable_resource_data::GetExtendableResourceDataOutput;
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UseExtendableResourceOutput {
    pub(crate) output: GetExtendableResourceDataOutput,
}

impl UseExtendableResourceOutput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn output(&self) -> &GetExtendableResourceDataOutput {
        &self.output
    }
}

impl UseExtendableResourceOutput {
    /// Creates a new builder-style object to manufacture [`UseExtendableResourceOutput`](crate::operation::operation::UseExtendableResourceOutput).
    pub fn builder(
    ) -> crate::operation::use_extendable_resource::builders::UseExtendableResourceOutputBuilder
    {
        crate::operation::use_extendable_resource::builders::UseExtendableResourceOutputBuilder::default()
    }
}

/// A builder for [`UseExtendableResourceOutput`](crate::operation::operation::UseExtendableResourceOutput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct UseExtendableResourceOutputBuilder {
    output: Option<GetExtendableResourceDataOutput>,
}

impl UseExtendableResourceOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn output(mut self, input: GetExtendableResourceDataOutput) -> Self {
        self.output = Some(input);
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn set_output(mut self, input: Option<GetExtendableResourceDataOutput>) -> Self {
        self.output = input;
        self
    }

    #[allow(missing_docs)] // documentation missing in model
    pub fn get_output(&self) -> &Option<GetExtendableResourceDataOutput> {
        &self.output
    }

    /// Consumes the builder and constructs a [`UseExtendableResourceOutput`](crate::operation::operation::UseExtendableResourceOutput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::use_extendable_resource::UseExtendableResourceOutput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
            crate::operation::use_extendable_resource::UseExtendableResourceOutput {
                output: self.output.unwrap(),
            },
        )
    }
}
