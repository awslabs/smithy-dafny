// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(dead_code)]
pub fn to_dafny(
    value: crate::types::NestedStructure,
) -> ::std::rc::Rc<
    ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure,
> {
    ::std::rc::Rc::new(::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure::NestedStructure {
    stringStructure: crate::conversions::string_structure::option_to_dafny(value.string_structure),
})
}

pub fn to_dafny_plain(
    value: &crate::types::NestedStructure,
) -> ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure {
    ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure::NestedStructure {
  stringStructure: crate::conversions::string_structure::option_to_dafny(value.string_structure.clone()),
}
}

pub fn option_to_dafny(
    value: Option<&crate::types::NestedStructure>,
) -> ::std::rc::Rc<
    simple_aggregate_dafny::_Wrappers_Compile::Option<
        ::std::rc::Rc<
            ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure,
        >,
    >,
> {
    let inner = match value {
        None => simple_aggregate_dafny::_Wrappers_Compile::Option::None {},
        Some(x) => simple_aggregate_dafny::_Wrappers_Compile::Option::Some {
            value: ::std::rc::Rc::new(to_dafny_plain(x)),
        },
    };
    ::std::rc::Rc::new(inner)
}

#[allow(dead_code)]
pub fn from_dafny(
    dafny_value: ::std::rc::Rc<
        ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure,
    >,
) -> crate::types::NestedStructure {
    match &*dafny_value {
    ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure::NestedStructure {
      stringStructure,
    } =>
    crate::types::NestedStructure {
      string_structure: crate::conversions::string_structure::option_from_dafny(stringStructure.clone()),
    }
  }
}

#[allow(dead_code)]
pub fn plain_from_dafny(
    dafny_value: &::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure,
) -> crate::types::NestedStructure {
    match dafny_value {
    ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure::NestedStructure {
      stringStructure,
    } =>
    crate::types::NestedStructure {
      string_structure: crate::conversions::string_structure::option_from_dafny(stringStructure.clone()),
    }
  }
}

#[allow(dead_code)]
pub fn option_from_dafny(
    dafny_value: ::std::rc::Rc<simple_aggregate_dafny::_Wrappers_Compile::Option<::std::rc::Rc<
        ::simple_aggregate_dafny::r#_simple_daggregate_dinternaldafny_dtypes::NestedStructure,
    >>>,
) -> Option<crate::types::NestedStructure> {
    match &*dafny_value {
        simple_aggregate_dafny::_Wrappers_Compile::Option::Some { value } => {
            Some(plain_from_dafny(value))
        }
        _ => None,
    }
}
