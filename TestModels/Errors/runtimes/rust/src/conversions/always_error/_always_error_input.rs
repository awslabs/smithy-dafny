// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(dead_code)]
pub fn to_dafny(
    value: crate::operation::always_error::AlwaysErrorInput,
) -> ::std::rc::Rc<::simple_errors_dafny::r#_simple_derrors_dinternaldafny_dtypes::GetErrorsInput> {
    let dafny_value = match value.value {
      Some(s) => ::simple_errors_dafny::_Wrappers_Compile::Option::Some {
        value: dafny_runtime::dafny_runtime_conversions::unicode_chars_false::string_to_dafny_string(&s)
      },
      None => ::simple_errors_dafny::_Wrappers_Compile::Option::None {},
    };
    ::std::rc::Rc::new(::simple_errors_dafny::r#_simple_derrors_dinternaldafny_dtypes::GetErrorsInput::GetErrorsInput {
    value: ::std::rc::Rc::new(dafny_value)
  })
}

#[allow(dead_code)]
pub fn from_dafny(
    dafny_value: ::std::rc::Rc<
        ::simple_errors_dafny::r#_simple_derrors_dinternaldafny_dtypes::GetErrorsInput,
    >,
) -> crate::operation::always_error::AlwaysErrorInput {
    let value = if matches!(
        dafny_value.value().as_ref(),
        ::simple_errors_dafny::_Wrappers_Compile::Option::Some { .. }
    ) {
        Some(
            dafny_runtime::dafny_runtime_conversions::unicode_chars_false::dafny_string_to_string(
                &dafny_value.value().Extract(),
            ),
        )
    } else if matches!(
        dafny_value.value().as_ref(),
        ::simple_errors_dafny::_Wrappers_Compile::Option::None { .. }
    ) {
        None
    } else {
        panic!("Unreachable")
    };
    crate::operation::always_error::AlwaysErrorInput { value }
}
