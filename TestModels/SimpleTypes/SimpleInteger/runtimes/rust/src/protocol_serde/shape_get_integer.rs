// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_get_integer_http_error(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<crate::operation::get_integer::GetIntegerOutput, crate::operation::get_integer::GetIntegerError> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body)
        .map_err(crate::operation::get_integer::GetIntegerError::unhandled)?;
    let generic = generic_builder.build();
    Err(crate::operation::get_integer::GetIntegerError::generic(generic))
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_get_integer_http_response(
    _response_status: u16,
    _response_headers: &::aws_smithy_runtime_api::http::Headers,
    _response_body: &[u8],
) -> std::result::Result<crate::operation::get_integer::GetIntegerOutput, crate::operation::get_integer::GetIntegerError> {
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::get_integer::builders::GetIntegerOutputBuilder::default();
        output = crate::protocol_serde::shape_get_integer::de_get_integer(_response_body, output)
            .map_err(crate::operation::get_integer::GetIntegerError::unhandled)?;
        output.build()
    })
}

pub fn ser_get_integer_input(
    input: &crate::operation::get_integer::GetIntegerInput,
) -> Result<::aws_smithy_types::body::SdkBody, ::aws_smithy_types::error::operation::SerializationError> {
    let mut out = String::new();
    let mut object = ::aws_smithy_json::serialize::JsonObjectWriter::new(&mut out);
    crate::protocol_serde::shape_get_integer_input::ser_get_integer_input_input(&mut object, input)?;
    object.finish();
    Ok(::aws_smithy_types::body::SdkBody::from(out))
}

pub(crate) fn de_get_integer(
    value: &[u8],
    mut builder: crate::operation::get_integer::builders::GetIntegerOutputBuilder,
) -> Result<crate::operation::get_integer::builders::GetIntegerOutputBuilder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    let mut tokens_owned = ::aws_smithy_json::deserialize::json_token_iter(crate::protocol_serde::or_empty_doc(value)).peekable();
    let tokens = &mut tokens_owned;
    ::aws_smithy_json::deserialize::token::expect_start_object(tokens.next())?;
    loop {
        match tokens.next().transpose()? {
            Some(::aws_smithy_json::deserialize::Token::EndObject { .. }) => break,
            Some(::aws_smithy_json::deserialize::Token::ObjectKey { key, .. }) => match key.to_unescaped()?.as_ref() {
                "value" => {
                    builder = builder.set_value(
                        ::aws_smithy_json::deserialize::token::expect_number_or_null(tokens.next())?
                            .map(i32::try_from)
                            .transpose()?,
                    );
                }
                _ => ::aws_smithy_json::deserialize::token::skip_value(tokens)?,
            },
            other => {
                return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(format!(
                    "expected object key or end object, found: {:?}",
                    other
                )))
            }
        }
    }
    if tokens.next().is_some() {
        return Err(::aws_smithy_json::deserialize::error::DeserializeError::custom(
            "found more JSON tokens after completing parsing",
        ));
    }
    Ok(builder)
}
