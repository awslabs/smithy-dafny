// Code generated by smithy-go-codegen DO NOT EDIT.

package simpleorphanedsmithygeneratedtypes

import (
	"fmt"
)

type CreateOrphanedErrorInput struct {
}

func (input CreateOrphanedErrorInput) Validate() error {

	return nil
}

type CreateOrphanedErrorOutput struct {
}

func (input CreateOrphanedErrorOutput) Validate() error {

	return nil
}

type CreateOrphanedResourceInput struct {
}

func (input CreateOrphanedResourceInput) Validate() error {

	return nil
}

type CreateOrphanedResourceOutput struct {
}

func (input CreateOrphanedResourceOutput) Validate() error {

	return nil
}

type CreateOrphanedStructureInput struct {
}

func (input CreateOrphanedStructureInput) Validate() error {

	return nil
}

type CreateOrphanedStructureOutput struct {
}

func (input CreateOrphanedStructureOutput) Validate() error {

	return nil
}

type OrphanedConfigShape struct {
	StringMember *string
}

func (input OrphanedConfigShape) Validate() error {

	return nil
}

type OrphanedResourceOperationInput struct {
	SomeString *string
}

func (input OrphanedResourceOperationInput) Validate() error {

	return nil
}

type OrphanedResourceOperationOutput struct {
	SomeString *string
}

func (input OrphanedResourceOperationOutput) Validate() error {

	return nil
}

type OrphanedResourceReference struct {
}

func (input OrphanedResourceReference) Validate() error {

	return nil
}

type OrphanedStructure struct {
	BlobValue []byte

	BooleanValue *bool

	EnumValue *OrphanedV1Enum

	IntegerValue *int32

	ListValue []string

	LongValue *int64

	MapValue map[string]string

	StringValue *string

	UnionValue OrphanedUnion
}

func (input OrphanedStructure) Validate() error {
	if input.simple_orphaned_OrphanedStructure_unionValue_Validate() != nil {
		return input.simple_orphaned_OrphanedStructure_unionValue_Validate()
	}

	return nil
}

func (input OrphanedStructure) simple_orphaned_OrphanedStructure_unionValue_Validate() error {
	if input.UnionValue == nil {
		return nil
	}
	switch unionType := input.UnionValue.(type) {
	case *OrphanedUnionMemberintegerValue:
	case *OrphanedUnionMemberstringValue:
	// Default case should not be reached.
	default:
		panic(fmt.Sprintf("Unhandled union type: %T ", unionType))
	}

	return nil
}

type SimpleOrphanedConfig struct {
	StructureMember *OrphanedConfigShape
}

func (input SimpleOrphanedConfig) Validate() error {
	if input.StructureMember != nil {
		if input.StructureMember.Validate() != nil {
			return input.StructureMember.Validate()
		}

	}

	return nil
}

// OrphanedUnionMemberintegerValue
// OrphanedUnionMemberstringValue
type OrphanedUnion interface {
	isOrphanedUnion()
}

type OrphanedUnionMemberintegerValue struct {
	Value int32
}

func (*OrphanedUnionMemberintegerValue) isOrphanedUnion() {}

type OrphanedUnionMemberstringValue struct {
	Value string
}

func (*OrphanedUnionMemberstringValue) isOrphanedUnion() {}

type SimpleOrphanedBaseException interface {
	// This is a dummy method to allow type assertion since Go empty interfaces
	// aren't useful for type assertion checks. No concrete class is expected to implement
	// this method. This is also not exported.
	interfaceBindingMethod()
}

type IOrphanedResource interface {
	OrphanedResourceOperation(OrphanedResourceOperationInput) (*OrphanedResourceOperationOutput, error)
}
