// Code generated by smithy-go-codegen DO NOT EDIT.

package simpleorphanedsmithygenerated

import (
	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
	"github.com/dafny-lang/DafnyStandardLibGo/Wrappers"
	"github.com/smithy-lang/smithy-dafny/TestModels/OrphanedShapes/SimpleOrphanedTypes"
	"github.com/smithy-lang/smithy-dafny/TestModels/OrphanedShapes/simpleorphanedsmithygeneratedtypes"
)

func OrphanedResourceOperationInput_ToDafny(nativeInput simpleorphanedsmithygeneratedtypes.OrphanedResourceOperationInput) SimpleOrphanedTypes.OrphanedResourceOperationInput {

	return func() SimpleOrphanedTypes.OrphanedResourceOperationInput {

		return SimpleOrphanedTypes.Companion_OrphanedResourceOperationInput_.Create_OrphanedResourceOperationInput_(simple_orphaned_OrphanedResourceOperationInput_someString_ToDafny(nativeInput.SomeString))
	}()

}

func OrphanedResourceOperationOutput_ToDafny(nativeOutput simpleorphanedsmithygeneratedtypes.OrphanedResourceOperationOutput) SimpleOrphanedTypes.OrphanedResourceOperationOutput {

	return func() SimpleOrphanedTypes.OrphanedResourceOperationOutput {

		return SimpleOrphanedTypes.Companion_OrphanedResourceOperationOutput_.Create_OrphanedResourceOperationOutput_(simple_orphaned_OrphanedResourceOperationOutput_someString_ToDafny(nativeOutput.SomeString))
	}()

}

func OrphanedResource_ToDafny(nativeResource simpleorphanedsmithygeneratedtypes.IOrphanedResource) SimpleOrphanedTypes.IOrphanedResource {
	val, ok := nativeResource.(*OrphanedResource)
	if ok {
		return val.Impl
	}
	return OrphanedResource{&OrphanedResourceNativeWrapper{Impl: nativeResource}}.Impl

}

func OrphanedError_ToDafny(nativeInput simpleorphanedsmithygeneratedtypes.OrphanedError) SimpleOrphanedTypes.Error {
	return func() SimpleOrphanedTypes.Error {

		return SimpleOrphanedTypes.Companion_Error_.Create_OrphanedError_(simple_orphaned_OrphanedError_message_ToDafny(nativeInput.Message))
	}()

}

func CollectionOfErrors_Input_ToDafny(nativeInput simpleorphanedsmithygeneratedtypes.CollectionOfErrors) SimpleOrphanedTypes.Error {
	var e []interface{}
	for _, i2 := range nativeInput.ListOfErrors {
		e = append(e, Error_ToDafny(i2))
	}
	return SimpleOrphanedTypes.Companion_Error_.Create_CollectionOfErrors_(dafny.SeqOf(e...), dafny.SeqOfChars([]dafny.Char(nativeInput.Message)...))
}
func OpaqueError_Input_ToDafny(nativeInput simpleorphanedsmithygeneratedtypes.OpaqueError) SimpleOrphanedTypes.Error {
	return SimpleOrphanedTypes.Companion_Error_.Create_Opaque_(nativeInput.ErrObject)
}

func Error_ToDafny(err error) SimpleOrphanedTypes.Error {
	switch err.(type) {
	// Service Errors
	case simpleorphanedsmithygeneratedtypes.OrphanedError:
		return OrphanedError_ToDafny(err.(simpleorphanedsmithygeneratedtypes.OrphanedError))

	//DependentErrors

	//Unmodelled Errors
	case simpleorphanedsmithygeneratedtypes.CollectionOfErrors:
		return CollectionOfErrors_Input_ToDafny(err.(simpleorphanedsmithygeneratedtypes.CollectionOfErrors))

	default:
		error, ok := err.(simpleorphanedsmithygeneratedtypes.OpaqueError)
		if !ok {
			panic("Error is not an OpaqueError")
		}
		return OpaqueError_Input_ToDafny(error)
	}
}

func SimpleOrphanedConfig_ToDafny(nativeInput simpleorphanedsmithygeneratedtypes.SimpleOrphanedConfig) SimpleOrphanedTypes.SimpleOrphanedConfig {
	return func() SimpleOrphanedTypes.SimpleOrphanedConfig {

		return SimpleOrphanedTypes.Companion_SimpleOrphanedConfig_.Create_SimpleOrphanedConfig_(simple_orphaned_SimpleOrphanedConfig_structureMember_ToDafny(nativeInput.StructureMember))
	}()

}

func simple_orphaned_SimpleOrphanedConfig_structureMember_ToDafny(input *simpleorphanedsmithygeneratedtypes.OrphanedConfigShape) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(SimpleOrphanedTypes.Companion_OrphanedConfigShape_.Create_OrphanedConfigShape_(simple_orphaned_OrphanedConfigShape_stringMember_ToDafny(input.StringMember)))
	}()
}

func simple_orphaned_OrphanedError_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func simple_orphaned_OrphanedConfigShape_stringMember_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*input)...))
	}()
}

func simple_orphaned_OrphanedResourceOperationInput_someString_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*input)...))
	}()
}

func simple_orphaned_OrphanedResourceOperationOutput_someString_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*input)...))
	}()
}
