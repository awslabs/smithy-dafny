// Code generated by smithy-go-codegen DO NOT EDIT.

package simpleorphanedsmithygenerated

import (
	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
	"github.com/smithy-lang/smithy-dafny/TestModels/OrphanedShapes/SimpleOrphanedTypes"
	"github.com/smithy-lang/smithy-dafny/TestModels/OrphanedShapes/simpleorphanedsmithygeneratedtypes"
)

func OrphanedResourceOperationInput_FromDafny(dafnyInput SimpleOrphanedTypes.OrphanedResourceOperationInput) simpleorphanedsmithygeneratedtypes.OrphanedResourceOperationInput {

	return simpleorphanedsmithygeneratedtypes.OrphanedResourceOperationInput{SomeString: simple_orphaned_OrphanedResourceOperationInput_someString_FromDafny(dafnyInput.Dtor_someString().UnwrapOr(nil))}

}

func OrphanedResourceOperationOutput_FromDafny(dafnyOutput SimpleOrphanedTypes.OrphanedResourceOperationOutput) simpleorphanedsmithygeneratedtypes.OrphanedResourceOperationOutput {

	return simpleorphanedsmithygeneratedtypes.OrphanedResourceOperationOutput{SomeString: simple_orphaned_OrphanedResourceOperationOutput_someString_FromDafny(dafnyOutput.Dtor_someString().UnwrapOr(nil))}

}

func OrphanedResource_FromDafny(dafnyResource SimpleOrphanedTypes.IOrphanedResource) simpleorphanedsmithygeneratedtypes.IOrphanedResource {
	val, ok := dafnyResource.(*OrphanedResourceNativeWrapper)
	if ok {
		return val.Impl
	}

	return &OrphanedResource{dafnyResource}
}

func OrphanedError_FromDafny(dafnyOutput SimpleOrphanedTypes.Error) simpleorphanedsmithygeneratedtypes.OrphanedError {
	return simpleorphanedsmithygeneratedtypes.OrphanedError{Message: simple_orphaned_OrphanedError_message_FromDafny(dafnyOutput.Dtor_message())}

}

func CollectionOfErrors_Output_FromDafny(dafnyOutput SimpleOrphanedTypes.Error) simpleorphanedsmithygeneratedtypes.CollectionOfErrors {
	listOfErrors := dafnyOutput.Dtor_list()
	message := dafnyOutput.Dtor_message()
	t := simpleorphanedsmithygeneratedtypes.CollectionOfErrors{}
	for i := dafny.Iterate(listOfErrors); ; {
		val, ok := i()
		if !ok {
			break
		}
		err := val.(SimpleOrphanedTypes.Error)
		t.ListOfErrors = append(t.ListOfErrors, Error_FromDafny(err))

	}
	t.Message = func() string {
		var s string
		for i := dafny.Iterate(message); ; {
			val, ok := i()
			if !ok {
				return s
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
	return t
}
func OpaqueError_Output_FromDafny(dafnyOutput SimpleOrphanedTypes.Error) simpleorphanedsmithygeneratedtypes.OpaqueError {
	return simpleorphanedsmithygeneratedtypes.OpaqueError{
		ErrObject: dafnyOutput.Dtor_obj(),
	}
}

func Error_FromDafny(err SimpleOrphanedTypes.Error) error {
	// Service Errors
	if err.Is_OrphanedError() {
		return OrphanedError_FromDafny(err)
	}

	//DependentErrors

	//Unmodelled Errors
	if err.Is_CollectionOfErrors() {
		return CollectionOfErrors_Output_FromDafny(err)
	}

	return OpaqueError_Output_FromDafny(err)
}

func SimpleOrphanedConfig_FromDafny(dafnyOutput SimpleOrphanedTypes.SimpleOrphanedConfig) simpleorphanedsmithygeneratedtypes.SimpleOrphanedConfig {
	return simpleorphanedsmithygeneratedtypes.SimpleOrphanedConfig{StructureMember: simple_orphaned_SimpleOrphanedConfig_structureMember_FromDafny(dafnyOutput.Dtor_structureMember().UnwrapOr(nil))}

}

func simple_orphaned_SimpleOrphanedConfig_structureMember_FromDafny(input interface{}) *simpleorphanedsmithygeneratedtypes.OrphanedConfigShape {
	if input == nil {
		return nil
	}
	return &simpleorphanedsmithygeneratedtypes.OrphanedConfigShape{StringMember: simple_orphaned_OrphanedConfigShape_stringMember_FromDafny(input.(SimpleOrphanedTypes.OrphanedConfigShape).Dtor_stringMember().UnwrapOr(nil))}
}
func simple_orphaned_OrphanedError_message_FromDafny(input interface{}) string {
	return func() string {
		var s string
		for i := dafny.Iterate(input); ; {
			val, ok := i()
			if !ok {
				return s
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
}
func simple_orphaned_OrphanedConfigShape_stringMember_FromDafny(input interface{}) *string {
	return func() *string {
		var s string
		if input == nil {
			return nil
		}
		for i := dafny.Iterate(input); ; {
			val, ok := i()
			if !ok {
				return &[]string{s}[0]
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
}
func simple_orphaned_OrphanedResourceOperationInput_someString_FromDafny(input interface{}) *string {
	return func() *string {
		var s string
		if input == nil {
			return nil
		}
		for i := dafny.Iterate(input); ; {
			val, ok := i()
			if !ok {
				return &[]string{s}[0]
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
}
func simple_orphaned_OrphanedResourceOperationOutput_someString_FromDafny(input interface{}) *string {
	return func() *string {
		var s string
		if input == nil {
			return nil
		}
		for i := dafny.Iterate(input); ; {
			val, ok := i()
			if !ok {
				return &[]string{s}[0]
			} else {
				s = s + string(val.(dafny.Char))
			}
		}
	}()
}
