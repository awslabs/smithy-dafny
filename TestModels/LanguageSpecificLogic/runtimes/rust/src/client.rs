// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

use aws_smithy_types::error::operation::BuildError;

#[derive(::std::clone::Clone, ::std::fmt::Debug)]
pub struct Client {
    pub(crate) dafny_client: ::dafny_runtime::Object<dyn crate::implementation_from_dafny::r#_language_dspecific_dlogic_dinternaldafny_dtypes::ILanguageSpecificLogicClient>
}

impl Client {
    /// Creates a new client from the service [`Config`](crate::Config).
    #[track_caller]
    pub fn from_conf(
        conf: crate::types::language_specific_logic_config::LanguageSpecificLogicConfig,
    ) -> Result<Self, BuildError> {
        // If this service had any configuration properties,
        // they would need converting here too.
        let inner =
            crate::implementation_from_dafny::_language_dspecific_dlogic_dinternaldafny::_default::LanguageSpecificLogic(
                &crate::conversions::language_specific_logic_config::_language_specific_logic_config::to_dafny(conf),
            );
        if matches!(
            inner.as_ref(),
            crate::implementation_from_dafny::_Wrappers_Compile::Result::Failure { .. }
        ) {
            // TODO: convert error - the potential types are not modeled!
            return Err(BuildError::other(
                ::aws_smithy_types::error::metadata::ErrorMetadata::builder()
                    .message("Invalid client config")
                    .build(),
            ));
        }
        Ok(Self {
            dafny_client: ::dafny_runtime::upcast_object()(inner.Extract()),
        })
    }
}

mod get_runtime_information;
