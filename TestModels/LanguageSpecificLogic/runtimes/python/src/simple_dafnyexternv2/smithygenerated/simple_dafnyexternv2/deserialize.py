# Code generated by smithy-python-codegen DO NOT EDIT.

import module_
from simple_dafnyexternv2_internaldafny_types import (
    Error,
    ExternV2MustErrorOutput_ExternV2MustErrorOutput as DafnyExternV2MustErrorOutput,
    GetExternV2Output_GetExternV2Output as DafnyGetExternV2Output,
    UseClassExternV2Output_UseClassExternV2Output as DafnyUseClassExternV2Output,
)
import smithygenerated.simple_dafnyexternv2.dafny_to_smithy
from typing import Any

from .dafny_protocol import DafnyResponse
from .errors import CollectionOfErrors, OpaqueError, ServiceError
from smithygenerated.simple_dafnyexternv2.config import Config


async def _deserialize_get_extern_v2(input: DafnyResponse, config: Config):

  if input.IsFailure():
    return await _deserialize_error(input.error)
  return smithygenerated.simple_dafnyexternv2.dafny_to_smithy.DafnyToSmithy_simple_dafnyexternv2_GetExternV2Output(input.value)

async def _deserialize_use_class_extern_v2(input: DafnyResponse, config: Config):

  if input.IsFailure():
    return await _deserialize_error(input.error)
  return smithygenerated.simple_dafnyexternv2.dafny_to_smithy.DafnyToSmithy_simple_dafnyexternv2_UseClassExternV2Output(input.value)

async def _deserialize_extern_v2_must_error(input: DafnyResponse, config: Config):

  if input.IsFailure():
    return await _deserialize_error(input.error)
  return smithygenerated.simple_dafnyexternv2.dafny_to_smithy.DafnyToSmithy_simple_dafnyexternv2_ExternV2MustErrorOutput(input.value)

async def _deserialize_error(error: Error) -> ServiceError:
    if error.is_Opaque:
      return OpaqueError(obj=error.obj)
    elif error.is_CollectionOfErrors:
      return CollectionOfErrors(message=error.message, list=error.list)
    else:
        return OpaqueError(obj=error)
