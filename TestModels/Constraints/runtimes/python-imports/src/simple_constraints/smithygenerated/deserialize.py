# Code generated by smithy-python-codegen DO NOT EDIT.

import simple_constraints.smithygenerated.dafny_to_smithy
import module_
from simple_constraints_internaldafny_types import (
    Error,
    Error_SimpleConstraintsException,
    GetConstraintsOutput_GetConstraintsOutput as DafnyGetConstraintsOutput,
)
from typing import Any

from .dafny_protocol import DafnyResponse
from .errors import (
    CollectionOfErrors,
    OpaqueError,
    ServiceError,
    SimpleConstraintsException,
)
from .models import GetConstraintsOutput

from .config import Config


async def _deserialize_get_constraints(input: DafnyResponse, config: Config) -> GetConstraintsOutput:

  if input.IsFailure():
    return await _deserialize_error(input.error)
  # Import dafny_to_smithy at runtime to prevent introducing circular dependency on deserialize file.
  return simple_constraints.smithygenerated.dafny_to_smithy.DafnyToSmithy_simple_constraints_GetConstraintsOutput(input.value)

async def _deserialize_error(error: Error) -> ServiceError:
    if error.is_Opaque:
      return OpaqueError(obj=error.obj)
    elif error.is_CollectionOfErrors:
      return CollectionOfErrors(message=error.message, list=error.list)
    elif error.is_SimpleConstraintsException:
      return SimpleConstraintsException(message=error.message)
    else:
        return OpaqueError(obj=error)
