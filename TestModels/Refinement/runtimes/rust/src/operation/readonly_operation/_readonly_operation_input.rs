// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReadonlyOperationInput {
    #[allow(missing_docs)] // documentation missing in model
    pub required_string: ::std::string::String,
    #[allow(missing_docs)] // documentation missing in model
    pub optional_string: ::std::option::Option<::std::string::String>,
}
impl ReadonlyOperationInput {
    #[allow(missing_docs)] // documentation missing in model
    pub fn required_string(&self) -> &str {
        &self.required_string
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn optional_string(&self) -> ::std::option::Option<&str> {
        self.optional_string.as_deref()
    }
}
impl ReadonlyOperationInput {
    /// Creates a new builder-style object to manufacture [`ReadonlyOperationInput`](crate::operation::readonly_operation::ReadonlyOperationInput).
    pub fn builder() -> crate::operation::readonly_operation::builders::ReadonlyOperationInputBuilder
    {
        crate::operation::readonly_operation::builders::ReadonlyOperationInputBuilder::default()
    }
}

/// A builder for [`ReadonlyOperationInput`](crate::operation::readonly_operation::ReadonlyOperationInput).
#[non_exhaustive]
#[derive(
    ::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug,
)]
pub struct ReadonlyOperationInputBuilder {
    pub(crate) required_string: ::std::option::Option<::std::string::String>,
    pub(crate) optional_string: ::std::option::Option<::std::string::String>,
}
impl ReadonlyOperationInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn required_string(
        mut self,
        input: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        self.required_string = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_required_string(
        mut self,
        input: ::std::option::Option<::std::string::String>,
    ) -> Self {
        self.required_string = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_required_string(&self) -> &::std::option::Option<::std::string::String> {
        &self.required_string
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn optional_string(
        mut self,
        input: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        self.optional_string = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_optional_string(
        mut self,
        input: ::std::option::Option<::std::string::String>,
    ) -> Self {
        self.optional_string = input;
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_optional_string(&self) -> &::std::option::Option<::std::string::String> {
        &self.optional_string
    }
    /// Consumes the builder and constructs a [`ReadonlyOperationInput`](crate::operation::readonly_operation::ReadonlyOperationInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<
        crate::operation::readonly_operation::ReadonlyOperationInput,
        ::aws_smithy_types::error::operation::BuildError,
    > {
        ::std::result::Result::Ok(
                crate::operation::readonly_operation::ReadonlyOperationInput {
                    required_string: self.required_string.ok_or_else(|| {
                        ::aws_smithy_types::error::operation::BuildError::missing_field(
                            "required_string",
                            "required_string was not specified but it is required when building GetRefinementInput",
                        )
                    })?,
                    optional_string: self.optional_string,
                },
            )
    }
}
