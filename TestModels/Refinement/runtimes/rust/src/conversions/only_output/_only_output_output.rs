// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(dead_code)]
pub fn to_dafny(
    value: crate::operation::only_output::OnlyOutputOutput,
) -> ::std::rc::Rc<
    crate::implementation_from_dafny::r#_simple_drefinement_dinternaldafny_dtypes::OnlyOutputOutput,
> {
    let crate::operation::only_output::OnlyOutputOutput { value } = value;

    let optional_string = match value {
        Some(s) => crate::implementation_from_dafny::_Wrappers_Compile::Option::Some { value: dafny_runtime::dafny_runtime_conversions::unicode_chars_false::string_to_dafny_string(&s) },
        None => crate::implementation_from_dafny::_Wrappers_Compile::Option::None {},
    };

    ::std::rc::Rc::new(crate::implementation_from_dafny::r#_simple_drefinement_dinternaldafny_dtypes::OnlyOutputOutput::OnlyOutputOutput {
        value: ::std::rc::Rc::new(optional_string)
  })
}

#[allow(dead_code)]
pub fn from_dafny(
    dafny_value: ::std::rc::Rc<
        crate::implementation_from_dafny::r#_simple_drefinement_dinternaldafny_dtypes::OnlyOutputOutput,
    >,
) -> crate::operation::only_output::OnlyOutputOutput {
    let crate::implementation_from_dafny::r#_simple_drefinement_dinternaldafny_dtypes::OnlyOutputOutput::OnlyOutputOutput { value } = dafny_value.as_ref();

    let optional_string = match value.as_ref() {
        crate::implementation_from_dafny::_Wrappers_Compile::Option::None {} => ::std::option::Option::None,
        crate::implementation_from_dafny::_Wrappers_Compile::Option::Some { value } => ::std::option::Option::Some(dafny_runtime::dafny_runtime_conversions::unicode_chars_false::dafny_string_to_string(&value)),
        crate::implementation_from_dafny::_Wrappers_Compile::Option::_PhantomVariant(_) => unreachable!(),
    };

    crate::operation::only_output::OnlyOutputOutput {
        value: optional_string,
    }
}
