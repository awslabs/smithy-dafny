AWSTemplateFormatVersion: "2010-09-09"
Description: "IAM Roles that use policies from CA.yaml to access CA"
Parameters:
  CAStackName:
    Type: String
    Description: The name of CFN Stack that creates the CodeArtifact resources
    Default: Polymorph-CA
  ProjectName:
    Type: String
    Description: A prefix that will be applied to any names
    Default: Polymorph

Outputs:
  # This policy COULD be imported by stack that creates the ToolsDevelopment role
  ToolDevelopmentAssumePolicyArn:
    Description: "Arn for IAM Policy that can Assume Roles created for Polymorph CA"
    Value: !Ref ToolDevelopmentAssumePolicy
    Export:
      Name: !Sub '${AWS::StackName}-ToolDevelopmentAssumePolicyArn'

Resources:
  CASourceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${ProjectName}-CA-SourceRole-${AWS::Region}"
      Description: "For the Source Repo, allows Publish, Pull, and Delete"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${CAStackName}-GitHubCAReadWriteDeletePolicyArn"
      # This is missing the GitHub ODIC, which I do not have in my account
      # Really, that ODIC should be exported by a stack
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/ToolsDevelopment"
            Action: 'sts:AssumeRole'

  CAPullRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${ProjectName}-CA-PullRole-${AWS::Region}"
      Description: "For consuming Repos, only allows Pull"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${CAStackName}-GitHubCAReadPolicyArn"
      # This is missing the GitHub ODIC, which I do not have in my account
      # Really, that ODIC should be exported by a stack
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:role/ToolsDevelopment"
            Action: 'sts:AssumeRole'

  ToolDevelopmentAssumePolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Description: "Allows Tools Development to assume roles defined for Polymorph CA"
      ManagedPolicyName: !Sub "Assume-${ProjectName}-CA-Roles-${AWS::Region}"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
              - 'sts:AssumeRoleWithSAML'
              - 'sts:AssumeRoleWithWebIdentity'
            Resource:
              - !GetAtt CASourceRole.Arn
              - !GetAtt CAPullRole.Arn
