plugins {
    id("software.amazon.smithy.gradle.smithy-jar").version("1.1.0") 
    id("org.dafny.dafny").version("0.1.0")
    id("software.amazon.smithy.gradle.polymorph").version("0.1.0")
}

dafny {
    dafnyVersion.set("4.8.1")

    optionsMap.put("resource-limit", 90_000_000)
    optionsMap.put("function-syntax", "3")
    optionsMap.put("unicode-char", false)
    optionsMap.put("cores", <calculate cores as currently in SmithyDafnyMakefile.mk>)
    // ...and other Dafny-specific configuration.
    // The Dafny Gradle plugin will be updated to generate a dfyconfig.toml,
    // so to do local development you'll just want to build once first.
    // This is common for Brazil development especially.

    // The Dafny project can make use of replaceable modules.
    // The polymorph plugin will take those into account as input,
    // copying as necessary into the right places in build/polymorph/<lang>/...
}

polymorph {
    services.add("aws.cryptography.materialProviders#AwsCryptographicMaterialProviders")
    services.add("aws.cryptography.keyStore#KeyStore")

    // Configures what target languages this build will polymorph for you,
    // into paths like build/polymorph/targets/java/...
    targets {
      java {}
      rust {}
      python {}
      go {}
      net {}
    }

    // Pluggable mechanism for templating things like project files.
    // Follows the Smithy example: something like smithy-typescript
    // will create a simple, functional package.json,
    // whereas aws-sdk-js-v3 codegen will create a much richer one
    // with AWS branding/licensing/etc.
    conventions.set("aws.cryptography")
}

dependencies {
    // Dependencies for the Smithy model
    implementation("software.amazon.smithy:smithy-model:1.28.0")
    implementation("software.amazon.smithy:smithy-aws-traits:1.28.0")
    implementation("software.amazon.smithy:smithy-rules-engine:1.28.0")

    // Smithy build plugin for Dafny server (library) SDK codegen.
    smithyBuild("software.amazon.smithy.dafny:dafny-server-codegen:0.1.0")

    // Dafny API generated from Smithy model.
    // Will be a full project also using the Dafny Gradle plugin,
    // generated by the software.amazon.smithy.gradle.smithy-jar plugin,
    // and therefore located in build/smithyprojections/source/dafny-library-codegen/AwsCryptographicMaterialProviders-API.
    // This is very similar to the workflow for building Smithy-based servers, 
    // ala https://smithy.io/2.0/tutorials/full-stack-tutorial.html#generating-the-server-sdk
    api("aws.cryptography.materialProviders:Dafny-AwsCryptographicMaterialProviders-API:1.0-SNAPSHOT")
    api("aws.cryptography.keyStore:Dafny-AwsCryptographyKeyStore-API:1.0-SNAPSHOT")

    // Polymorphed dependencies.
    //
    // Most of these will already be transitive Dafny-*-API dependencies.
    // Polymorphing will automatically map them to their target language equivalent,
    // based on the metadata that Smithy/Polymorph adds.
    // In practice these will often be inside the same repo and configured as sister Gradle projects,
    // so it's easy to build recursively when you want to.
    //
    implementation("software.amazon.awssdk:Dafny-DynamoDB:1.0-SNAPSHOT")
    implementation("software.amazon.awssdk:Dafny-KMS:1.0-SNAPSHOT")
    implementation("aws.cryptography.primitives:Dafny-AwsCryptographicPrimitives:1.0-SNAPSHOT")
}